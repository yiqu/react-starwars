{"version":3,"file":"static/js/573.696e1a43.chunk.js","mappings":"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","sources":["404/ErrorPage.tsx","create-new/schemas/all-schemas.ts","personal-movies/utils/table.utils.ts","personal-movies/edit-dialog/EditDialog.tsx","personal-movies/all/PersonalFilmsTableFilter.tsx","personal-movies/store/personal-films.selectors.ts","shared/components/dialog/ConfirmDialog.tsx","personal-movies/all/PersonalFilmsTable.tsx","core/store/entities/entities.selectors.ts","shared/form/m-datepicker/FormDatepicker.tsx","personal-movies/new-film/NewPersonalFilmForm.tsx","personal-movies/new-film/NewPersonalFilmDialog.tsx","personal-movies/new-film/NewPersonalFilm.tsx","personal-movies/all/PersonalFilmsAll.tsx","shared/components/date/DateDisplay2.tsx","shared/components/date/DurationDisplay.tsx","shared/components/layouts/LayoutWithGutter.tsx","shared/components/progress/CircleProgress.tsx","shared/components/toolbar/Toolbar.tsx","shared/form/m-input/FormInput.tsx","shared/form/m-textarea/FormTextArea.tsx","shared/hooks/useDebounce.ts","shared/hooks/useIsMobile.ts","webpack://starwars/./src/shared/loading/full-logo/LoadingLogo.module.scss?618b","shared/loading/full-logo/LoadingLogo.tsx","shared/utils/general.utils.ts","store/appHook.ts"],"sourcesContent":["import { Box, Stack, Typography } from \"@mui/material\";\n\nexport interface ErrorPageProp {\n  reason?: string;\n  debug?: any;\n}\n\nexport default function ErrorPage({ reason, debug }: ErrorPageProp) {\n\n  return (\n    <Box marginY={ 5 } width=\"100%\">\n      <Stack direction=\"column\" spacing={ 5 } justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" sx={ {textTransform:'uppercase'} }>\n          An error has occurred!\n        </Typography>\n\n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            REASON\n          </Typography>\n          <Typography variant=\"body2\">\n            { reason }\n          </Typography>\n        </Stack>\n        \n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            DEBUG\n          </Typography>\n          <Typography variant=\"body2\" component=\"div\">\n            <pre>\n              <code style={ {display: 'flex', textAlign: 'center'} }>\n                { JSON.stringify(debug) }\n              </code>\n            </pre>\n          </Typography>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};","import * as Yup from 'yup';\n\nexport const newFilmValidationSchema = Yup.object({\n  title: Yup.string().required(),\n  director: Yup.string().required().min(1),\n  openingCrawl: Yup.string().required('Opening crawl text is a required field').min(5, 'At least 5 characters is required for crawl text'),\n  characters: Yup.array().min(1, \"At least one character is required\"),\n  starships: Yup.array().min(1,  \"At least one starship is required\"),\n  planets: Yup.object().required(\"Planet is a required field\"),\n  species: Yup.array().min(1,  \"At least one species is required\"),\n  vehicles: Yup.array().min(1,  \"At least one vehicle is required\"),\n});\n\nexport const newPersonalFilmValidationSchema = Yup.object({\n  title: Yup.string().required(),\n  director: Yup.string().required().min(1),\n  producer: Yup.string().required().min(1),\n  episode_id: Yup.number().required().min(1),\n  opening_crawl: Yup.string().required('Opening crawl text is a required field').min(5, 'At least 5 characters is required for crawl text'),\n  release_date:  Yup.string().required().min(1),\n  characters: Yup.array().min(1, \"At least one character is required\"),\n  starships: Yup.array().min(1,  \"At least one starship is required\"),\n  planets: Yup.array().min(1,  \"At least one planet is required\"),\n  species: Yup.array().min(1,  \"At least one species is required\"),\n  vehicles: Yup.array().min(1,  \"At least one vehicle is required\"),\n});\n\nexport const editFilmValidationSchema = Yup.object().shape({\n  title: Yup.string().trim().min(2).required(),\n  director: Yup.string().trim().min(2).required(),\n});","import { startCase } from \"lodash\";\n\nexport const TABLE_COLUMNS = ['title',  'openingCrawl', 'director', 'canon', 'planets', 'species', 'starships', 'vehicles'] as const;\n\nexport const smallHeaderIds = ['canon'];\nexport const largeHeaderIds = ['openingCrawl'];\n\nexport const ellipsis: any = {\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n};\n\nexport const transformColumnName = (colId: string) => {\n  let result = colId;\n  switch (colId) {\n    case \"openingCrawl\": {\n      result = 'Opening Crawl';\n      break;\n    }\n    default: {\n      result = startCase(colId);\n    }\n  }\n  return result;\n};","import { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Typography, Divider, Stack } from \"@mui/material\";\nimport { PersonalFilm } from \"../store/personal-films.state\";\nimport { Form, Formik, FormikHelpers, useFormikContext } from \"formik\";\nimport FormInput from \"src/shared/form/m-input/FormInput\";\nimport { editFilmValidationSchema } from \"src/create-new/schemas/all-schemas\";\nimport { Check, Clear, Remove } from \"@mui/icons-material\";\nimport EditRoadIcon from '@mui/icons-material/EditRoad';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\n\nexport interface EditDialogProps {\n  open: boolean;\n  film?: PersonalFilm;\n  onDialogClose: (update?: Partial<PersonalFilm>) => void;\n}\n\nfunction EditDialog({ open, film, onDialogClose }: EditDialogProps) {\n\n  const handleClose = (event: object, reason: 'escapeKeyDown' | 'backdropClick') => {\n    onDialogClose();\n  };\n\n  const handleCancel = () => {\n    onDialogClose(undefined);\n  };\n  \n\n  const handleOnSubmit = (values: Partial<PersonalFilm>, helper: FormikHelpers<FilmEdit>) => {\n    onDialogClose({\n      fireKey: film?.fireKey,\n      ...values\n    });\n  };\n\n  return (\n    <Dialog\n      disableEscapeKeyDown\n      open={ open }\n      maxWidth=\"lg\"\n      onClose={ handleClose }\n    >\n      <Formik initialValues={ {\n          title: film?.title ?? '',\n          director: film?.director ?? '',\n        } }\n        onSubmit={ handleOnSubmit }\n        validationSchema={ editFilmValidationSchema }\n        validateOnChange\n      >\n        <EditForm cancel={ handleCancel } film={ film } />\n      </Formik>\n    </Dialog>\n  );\n}\n\nexport default EditDialog;\n\nexport interface EditFormProps {\n  cancel: () => void;\n  film?: PersonalFilm;\n}\n\nfunction EditForm({ cancel, film }: EditFormProps) {\n\n  const { values, submitForm, dirty, errors, isValid } = useFormikContext();\n\n  const handleCancelAction = () => {\n    cancel();\n  };\n\n  return (\n    <Form>\n      <DialogTitle minWidth={ '30rem' } sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? 'primary.main' : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#fff' : null} }>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack>\n            <Typography variant=\"body2\">Edit { film?.title } { dirty && '*' }</Typography>\n            <Typography variant=\"caption\">By: {film?.director} </Typography>\n          </Stack>\n          <Stack direction=\"row\" justifyContent=\"end\" alignItems=\"center\">\n            { dirty ? (isValid ? <Check color=\"success\" /> : <ErrorOutlineIcon color=\"error\" />) : '' }\n          </Stack>\n        </Stack>\n      </DialogTitle>\n      <Divider flexItem variant=\"fullWidth\" />\n\n      <DialogContent>\n        <Stack spacing={ 2 } width=\"100%\">\n          <FormInput name=\"title\" label=\"Title\" showLabel type=\"text\" />\n          <FormInput name=\"director\" label=\"Director\" showLabel type=\"text\" />\n        </Stack>\n      </DialogContent>\n      <Divider flexItem variant=\"fullWidth\" />\n      <DialogActions>\n        <Button onClick={ handleCancelAction } size=\"small\">Cancel</Button>\n        <Button size=\"small\" type=\"submit\" disabled={ !isValid }>Save</Button>\n      </DialogActions>\n    </Form>\n  );\n};\n\n\nexport interface FilmEdit {\n  title: string;\n  director: string;\n}\n\n","import { Clear } from \"@mui/icons-material\";\nimport { Box, FormControl, IconButton, Input, InputAdornment, InputLabel, TextField } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDebounce } from \"src/shared/hooks/useDebounce\";\n\nexport interface TableFilterProp {\n  onFilterChange: (filters: QueryFilter[]) => void;\n}\n\nfunction TableFilter({ onFilterChange }: TableFilterProp) {\n\n  const [localFilter, setLocalFilter] = useState<FilterValue>(getDefaultFilter);\n  const debouncedFilter = useDebounce<FilterValue>(localFilter, 500);\n\n  useEffect(() => {\n    const filtersToEmit: QueryFilter[] = [];\n    Object.keys(debouncedFilter).forEach((key) => {\n      if (key === 'name' || key === 'director') {\n        if (debouncedFilter[key].trim() !== '') {\n          const q: QueryFilter = {property: key, criteria: 'EQ', value: debouncedFilter[key]};\n          filtersToEmit.push(q);\n        }\n      }\n    });\n    onFilterChange(filtersToEmit);\n  }, [debouncedFilter, onFilterChange]);\n\n  const handleTextFilterChange = (filterType: string) => (e: any) => {\n    setLocalFilter((current) => {\n      return {\n        ...current,\n        [filterType]: e.target.value\n      };\n    });\n  };\n\n  const handleRestTextFilter = (filterType: string) => () => {\n    setLocalFilter((current) => {\n      return {\n        ...current,\n        [filterType]: ''\n      };\n    });\n  };\n\n  return (\n    <Box width=\"100%\">\n      <FormControl fullWidth variant=\"standard\">\n        <InputLabel >Filter by Title</InputLabel>\n        <Input size=\"medium\"\n          onChange={ handleTextFilterChange('name') }\n          value={ localFilter.name }\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton size=\"small\"\n                onClick={ handleRestTextFilter('name') }\n              >\n                {<Clear />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </Box>\n  );\n}\n\nexport default TableFilter;\n\nexport interface FilterValue {\n  name: string;\n  director: string;\n}\n\nexport interface QueryFilter {\n  property: string;\n  criteria: \"EQ\" | \"IN\";\n  value: string;\n}\n\nfunction getDefaultFilter() {\n  return {\n    name: '',\n    director: ''\n  };\n}","import { createSelector, createAction, createDraftSafeSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"src/store/appStore\";\nimport { QueryFilter } from \"../all/PersonalFilmsTableFilter\";\n\nconst personalFilmsConfigSlice = (state: RootState) => {\n  return state[\"personal-films-config\"];\n};\n\n\nexport const selectPersonalFilmsFilters = createSelector(\n  personalFilmsConfigSlice,\n  (state): QueryFilter[] => {\n    return state.queryFilters;\n  }\n);","import { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Divider } from \"@mui/material\";\nimport { BaseSyntheticEvent } from \"react\";\n\nexport interface ConfirmDialogProps {\n  open?: boolean;\n  handleClose: (choice: boolean) => void;\n  title?: string;\n  message?: string;\n}\n\nexport default function ConfirmDialog({ open, handleClose, title, message }: ConfirmDialogProps) {\n\n  const onCloseHandler = (event: object, reason: string) => {\n    handleClose(false);\n  };\n\n  const onActionClickHandler = (action: boolean) => (e: BaseSyntheticEvent) => {\n    handleClose(action);\n  };\n\n  return (\n    <Dialog\n      open={ !!open }\n      onClose={ onCloseHandler }\n    >\n      <DialogTitle id=\"confirm-dialog\" sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? 'primary.main' : null, \n        color: (theme) => theme.palette.mode === 'light' ? '#fff' : null} }>\n        { title ?? 'Confirmation' }\n      </DialogTitle>\n      <Divider flexItem variant=\"fullWidth\" />\n      <DialogContent>\n        <DialogContentText id=\"confirm-dialog-description\">\n          {message ?? 'Are you sure?'}\n        </DialogContentText>\n      </DialogContent>\n      <Divider flexItem variant=\"fullWidth\" />\n      <DialogActions>\n        <Button onClick={ onActionClickHandler(false) } variant=\"outlined\">Cancel</Button>\n        <Button onClick={ onActionClickHandler(true) } autoFocus>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","import { Box, Chip, CircularProgress, IconButton, LinearProgress, ListItemIcon, ListItemText, Menu, MenuItem, Pagination, Paper, Stack, TableSortLabel, TextField, Typography, styled } from \"@mui/material\";\nimport { PersonalFilm, PersonalFilmActions, PersonalFilmTableHeaderActions } from \"../store/personal-films.state\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { GREY } from \"src/theme/palette\";\nimport { startCase } from \"lodash\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport DensityLargeIcon from '@mui/icons-material/DensityLarge';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { useCallback, useState } from \"react\";\nimport TuneIcon from '@mui/icons-material/Tune';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { Delete, Edit } from \"@mui/icons-material\";\nimport { TABLE_COLUMNS, ellipsis, largeHeaderIds, smallHeaderIds, transformColumnName } from \"../utils/table.utils\";\nimport EditDialog, { FilmEdit } from \"../edit-dialog/EditDialog\";\nimport TableFilter, { QueryFilter } from \"./PersonalFilmsTableFilter\";\nimport { useAppDispatch, useAppSelector } from \"src/store/appHook\";\nimport { updateFilters } from \"../store/personal-films.reducer\";\nimport { selectPersonalFilmsFilters } from \"../store/personal-films.selectors\";\nimport { useDeletePersonalFilmMutation, useUpdatePersonalFilmMutation } from \"../store/personal-films.api\";\nimport ConfirmDialog from \"src/shared/components/dialog/ConfirmDialog\";\nimport { toast } from \"react-hot-toast\";\n\n\nexport interface PersonalFilmsTableProps {\n  films: PersonalFilm[];\n  loading?: boolean;\n}\n\n// FASLE: fit to screen\nconst tableFitToScreen: boolean = true;\n\nfunction PersonalFilmsTable({ films, loading }: PersonalFilmsTableProps) {\n\n  const { isAboveXl } = useScreenSize();\n  const dispatch = useAppDispatch();\n  const [openEdit, setOpenEdit] = useState<{open: boolean, film?: PersonalFilm}>({open: false, film: undefined});\n  const [openConfirmDelete, setOpenConfirmDelete] = useState<{open: boolean, film?: PersonalFilm}>({open: false, film: undefined});\n  const filters = useAppSelector(selectPersonalFilmsFilters);\n  const [updatePersonalFilm, resultPersonalFilm] = useUpdatePersonalFilmMutation();\n  const [deletePersonalFilm, deleteResult] = useDeletePersonalFilmMutation();\n\n\n  const handleOpenEditDialog = (toEdit: PersonalFilm) => {\n    setOpenEdit({open: true, film: toEdit});\n  };\n\n  const handleDialogClose = (editedFilm?: Partial<PersonalFilm>) => {\n    setOpenEdit((current) => {\n      return {\n        ...current,\n        open: false\n      };\n    });\n    \n    if (editedFilm && editedFilm.fireKey) {\n      updatePersonalFilm({\n        fireKey: editedFilm.fireKey,\n        data: editedFilm\n      });\n    }\n  };\n\n  const handleConfirmDelete = (choice: boolean) => {\n    setOpenConfirmDelete((current) => {\n      return {\n        ...current,\n        open: false\n      };\n    });\n    if (choice && openConfirmDelete.film?.fireKey) {\n      const delete$ = deletePersonalFilm(openConfirmDelete.film.fireKey);\n      delete$.then((res) => toast.success(`${openConfirmDelete.film?.title} deleted successfully!`));\n    }\n  };\n\n  const handleCellMenuAction = (film: PersonalFilm) => (actionId: PersonalFilmActions) => {\n    switch (actionId) {\n      case 'edit': {\n        handleOpenEditDialog(film);\n        break;\n      }\n      case 'delete': {\n        setOpenConfirmDelete({open: true, film});\n        break;\n      }\n    }\n  };\n\n  const handleHeaderMenuClick = (colId: string) => (actionId: PersonalFilmTableHeaderActions) => {\n  };\n\n  const handleFilterChange = useCallback((filters: QueryFilter[]) => {\n    dispatch(updateFilters(filters));\n  }, [dispatch]);\n\n\n  return (\n    <Box width=\"100%\">\n      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mb={ 2 }>\n        <Box flexBasis=\"30%\">\n          <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n            <TableFilter onFilterChange={ handleFilterChange } />\n          </Stack>\n        </Box>\n        { isAboveXl && <DensityLargeIcon fontSize=\"small\" titleAccess=\"Above large size screen\" /> }\n        <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n          <Box mr={ 2 }>\n            1 - {films.length} / {films.length}\n          </Box>\n          <Pagination count={ 10 } showFirstButton showLastButton size=\"small\" />\n        </Stack>\n        \n      </Stack>\n      <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\" mb={ 2 }>\n        {\n          filters.map((fil) => {\n            return (\n              <Chip key={ fil.criteria+fil.value } label={ `${fil.property}: ${fil.value}` } color=\"warning\" />\n            );\n          })\n        }\n      </Stack>\n      <Box height=\"5px\">\n        { (loading || deleteResult.isLoading) && <LinearProgress color=\"success\" /> }\n      </Box>\n      <TableContainer component={ Paper } elevation={ 0 } sx={ { overflowX: 'hidden', '&:hover': {overflowX: 'auto'}} }>\n        <Table size=\"medium\" aria-label=\"table\" stickyHeader  style={ { width: '100%', tableLayout: 'fixed' } }>\n          <TableHead>\n            <TableRow>\n              {\n                TABLE_COLUMNS.map((col, index) => {\n                  return (\n                    <StyledHeaderCell \n                      key={ col } \n                      style={ col === 'title' ? {...stickyHeaderClass as any} : (smallHeaderIds.includes(col) ? {...smallHeaderCell} : (largeHeaderIds.includes(col) ? {...crawlHeaderCell} : {...regularHeaderCell})) }\n                    >\n                      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" overflow=\"hidden\">\n                        <TableSortLabel active={ false } direction=\"asc\" style={ { width: 'calc(100% - 30px)'} }>\n                          <Box style={ {...ellipsis} }  title={ `${transformColumnName(col)}` } >\n                            { transformColumnName(col) }\n                          </Box>\n                        </TableSortLabel>\n                        <TableHeaderMenu onMenuActionClick={ handleHeaderMenuClick(col) } />\n                      </Stack>\n                    </StyledHeaderCell>\n                  );\n                })\n              }\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {\n              films.map((film: PersonalFilm) => (\n                <TableRow\n                  key={ film.fireKey }\n                  sx={ { '&:hover': {backgroundColor: GREY[300]}, opacity: film.isWorking ? 0.6 : 1 } }\n                >\n                  {\n                    TABLE_COLUMNS.map((col, index) => {\n                      return (\n                        <StyledDataCell key={ `${film.fireKey}${index}` }\n                          style={ col === 'title' ? {...stickyDataCellClass as any} : {} }\n                        >\n                          { transformTableData(film, col, handleCellMenuAction(film)) }\n                        </StyledDataCell>\n                      );\n                    })\n                  }\n                </TableRow>\n              ))\n            }\n          </TableBody>\n\n        </Table>\n      </TableContainer>\n\n      {\n        <EditDialog open={ openEdit.open } film={ openEdit.film } onDialogClose={ handleDialogClose } />\n      }\n\n      {\n        <ConfirmDialog open={ openConfirmDelete.open } handleClose={ handleConfirmDelete } title={ `Delete ${openConfirmDelete.film?.title} ?` } message=\"This action cannot be reversed.\" />\n      }\n      \n    </Box>\n  );\n}\n\nexport default PersonalFilmsTable;\n\n\nexport function TableHeaderMenu({ onMenuActionClick }: { onMenuActionClick: (actionId: PersonalFilmTableHeaderActions) => void }) {\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuActionClick = (actionId: PersonalFilmTableHeaderActions) => (e: any) => {\n    onMenuActionClick(actionId);\n    handleClose();\n  };\n  \n\n  return (\n    <div data-tooltip-id=\"tooltip\" data-tooltip-content={ `Options` } data-tooltip-offset={ 20 }>\n      <IconButton aria-label=\"delete\" size=\"small\" onClick={ handleMenuClick }>\n        <MoreVertIcon fontSize=\"small\" />\n      </IconButton>\n      <Menu\n        id=\"menu\"\n        anchorEl={ anchorEl }\n        open={ open }\n        onClose={ handleClose }\n        MenuListProps={ {\n          'aria-labelledby': 'basic-button',\n        } }\n      >\n        <MenuItem onClick={ handleMenuActionClick('adjust-width') } dense >\n          <ListItemIcon>\n            <TuneIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>Adjust Width</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={ handleMenuActionClick('hide') } dense>\n          <ListItemIcon>\n            <VisibilityOffIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>Hide</ListItemText>\n        </MenuItem>\n      </Menu>\n    </div>\n    \n  );\n}\n\n\nfunction transformTableData(film: PersonalFilm, columnId: typeof TABLE_COLUMNS[number], onMenuClick: (actionId: PersonalFilmActions) => void) {\n  \n  const handleTitleCellMenuAction = (actionId: PersonalFilmActions) => {\n    onMenuClick(actionId);\n  };\n\n  switch (columnId) {\n    case 'canon': {\n      return <span> { film.canon ? 'Yes' : 'No'} </span>;\n    }\n    case 'director': {\n      return <span data-tooltip-id=\"tooltip\"\n      data-tooltip-content={ `${film.director}` }> { film.director } </span>;\n    }\n    case 'openingCrawl': {\n      return <span data-tooltip-id=\"tooltip\"\n      data-tooltip-content={ `${film.openingCrawl}` }> { film.openingCrawl } </span>;\n    }\n    case 'planets': {\n      return <span data-tooltip-id=\"tooltip\"\n      data-tooltip-content={ `${film.planets.name}` }> { film.planets.name } </span>;\n    }\n    case 'species': {\n      return <span data-tooltip-id=\"tooltip\"\n      data-tooltip-content={ `${film.species.map((s) => s.name).join(', ')}` }> { film.species.length } </span>;\n    }\n    case 'starships': {\n      return <span data-tooltip-id=\"tooltip\"\n      data-tooltip-content={ `${film.starships.map((s) => s.name).join(', ')}` }> { film.starships.length } </span>;\n    }\n    case 'title': {\n      return (\n        <TableTitleCell title={ film.title } isWorking={ film.isWorking } onMenuActionClick={ handleTitleCellMenuAction } />\n      );\n    }\n    case 'vehicles': {\n      return <span data-tooltip-id=\"tooltip\"\n      data-tooltip-content={ `${film.vehicles.map((s) => s.name).join(', ')}` }> { film.vehicles.length } </span>;\n    }\n    default: {\n      return <span> TBD </span>;\n    }\n  }\n}\n\nexport function TableTitleCell({ title, isWorking, onMenuActionClick }: { title: string; isWorking?: boolean; onMenuActionClick: (actionId: PersonalFilmActions) => void }) {\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleTitleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuActionClick = (actionId: PersonalFilmActions) => (e: any) => {\n    onMenuActionClick(actionId);\n    handleClose();\n  };\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" title={ title }>\n      <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\" style={ {...ellipsis} }>\n        <Typography style={ {...ellipsis, marginRight: '10px'} }>\n          { title }\n        </Typography>\n        {\n          isWorking && <div>\n            <CircularProgress color=\"inherit\" size={ 13 } />\n          </div>\n        }\n      </Stack>\n      \n      <IconButton aria-label=\"delete\" size=\"small\" onClick={ handleTitleMenuClick } >\n        <MoreVertIcon fontSize=\"small\" />\n      </IconButton>\n      <Menu\n        id=\"menu\"\n        anchorEl={ anchorEl }\n        open={ open }\n        onClose={ handleClose }\n      >\n        <MenuItem onClick={ handleMenuActionClick('edit') } dense >\n          <ListItemIcon>\n            <Edit fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>Edit</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={ handleMenuActionClick('delete') } dense>\n          <ListItemIcon>\n            <Delete fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </Stack>\n  );\n}\n\n\nconst StyledHeaderCell = styled(TableCell)(() => ({\n  ...ellipsis,\n  paddingTop: '10px',\n  paddingBottom: '10px',\n  fontSize: '15px',\n  borderRight: `1px solid ${GREY[400]}`,\n  borderColor: GREY[400],\n  backgroundColor: GREY[200],\n}));\n\nconst StyledDataCell = styled(TableCell)(() => ({\n  ...ellipsis,\n  paddingTop: '10px',\n  paddingBottom: '10px',\n  fontSize: '14px',\n  borderRight: `1px solid ${GREY[300]}`,\n  borderBottom: \"none\",\n  maxWidth: '22rem', // the max width data cells can have\n}));\n\nconst stickyHeaderClass = {\n  position: 'sticky',\n  left: 0,\n  zIndex: 3,\n  width:'18rem' // initial for no table scrollbar\n};\n\nconst stickyDataCellClass = {\n  position: 'sticky',\n  left: 0, \n  minWidth: '18rem', // initial for no table scrollbar\n  maxWidth: '18rem',\n  backgroundColor: '#fff'\n};\n\n// rest\nconst regularHeaderCell = {\n  width: tableFitToScreen ? 'initial' : '16rem'  // initial for no table scrollbar\n};\n\nconst crawlHeaderCell = {\n  width: tableFitToScreen ? 'initial': '20rem'  // initial for no table scrollbar\n};\n\n// canon\nconst smallHeaderCell = {\n  width: tableFitToScreen ? 'initial' : '9rem' // initial for no table scrollbar\n};\n\n\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { BASE_SW_API } from \"src/shared/api/endpoints\";\nimport { RootState } from \"src/store/appStore\";\nimport { EntityType } from \"./entities.state\";\n\nconst swapiConfigSlice = (state: RootState) => {\n  return state.swEntitiesConfig;\n};\n\n\nexport const selectNextPageUrl = (entityId: EntityType) => createSelector(\n  swapiConfigSlice,\n  (slice): string | null | undefined=> {\n    return slice.pagination[entityId]?.pagination.next;\n  }\n);\n\nexport const selectFetchPageUrl = (entityId: EntityType) => createSelector(\n  swapiConfigSlice,\n  (slice): string => {\n    return slice.pagination[entityId]?.pagination.fetchUrl ?? `${BASE_SW_API}${entityId.toLowerCase()}?page=1&limit=10`;\n  }\n);","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { ErrorMessage, Field, Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport { FormDatepickerProps, FormikInputProps, FormInput2Props, FormInputProps } from 'src/shared/models/form.model';\nimport { FormControl, FormHelperText, InputLabel } from '@mui/material';\nimport { upperFirst, startCase } from 'lodash';\nimport { DatePicker, DatePickerProps } from '@mui/x-date-pickers';\n\n\nconst FormDatepicker = ({ label, name, validate, \n    disabled, placeholder, variant, ...props}: FormDatepickerProps) => {\n      \n  const formik = useFormikContext<any>();\n  return (\n    <FormControl fullWidth>\n      <Field as={ DatePicker } \n        label={ startCase(label) } \n        formatDensity=\"spacious\"\n        name={ name } \n        id={ name }\n        error={ formik.touched[name] && !!formik.errors[name] }\n        validate={ validate }\n        disabled={ disabled }\n        slotProps={ {\n          textField: {size: 'medium'}\n        } }\n        { ...props.props } />\n\n      <FormHelperText id={ `${name}-helper-text` } error={ formik.touched[name] && !!formik.errors[name] } sx={ {ml: 0} } >\n        {\n          (formik.touched[name] && formik.errors[name]) ? \n            (<ErrorMessage name={ name } render={ (err) => upperFirst(err) } />) : (<>{props.helperText}</>)\n        }\n      </FormHelperText>\n\n    </FormControl>\n  );\n};\n\nexport default FormDatepicker;","import { Dialog, DialogActions, Button, DialogTitle, IconButton, Stack, Divider, DialogContent, FormControl, InputLabel, Select, \n  OutlinedInput, Box, Chip, SelectChangeEvent, Typography, Checkbox, ListItemText, TextField, FormHelperText, LinearProgress } from \"@mui/material\";\nimport MenuItem from '@mui/material/MenuItem';\nimport SaveIcon from '@mui/icons-material/Save';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport { ErrorMessage, Field, FieldInputProps, FieldMetaProps, Form, Formik, FormikContextType, useFormikContext } from \"formik\";\nimport { useCallback, useEffect, useRef, useState, memo } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"src/store/appHook\";\nimport { selectFetchPageUrl, selectNextPageUrl } from \"src/core/store/entities/entities.selectors\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { dispatchPaging } from \"src/core/store/entities/entities.reducer\";\nimport { useFetchEntitiesInfiniteQuery, useLazyFetchEntitiesInfiniteQuery } from \"src/core/store/entities/entities.api\";\nimport { EntityType } from \"src/core/store/entities/entities.state\";\nimport { StarwarsContent } from \"src/shared/models/starwars.model\";\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport { getFilledIcon } from \"src/shared/utils/left-nav.utils\";\nimport FormInput from \"src/shared/form/m-input/FormInput\";\nimport moment from \"moment\";\nimport FormTextArea from \"src/shared/form/m-textarea/FormTextArea\";\nimport FormDatepicker from \"src/shared/form/m-datepicker/FormDatepicker\";\nimport { upperFirst } from \"lodash\";\nimport { FormikFieldArgs } from \"src/shared/models/form.model\";\n\nfunction NewFilmForm() {\n\n  const { isValid, setFieldValue, resetForm, isSubmitting } = useFormikContext();\n  \n  const handleReset = () => {\n    resetForm();\n  };\n\n  const handleOnValueChange = useCallback((entity: string, val: StarwarsContent[]) => {\n    setFieldValue(entity.toLowerCase(), val);\n  }, [setFieldValue]);\n\n  return (\n    <Form>\n      <DialogContent>\n        <Stack direction=\"column\" justifyContent=\"start\" alignItems=\"center\" width=\"100%\">\n          <MemoLocalField fieldName=\"Title\" type=\"text\" inputStyle=\"input\" />\n          <MemoLocalField fieldName=\"Director\" type=\"text\" inputStyle=\"input\" />\n          <MemoLocalField fieldName=\"Producer\" type=\"text\" inputStyle=\"input\" />\n          <MemoLocalField fieldName=\"Episode_id\" type=\"number\" inputStyle=\"input\" />\n          <MemoLocalField fieldName=\"Opening_crawl\" type=\"number\" inputStyle=\"area\" />\n          <MemoLocalField fieldName=\"release_date\" type=\"date\" inputStyle=\"date\" />\n        </Stack>\n        \n        <Stack direction=\"column\" justifyContent=\"start\" alignItems=\"center\" width=\"100%\">\n          <MemoRemoteField handleOnValueChange={ handleOnValueChange } fieldName=\"Planets\" />\n          <MemoRemoteField handleOnValueChange={ handleOnValueChange } fieldName=\"Characters\" />\n          <MemoRemoteField handleOnValueChange={ handleOnValueChange } fieldName=\"Vehicles\" />\n          <MemoRemoteField handleOnValueChange={ handleOnValueChange } fieldName=\"Starships\" />\n          <MemoRemoteField handleOnValueChange={ handleOnValueChange } fieldName=\"Species\" />\n        </Stack>\n\n      </DialogContent>\n        \n      <Divider flexItem variant=\"fullWidth\" />\n      <Box height=\"5px\" width=\"100%\">\n        { isSubmitting && <LinearProgress color=\"success\" /> }\n      </Box>\n      <DialogActions>\n        <Button variant=\"text\" startIcon={ <RestartAltIcon /> } onClick={ handleReset } disabled={ isSubmitting }>\n          Reset\n        </Button>\n        <Button variant=\"text\" startIcon={ <SaveIcon /> } disabled={ !isValid || isSubmitting } type=\"submit\">\n          Save\n        </Button>\n      </DialogActions>\n    </Form>\n  );\n}\n\nexport default NewFilmForm;\n\nfunction RemoteField({ handleOnValueChange, fieldName }: { handleOnValueChange: (entityId: string, val: StarwarsContent[]) => void, fieldName: EntityType }) {\n  return (\n    <Field name={ fieldName.toLowerCase() }>\n      {({\n        field, // { name, value, onChange, onBlur }\n        form, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n        meta,\n      }: FormikFieldArgs<StarwarsContent[]>) => {\n        return <RemoteSelect entityId={ fieldName } fields={ field } form={ form } meta={ meta } onValueChange={ handleOnValueChange } />;\n      }}\n    </Field>\n  );\n};\nconst MemoRemoteField = memo(RemoteField);\n\nfunction LocalField({ fieldName, type, inputStyle }: { fieldName: string, type: string, inputStyle: string }) {\n  let result = null;\n  if (inputStyle === 'input') {\n    result = <FormInput name={ fieldName.toLowerCase() } label={ fieldName } showLabel type={ type } variant=\"outlined\" props={ {size: 'medium'} } />;\n  } else if (inputStyle === 'area') {\n    result = <FormTextArea name={ fieldName.toLowerCase() } label={ fieldName } showLabel  type={ type } variant=\"outlined\" props={ {size: 'medium'} }/>;\n  } else if (inputStyle === 'date') {\n    result = <FormDatepicker label={ fieldName } name={ fieldName.toLowerCase() } />;\n  }\n\n  return <InputWithLeftLabel leftContent={ <div></div> }> { result } </InputWithLeftLabel>;\n};\nconst MemoLocalField = memo(LocalField);\n\nexport const DEFAULT_NEW_FORM_VALUE = {\n  title: 'My Starwars Film',\n  director: 'Kevin'\n};\n\nexport interface RemoteSelectProps {\n  entityId: EntityType;\n  fields: FieldInputProps<StarwarsContent[]>; // formik use\n  form: FormikContextType<StarwarsContent[]>; // formik use\n  meta: FieldMetaProps<StarwarsContent[]>; // formik use\n  onValueChange?: (entityId: string, value: StarwarsContent[]) => void; // pass up for formik to set values\n}\n\nfunction RemoteSelect({ entityId, fields, form, meta, onValueChange }: RemoteSelectProps) {\n  const entityId2 = (entityId === 'Characters' ? 'People' : entityId); // swap it to People if Characters is used\n  const dispatch = useAppDispatch();\n  const [ selectedEntities, setSelectedEntities ]  = useState<StarwarsContent[]>([]);\n\n  const fetchUrl: string | undefined = useAppSelector(selectFetchPageUrl(entityId2));\n  const nextPage: string | null | undefined = useAppSelector(selectNextPageUrl(entityId2));\n  const { data, isLoading, isFetching }= useFetchEntitiesInfiniteQuery({entityId: entityId2, url: fetchUrl});\n\n  const selectedObject = useRef({} as {[uid: string]: boolean}); // used to highlight selections\n\n  const onPageHandler = () => {\n    dispatch(dispatchPaging({entityId: (entityId2), pagination: { page: -1, fetchUrl: nextPage }}));\n  };\n\n  /**\n   * Using a wrapper (infinite scroll) div will not trigger default Select's onChange. So we have to\n   * manually calculate select and de-select\n   * \n   * @param content \n   * @returns \n   */\n  const handleOptionClick = (content: StarwarsContent) => (event: any) => {\n    const isAlreadySelected: boolean = !!selectedObject.current[content.uid];\n\n    selectedObject.current[`${content.uid}`] = (isAlreadySelected ? false : true);\n    setSelectedEntities((current) => {\n      if (isAlreadySelected) {\n        const dup = [...current];\n        const indexToRemove = current.findIndex((c) => c.uid === content.uid) ?? -1;\n        if (indexToRemove > -1) {\n          dup.splice(indexToRemove, 1);\n        }\n        return [...dup];\n      }\n      return [...current, content];\n    });\n  };\n\n  useEffect(() => {\n    onValueChange && onValueChange(entityId, selectedEntities);\n  }, [selectedEntities, onValueChange, entityId]);\n\n  const leftContent = (\n    <>\n      <Box>\n        { getFilledIcon(entityId.toLowerCase()) }\n      </Box>\n      <Typography variant=\"h6\">{ entityId } {selectedEntities.length > 0 ? `(${selectedEntities.length})` : ''}</Typography>\n    </>\n  );\n\n  return (\n    <InputWithLeftLabel leftContent={ leftContent }>\n      <FormControl sx={ { width: '100%' } }>\n        <InputLabel> { entityId } </InputLabel>\n        <Select\n          multiple\n          // value={ selectedEntities } // Get it from formik init values\n          input={ <OutlinedInput label={ entityId } /> }\n          renderValue={ (selected: StarwarsContent[]) => {\n            return (\n              <Box sx={ { display: 'flex', flexWrap: 'wrap', gap: 0.5 } }>\n                {\n                  selected.map((value: StarwarsContent) => (\n                    <Chip key={ value.uid } label={ value.name } color=\"info\" size=\"small\" sx={ {height: '20px'} } />\n                  ))\n                }\n              </Box>\n            );\n          } }\n          MenuProps={ {\n            PaperProps: {\n              style: {\n                maxHeight: 300 // limit height to trigger scrollable\n              },\n              id: 'menuParentDiv' // set the div for infinite scroll\n            }\n          } }\n          { ...fields }\n        >\n          {\n            isLoading ? <MenuItem disabled><ProgressCircle size={ 15 } styleProps={ {marginRight: 2} } /><em>Loading { entityId }...</em></MenuItem> : (\n              <InfiniteScroll\n                dataLength={ data?.results.length ?? 0 }\n                next={ onPageHandler }\n                hasMore={ !!nextPage }\n                loader={ <MenuItem disabled><ProgressCircle size={ 15 } styleProps={ {marginRight: 2} } /><em>Loading more { entityId }...</em></MenuItem> }\n                endMessage={ <MenuItem disabled><em>End of { entityId }</em></MenuItem> }\n                className=\"scroller-parent\"\n                scrollableTarget=\"menuParentDiv\">\n                { \n                  data?.results.map((content: StarwarsContent) => (\n                    <MenuItem key={ content.uid }  onClick={ handleOptionClick(content) } selected={ selectedObject.current[content.uid] === true }>\n                      <Checkbox checked={ selectedObject.current[content.uid] === true } />\n                      <ListItemText primary={ content.name } />\n                    </MenuItem>\n                  )) \n                }\n              </InfiniteScroll>\n            )\n          }\n        </Select>\n\n        <FormHelperText id={ `${fields?.name}-helper-text` } error={  meta.touched && !!meta.error } sx={ {ml: 0} } >\n          {\n            (meta.touched && meta.error) ? \n              (<ErrorMessage name={ fields?.name } render={ (err) => upperFirst(err) } />) : (<>{''}</>)\n          }\n        </FormHelperText>\n\n      </FormControl>\n    </InputWithLeftLabel>\n  );\n}\n\nexport interface IPersonalFilm {\n  title: string;\n  director: string;\n  producer: string;\n  episode_id: number;\n  release_date: moment.Moment;\n  opening_crawl: string;\n  characters: StarwarsContent[];\n  starships: StarwarsContent[];\n  planets: StarwarsContent[];\n  species: StarwarsContent[];\n  vehicles: StarwarsContent[];\n  canon: boolean;\n  url?: string;\n}\n\n\nfunction InputWithLeftLabel({ leftContent, children }: any) {\n  return (\n    <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\" width=\"100%\" spacing={ 2 } mb={ 2 }>\n      <Box flexBasis=\"14%\">\n        { leftContent }\n      </Box>\n      { children }\n    </Stack>\n  );\n}","import { Dialog, DialogActions, Button, DialogTitle, IconButton, Stack, Divider } from \"@mui/material\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Refresh } from \"@mui/icons-material\";\nimport moment from \"moment\";\nimport { newPersonalFilmValidationSchema } from \"src/create-new/schemas/all-schemas\";\nimport NewFilmForm, { IPersonalFilm } from \"./NewPersonalFilmForm\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport { useCreatePersonalFilmMutation } from \"../store/personal-films.api\";\nimport { FirebasePostPayload } from \"src/shared/models/firebase.model\";\n\nconst initValue: IPersonalFilm = {\n  title: 'My Starwars Film',\n  director: 'Kevin',\n  producer: '',\n  characters: [],\n  starships: [],\n  opening_crawl: 'In a galaxy far far away...',\n  planets: [],\n  species: [],\n  vehicles: [],\n  episode_id: 10,\n  release_date: moment(),\n  canon: false\n};\n\nexport interface NewPersonalFilmDialogProps {\n  open?: boolean;\n  onDialogClose: () => void;\n}\n\nfunction NewPersonalFilmDialog({ open, onDialogClose }: NewPersonalFilmDialogProps) {\n\n  const [createFilm, createFilmResult] = useCreatePersonalFilmMutation();\n  \n  const handleDialogClose = (event: object, reason: string) => {\n    if (reason !== 'backdropClick') {\n      onDialogClose();\n    }\n  };\n\n  const handleRefreshData = () => {\n    \n  };\n  \n  const handleOnSubmit = (value: IPersonalFilm, formikHelpers: FormikHelpers<IPersonalFilm>) => {\n    formikHelpers.setSubmitting(true);\n    const create$ = createFilm(value).unwrap();\n    create$.then((res: FirebasePostPayload) => {\n      onDialogClose();\n    }).catch((err) => {\n    }).finally(() => formikHelpers.setSubmitting(false));\n  };\n\n  return (\n    <Dialog onClose={ handleDialogClose } open={ !!open } maxWidth=\"md\" PaperProps={ {sx: {overflowX: 'hidden'}} }>\n      <DialogTitle minWidth={ '900px' } sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? 'primary.main' : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#fff' : null} }>\n        <Stack direction={ 'row' } justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n            { 'Add New Film' }\n          </Stack>\n          <Stack direction=\"row\" justifyContent=\"end\" alignItems=\"center\">\n            <IconButton onClick={ handleRefreshData } color=\"inherit\">\n              <Refresh />\n            </IconButton>\n            <IconButton onClick={ onDialogClose }  color=\"inherit\">\n              <CloseIcon />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </DialogTitle>\n      <Divider flexItem variant=\"fullWidth\" />\n\n      <Formik initialValues={ initValue }\n        onSubmit={ handleOnSubmit }\n        validationSchema={ newPersonalFilmValidationSchema }\n        validateOnChange\n      >\n        <NewFilmForm />\n      </Formik>\n      \n    </Dialog>\n  );\n}\n\nexport default NewPersonalFilmDialog;\n\n\n","import { Add } from \"@mui/icons-material\";\nimport { Button } from \"@mui/material\";\nimport { useState } from \"react\";\nimport NewPersonalFilmDialog from \"./NewPersonalFilmDialog\";\n\nfunction NewPersonalFilm() {\n\n  const [showDialog, setShowDialog] = useState<boolean>(false);\n  \n  const handleAddFilm = () => {\n    setShowDialog(true);\n  };\n\n  const handleDialogClose = () => {\n    setShowDialog(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" startIcon={ <Add /> } onClick={ handleAddFilm }>\n        New Film\n      </Button> \n\n      <NewPersonalFilmDialog open={ showDialog } onDialogClose={ handleDialogClose } />\n    </>\n  );\n}\n\nexport default NewPersonalFilm;","import AppToolbar from \"src/shared/components/toolbar/Toolbar\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { Stack, Box, CircularProgress, Typography, Button } from \"@mui/material\";\nimport ErrorPage from \"src/404/ErrorPage\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport SimpleGridDisplay, { DisplayName } from \"src/core/shared/display/SimpleGridDisplay\";\nimport { useAppDispatch, useAppSelector } from \"src/store/appHook\";\nimport LoadingLogo from \"src/shared/loading/full-logo/LoadingLogo\";\nimport { useFetchStarshipsQuery } from \"src/core/store/sw-entities-config/swapi\";\nimport { selectPage, selectTotalPages } from \"src/core/store/sw-entities-config/swapi.selectors\";\nimport { dispatchPaging } from \"src/core/store/sw-entities-config/swapi.reducer\";\nimport { scrollToElementById } from \"src/shared/utils/general.utils\";\nimport SearchAutoComplete from \"src/core/shared/search/SearchAutoComplete\";\nimport { ResultProperty, StarwarsSearchable, StarwarsSpecie } from \"src/shared/models/starwars.model\";\nimport { useNavigate } from \"react-router-dom\";\nimport { personalFilmsApi, useFetchPersonalFilmsQuery } from \"../store/personal-films.api\";\nimport { PersonalFilm } from \"../store/personal-films.state\";\nimport LayoutWithGutter from \"src/shared/components/layouts/LayoutWithGutter\";\nimport PersonalFilmsTable from \"./PersonalFilmsTable\";\nimport DateDisplay2 from \"src/shared/components/date/DateDisplay2\";\nimport DurationDisplay from \"src/shared/components/date/DurationDisplay\";\nimport { RefreshOutlined } from \"@mui/icons-material\";\nimport { selectPersonalFilmsFilters } from '../store/personal-films.selectors';\nimport NewPersonalFilm from \"../new-film/NewPersonalFilm\";\n\n\nconst ENTITY_NAME = \"My Films\";\n\nfunction PersonalMoviesAll() {\n\n  const { isMobile } = useScreenSize();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const filters = useAppSelector(selectPersonalFilmsFilters);\n  const { data, isFetching, isLoading, error, isSuccess, isError, refetch, fulfilledTimeStamp, startedTimeStamp } = useFetchPersonalFilmsQuery(filters, {\n    refetchOnMountOrArgChange: 60 // time for args change or unmount\n  });\n  const fetchTimeDuration = (fulfilledTimeStamp ?? 0) - (startedTimeStamp ?? 0);\n\n  useEffect(() => {\n    scrollToElementById('top-pagination', 300, \"end\");\n  }, [isSuccess]);\n\n  const onResultSelectHandler = (selection: PersonalFilm | null) => {\n    if (selection?.fireKey) {\n      navigate(`./${selection.fireKey}`);\n    }\n  };\n\n  const handleRefreshFilms = () => {\n    dispatch(personalFilmsApi.util.invalidateTags([{type: \"PersonalFilms\"}]));\n  };\n\n  if (isLoading) return (\n    <Stack direction=\"column\" width=\"100%\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n      <LoadingLogo message={ ENTITY_NAME } />\n    </Stack>\n  );\n\n  if (isError) {\n    return <ErrorPage reason={ (error as any).status } debug={ (error as any).error } />;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Stack direction=\"column\" width=\"100%\">\n      <AppToolbar toolbarProps={ {\n        position: \"sticky\",\n        sx: {top: isMobile ? '56px':'64px', borderBottom: '1px solid #ccc'}\n      } }>\n        <Grid container xs={ 12 }>\n          <Grid xs={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\" width=\"100%\">\n              <NewPersonalFilm />\n            </Stack>\n          </Grid>\n          <Grid xs={ 8 } xsOffset=\"auto\" display=\"flex\">\n            <Stack direction=\"row\" justifyContent=\"end\" alignItems=\"center\" width=\"100%\" spacing={ 2 } data-tooltip-id=\"fetch-information\">\n              { isFetching && <CircularProgress size={ 20 } /> }\n              <Typography fontSize={ 11 } component=\"div\">\n                Last fetched <DateDisplay2 dateInMilli={ fulfilledTimeStamp ?? 0 } />, took: <DurationDisplay durationInMilli={ fetchTimeDuration } />\n              </Typography> \n              <Button variant=\"outlined\" startIcon={ <RefreshOutlined /> } onClick={ handleRefreshFilms }>\n                Refresh Favorites\n              </Button>\n              <Button variant=\"outlined\" startIcon={ <RefreshOutlined /> } onClick={ handleRefreshFilms }>\n                Refresh Films\n              </Button>\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n      <Box mt={ 2 } mx={ isMobile ? 2 : 0 }>\n        <LayoutWithGutter size={ 'med' }>\n          <PersonalFilmsTable films={ data } loading={ isFetching } />\n        </LayoutWithGutter>\n      </Box>\n    </Stack>\n  );\n};\n\nexport default PersonalMoviesAll;\n","import { format } from 'date-fns';\n\n\nexport interface DateDisplay2Props {\n  dateInMilli: number | undefined;\n}\n\nfunction DateDisplay2({ dateInMilli }: DateDisplay2Props) {\n  return (\n    <>\n      { (dateInMilli !== undefined) && format(dateInMilli, 'MM/dd/yyyy p') }\n    </>\n  );\n};\n\nexport default DateDisplay2;","import { formatDistance } from 'date-fns';\n\n\nexport interface DurationDisplayProps {\n  durationInMilli: number;\n}\n\nfunction DurationDisplay({ durationInMilli }: DurationDisplayProps) {\n  return (\n    <>\n      { (durationInMilli > 1000) ? (formatDistance(0, durationInMilli, { includeSeconds : true })) : (durationInMilli + ' ms') }\n    </>\n  );\n};\n\nexport default DurationDisplay;","import Grid from '@mui/material/Unstable_Grid2';\nimport { ReactNode } from 'react';\n\nexport interface LayoutGutterProps {\n  children: ReactNode;\n  size?: \"full\" | \"med\" | \"skinny\"\n}\n\nfunction LayoutWithGutter({ size = \"med\", children }: LayoutGutterProps) {\n\n  return (\n    // <Grid container spacing={ 0 } xs={ 12 } xsOffset={ 0 } sm={ sizes.width } smOffset={ sizes.offset }>\n    //   { children }\n    // </Grid>\n    <Grid container spacing={ 0 } xs={ 12 } xsOffset={ 0 } \n      sm={ size==='full' ? 12 : (size === 'med' ? 7 : (4)) } \n      smOffset={ size==='full' ? 0 : (size === 'med' ? 2.5 : (4)) }>\n      { children }\n    </Grid>\n  );\n}\n\nexport default LayoutWithGutter;","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Theme } from '@emotion/react';\nimport { SxProps } from '@mui/material';\n\nexport default function ProgressCircle({ size=40, color='grey.500', styleProps }: {size?: number, color?: string, styleProps?: SxProps<Theme>}) {\n  return (\n    <Stack sx={ { color: color, ...styleProps } } spacing={ 1 } direction=\"row\">\n      <CircularProgress color=\"inherit\" size={ size } />\n    </Stack>\n  );\n}","import { AppBar, Stack, Button, Tooltip, IconButton, AppBarTypeMap } from \"@mui/material\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport Toolbar from '@mui/material/Toolbar';\nimport { GREY } from \"src/theme/palette\";\n\ninterface ToolbarProps {\n  toolbarProps: any;\n  children: any;\n}\n\nexport default function AppToolbar({ toolbarProps, children }: ToolbarProps) {\n  \n  return (\n    <AppBar elevation={ 0 } { ...toolbarProps }>\n      <Toolbar \n        variant=\"regular\" \n        sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? GREY[50] : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#000' : null,\n          pr: 0\n        } }>\n        { children }\n      </Toolbar>\n    </AppBar>\n  );\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { ErrorMessage, Field, Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport { FormikInputProps, FormInput2Props, FormInputProps } from 'src/shared/models/form.model';\nimport { FormControl, FormHelperText, InputLabel } from '@mui/material';\nimport { upperFirst, startCase } from 'lodash';\n\n\nconst FormInput = ({ label, name, validate, \n    disabled, placeholder, variant, ...props}: FormInput2Props) => {\n      \n  const formik = useFormikContext<any>();\n  return (\n    <FormControl fullWidth size={ props.props?.size ?? 'small' }>\n      <Field as={ TextField } \n        label={ startCase(label) } \n        name={ name } \n        id={ name }\n        error={ formik.touched[name] && !!formik.errors[name] }\n        validate={ validate }\n        variant={ variant ?? 'standard' }\n        disabled={ disabled }\n        placeholder={ upperFirst(placeholder ?? label) }\n        { ...props.props } />\n\n      <FormHelperText id={ `${name}-helper-text` } error={ formik.touched[name] && !!formik.errors[name] } sx={ {ml: 0} } >\n        {\n          (formik.touched[name] && formik.errors[name]) ? \n            (<ErrorMessage name={ name } render={ (err) => upperFirst(err) } />) : (<>{props.helperText}</>)\n        }\n      </FormHelperText>\n\n    </FormControl>\n  );\n};\n\nexport default FormInput;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { ErrorMessage, Field, Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport { FormikInputProps, FormInput2Props, FormInputProps } from 'src/shared/models/form.model';\nimport { FormControl, FormHelperText, InputLabel } from '@mui/material';\nimport TextareaAutosize from '@mui/base/TextareaAutosize';\nimport { upperFirst, startCase } from 'lodash';\n\nconst FormTextArea = ({ label, name, placeholder, disabled, validate, ...props}: FormInput2Props) => {\n  const formik = useFormikContext<any>();\n  return (\n    <FormControl fullWidth size='small'>\n\n      <Field as={ TextField } \n        multiline\n        name={ name } \n        id={ name }\n        validate={ validate }\n        minRows={ 1 }\n        label={ startCase(label) }\n        error={ formik.touched[name] && !!formik.errors[name] }\n        placeholder={ upperFirst(placeholder ?? label) }\n        InputProps={ {\n          inputComponent: TextareaAutosize,\n          inputProps: {\n            style: {\n              resize: \"vertical\",\n              minHeight: \"3.5rem\"\n            },\n          }\n        } }\n        { ...props.props } />\n\n      <FormHelperText id={ `${name}-helper-text` } error={ formik.touched[name] && !!formik.errors[name] }>\n        {\n          (formik.touched[name] && formik.errors[name]) ? \n            (<ErrorMessage name={ name } render={ (err) => upperFirst(err) } />) : (<>{props.helperText}</>)\n        }\n      </FormHelperText>\n\n    </FormControl>\n  );\n};\n\nexport default FormTextArea;","import { useState, useEffect } from \"react\";\n\nexport const useDebounce = <T>(value: T, delay: number) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n};","import useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * A media query string\n * which matches screen widths less than the screen size given by the breakpoint key (down)\n * @returns \n */\nconst useScreenSize = () => {\n\n  const theme = useTheme();\n\n  const isMobileScreenSize = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const isMediumSize = useMediaQuery(theme.breakpoints.between('sm', 'md'));\n\n  const isLargeSize = useMediaQuery(theme.breakpoints.between('md', 'lg'));\n\n  const isXlSize = useMediaQuery(theme.breakpoints.between('lg', 'xl'));\n\n  const isAboveXlSize = useMediaQuery(theme.breakpoints.up('xl'));\n\n\n  return {\n    isMobile: isMobileScreenSize,\n    isMed: isMediumSize,\n    isLg: isLargeSize,\n    isXl: isXlSize,\n    isAboveXl: isAboveXlSize\n  };\n\n};\n\nexport default useScreenSize;","// extracted by mini-css-extract-plugin\nexport default {\"parentClass\":\"LoadingLogo_parentClass__NFHXT\",\"loadingLogo\":\"LoadingLogo_loadingLogo__BqUtz\",\"loadingParent\":\"LoadingLogo_loadingParent__VASnq\",\"loading-container\":\"LoadingLogo_loading-container__cjLsJ\",\"whole-page\":\"LoadingLogo_whole-page__DkCG7\",\"ldsFacebook\":\"LoadingLogo_ldsFacebook__pRdY2\",\"lds-facebook\":\"LoadingLogo_lds-facebook__JLntj\"};","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useReducer, useState, useContext, useMemo, Suspense } from 'react';\nimport classes from './LoadingLogo.module.scss';\nimport logo from '../../../static/img/death-star.png';\n\nexport interface LoadingLogoProps {\n  message: string;\n  children?: any;\n}\n\nexport default function LoadingLogo(props: LoadingLogoProps) {\n\n\n  return (\n    <div className={ `${classes.parentClass} w-100` }>\n      <div>\n        <div className={ classes.loadingLogo }>\n          <img src={ logo }\n            className={ `${classes.logoImg} d-inline-block` } alt=\"logo\" />\n        </div>\n    \n      </div>\n      <div className={ classes.loadingParent }>\n        <div className={ classes.ldsFacebook }><div></div><div></div><div></div></div>\n      </div>\n      <div className={ classes.secfont }>\n        Loading {props.message} ...\n      </div>\n    </div>\n  );\n};","\nexport function scrollToElementById(id: string, timeout?: number, position?: ScrollLogicalPosition): void {\n  let top = document.getElementById(id);\n  if (top) {\n    setTimeout(() => {\n      top?.scrollIntoView({block: position as any ?? \"end\"});\n      top = null;\n    }, timeout ?? 0);\n  }\n}\n\nexport function scrollToTop() {\n  window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n};\n\n\nexport function scrollToBottom() {\n  window.scrollTo({\n    top: document.documentElement.offsetHeight,\n    left: 0,\n    behavior: \"smooth\",\n  });\n};\n\nexport function convertCommaDecimalNumberToNumber(num: string): number {\n  if (num) {\n    const stripped = num.trim();\n    return parseFloat(stripped.replace(/,/g, ''));\n  }\n  return NaN;\n}\n\nexport function insertIntoArrayAtIndex<T>(arr: T[], index: number, item: T): T[] {\n  const arrCopy: T[] = JSON.parse(JSON.stringify(arr));\n  arrCopy.splice(index, 0, item);\n  return arrCopy;\n}\n\nexport function capitalizeFirstLetter(str: string): string | undefined {\n  if (str) {\n    return (str.charAt(0).toUpperCase()) + str.slice(1);\n  }\n  return undefined;\n}\n\nexport function objectsEqual(o1: any, o2: any): boolean {\n  return typeof o1 === 'object' && Object.keys(o1).length > 0\n  ? Object.keys(o1).length === Object.keys(o2).length\n      && Object.keys(o1).every(p => objectsEqual(o1[p], o2[p]))\n  : o1 === o2;\n}\n\nexport function arraysEqual(a1: any[], a2: any[]): boolean {\n  if (a1 && a2) {\n    return a1.length === a2.length && a1.every((o, idx) => objectsEqual(o, a2[idx]));\n  }\n  return false;\n}\n\nexport function removeEmptyFromObject(obj: any): any {\n  if (!obj) {\n    return {};\n  }\n  const result = JSON.parse(JSON.stringify(obj));\n  Object.keys(result).forEach((key) => {\n    if (result[key] === null || result[key] === undefined) {\n      delete result[key];\n    }\n  });\n  return result;\n}\n\nexport function isObjectEmpty(obj: any): boolean {\n  if (obj) {\n    const keys = Object.keys(obj);\n    return keys.length < 1;\n  }\n  return false;\n}\n\n// Remove objects in an array if the object has the same value by key provided\nexport function deduplicateObjectArrayByKey<T>(arr: T[], key: string): T[] {\n  if (arr && arr.length > 0) {\n    const uniqueByValues: any[] = arr.map((res: T) => res[key as keyof T]);\n    const filtered = arr.filter((res: T, index: number) => {\n      return !uniqueByValues.includes(res[key as keyof T], index + 1);\n    });\n    return filtered;\n  }\n  return [];\n}\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport type { TypedUseSelectorHook } from 'react-redux';\nimport type { RootState, AppDispatch } from './appStore';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"],"names":["ErrorPage","reason","debug","marginY","width","direction","spacing","justifyContent","alignItems","variant","sx","textTransform","fontWeight","component","style","display","textAlign","JSON","stringify","newFilmValidationSchema","Yup","title","required","director","min","openingCrawl","characters","starships","planets","species","vehicles","newPersonalFilmValidationSchema","producer","episode_id","opening_crawl","release_date","editFilmValidationSchema","shape","trim","TABLE_COLUMNS","smallHeaderIds","largeHeaderIds","ellipsis","textOverflow","overflow","whiteSpace","transformColumnName","colId","result","startCase","open","film","onDialogClose","Dialog","disableEscapeKeyDown","maxWidth","onClose","event","initialValues","onSubmit","values","helper","fireKey","validationSchema","validateOnChange","EditForm","cancel","undefined","useFormikContext","dirty","submitForm","isValid","errors","DialogTitle","minWidth","bgcolor","theme","palette","mode","color","Stack","Typography","Check","ErrorOutline","Divider","flexItem","DialogContent","FormInput","name","label","showLabel","type","DialogActions","Button","onClick","size","disabled","filterType","onFilterChange","useState","getDefaultFilter","localFilter","setLocalFilter","debouncedFilter","useDebounce","useEffect","filtersToEmit","Object","keys","forEach","key","q","property","criteria","value","push","Box","FormControl","fullWidth","InputLabel","Input","onChange","e","current","target","endAdornment","InputAdornment","position","IconButton","handleRestTextFilter","Clear","selectPersonalFilmsFilters","createSelector","state","queryFilters","ConfirmDialog","handleClose","message","onActionClickHandler","action","id","DialogContentText","autoFocus","films","loading","isAboveXl","useScreenSize","dispatch","useAppDispatch","openEdit","setOpenEdit","openConfirmDelete","setOpenConfirmDelete","filters","useAppSelector","useUpdatePersonalFilmMutation","updatePersonalFilm","useDeletePersonalFilmMutation","deletePersonalFilm","deleteResult","handleCellMenuAction","actionId","handleFilterChange","useCallback","updateFilters","mb","flexBasis","DensityLarge","fontSize","titleAccess","mr","length","Pagination","count","showFirstButton","showLastButton","map","fil","Chip","height","isLoading","LinearProgress","TableContainer","Paper","elevation","overflowX","Table","stickyHeader","tableLayout","TableHead","TableRow","col","index","StyledHeaderCell","stickyHeaderClass","includes","smallHeaderCell","crawlHeaderCell","regularHeaderCell","TableSortLabel","active","TableHeaderMenu","onMenuActionClick","TableBody","backgroundColor","GREY","opacity","isWorking","StyledDataCell","stickyDataCellClass","transformTableData","editedFilm","data","choice","then","res","toast","anchorEl","setAnchorEl","Boolean","handleMenuActionClick","currentTarget","MoreVert","Menu","MenuListProps","MenuItem","dense","ListItemIcon","Tune","ListItemText","VisibilityOff","columnId","onMenuClick","canon","s","join","TableTitleCell","marginRight","CircularProgress","Edit","Delete","styled","TableCell","paddingTop","paddingBottom","borderRight","borderColor","borderBottom","left","zIndex","swapiConfigSlice","swEntitiesConfig","validate","props","placeholder","formik","as","DatePicker","formatDensity","error","touched","slotProps","textField","FormHelperText","ml","render","err","upperFirst","helperText","setFieldValue","resetForm","isSubmitting","handleOnValueChange","entity","val","toLowerCase","MemoLocalField","fieldName","inputStyle","MemoRemoteField","startIcon","RestartAlt","Save","RemoteField","field","form","meta","RemoteSelect","entityId","fields","onValueChange","memo","LocalField","FormTextArea","InputWithLeftLabel","leftContent","entityId2","selectedEntities","setSelectedEntities","fetchUrl","slice","pagination","BASE_SW_API","selectFetchPageUrl","nextPage","next","selectNextPageUrl","useFetchEntitiesInfiniteQuery","url","selectedObject","isFetching","useRef","handleOptionClick","content","isAlreadySelected","uid","dup","indexToRemove","findIndex","c","splice","getFilledIcon","Select","multiple","input","OutlinedInput","renderValue","selected","flexWrap","gap","MenuProps","PaperProps","maxHeight","styleProps","dataLength","results","dispatchPaging","page","hasMore","loader","endMessage","className","scrollableTarget","Checkbox","checked","primary","children","initValue","moment","useCreatePersonalFilmMutation","createFilm","Refresh","Close","formikHelpers","setSubmitting","unwrap","catch","finally","showDialog","setShowDialog","Add","isMobile","useNavigate","useFetchPersonalFilmsQuery","refetchOnMountOrArgChange","isSuccess","isError","fulfilledTimeStamp","refetch","startedTimeStamp","fetchTimeDuration","scrollToElementById","handleRefreshFilms","personalFilmsApi","LoadingLogo","status","toolbarProps","top","container","xs","xsOffset","DateDisplay2","dateInMilli","DurationDisplay","durationInMilli","RefreshOutlined","mt","mx","LayoutWithGutter","format","formatDistance","includeSeconds","sm","smOffset","ProgressCircle","AppToolbar","pr","TextField","multiline","minRows","InputProps","inputComponent","TextareaAutosize","inputProps","resize","minHeight","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useTheme","useMediaQuery","breakpoints","down","isMed","between","isLg","isXl","up","classes","src","logo","alt","timeout","document","getElementById","scrollIntoView","block","useDispatch","useSelector"],"sourceRoot":""}