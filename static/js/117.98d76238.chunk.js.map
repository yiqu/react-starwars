{"version":3,"file":"static/js/117.98d76238.chunk.js","mappings":"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","sources":["core/planets/planet/Planet.tsx","shared/components/toolbar/Toolbar.tsx","webpack://starwars/./src/shared/loading/full-logo/LoadingLogo.module.scss?618b","shared/loading/full-logo/LoadingLogo.tsx","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/Refresh.js"],"sourcesContent":["import { Box, Button, Divider, Paper, Stack, Typography } from \"@mui/material\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport AppToolbar from \"src/shared/components/toolbar/Toolbar\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { useAppDispatch } from \"src/store/appHook\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { useFetchPlanetQuery, useFetchStarshipQuery } from \"src/core/store/swapi/swapi\";\nimport LoadingLogo from \"src/shared/loading/full-logo/LoadingLogo\";\nimport ErrorPage from \"src/404/ErrorPage\";\nimport LayoutWithGutter from \"src/shared/components/layouts/LayoutWithGutter\";\nimport { useMemo, useState } from \"react\";\nimport { StarwarsPlanet, StarwarsStarships } from \"src/shared/models/starwars.model\";\nimport { QueryObj } from \"src/shared/models/url\";\nimport { startCase } from 'lodash';\nimport { isNumeric, numberFormatter } from \"src/shared/utils/number.utils\";\n\n\nfunction Planet() {\n  const { isMobile } = useScreenSize();\n  const dispatch = useAppDispatch();\n  const { planetId } = useParams();\n  const [ openEditDialog, setOpenEditDialog ] = useState<boolean>(false);\n  const { data, isLoading, isFetching, error, isError, refetch } = useFetchPlanetQuery(planetId!);\n\n  const display = useMemo(() => {\n    let list: QueryObj[] = [];\n    list = displayList.map((key: string) => {\n      return {\n        key,\n        value: (`${data?.result.properties[key as keyof StarwarsPlanet]}`)\n      };\n    });\n    return list;\n  }, [data]);\n\n  const onRefreshHandler = () => {\n    refetch();\n  };\n\n  const onEditHandler = () => {\n    setOpenEditDialog(true);\n  };\n\n  const onDialogCloseHandler = (editedData?: StarwarsPlanet) => {\n  };\n  \n  if (isLoading) return (\n    <Stack direction=\"column\" width=\"100%\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n      <LoadingLogo message=\"starship\" />\n    </Stack>\n  );\n\n  if (isError) {\n    return <ErrorPage reason={ (error as any).status } debug={ (error as any).error } />;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Stack direction=\"column\" width=\"100%\">\n      <AppToolbar toolbarProps={ {\n        position: \"sticky\",\n        sx: {top: isMobile ? '56px':'64px'}\n      } }>\n        <Grid container xs={ 12 } flexDirection={ { xs: 'row', sm: 'row' } } justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid xs={ 10 } sm={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Button startIcon={ <RefreshIcon /> } variant=\"text\" onClick={ onRefreshHandler }>Refresh</Button>\n              <Divider orientation=\"vertical\" variant=\"middle\" flexItem sx={ {mr: 1, ml: 1} } />\n              <Button startIcon={ <EditIcon /> } variant=\"text\" onClick={ onEditHandler }>Edit</Button>\n            </Stack>\n          </Grid>\n          <Grid xs={ 2 } sm={ 8 }>\n            <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n              { isFetching && <ProgressCircle size={ 20 } /> }\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n\n      <Box mt={ 2 } m={ isMobile ? 2 : 0 }>\n        <LayoutWithGutter size={ 'med' }>\n          <Grid xs={ 12 } sx={ {border: '1px solid #ddd', borderRadius: '10px', p: 2} }>\n            <Stack direction={ isMobile ? \"column\" : \"row\" } justifyContent=\"start\" alignItems=\"center\">\n              <Typography variant='h4' sx={ {fontWeight: 500} } mr={ 2 }>\n                { data.result.properties.name }\n              </Typography>\n              <Typography variant='body1' title={ `${data.result.properties.population} population` }>\n                ({ isNumeric(data.result.properties.population) ? ((numberFormatter.format(+data.result.properties.population))) : data.result.properties.population } pop.)\n              </Typography>\n            </Stack>\n            <Divider sx={ {my: 2} } />\n            <Stack direction=\"column\" >\n              {\n                display.map((res) => {\n                  return (\n                    <Box key={ res.key } mb={ 1 }>\n                      <Stack direction={ isMobile ? \"column\" : \"row\" } justifyContent=\"start\" \n                        alignItems={ isMobile ? \"start\" : \"center\" }>\n                        <Typography variant='h6' fontWeight={ 300 }>\n                          { startCase(res.key) }\n                        </Typography>\n                        {!isMobile && <Typography mr={ 1.5 }>:</Typography>}\n                        <Typography variant='h5'>\n                          { isNumeric(res.value) ? ((+res.value).toLocaleString()) : res.value }\n                        </Typography>\n                      </Stack>\n                    </Box>\n                  );\n                })\n              }\n            </Stack>\n          </Grid>\n        </LayoutWithGutter>\n      </Box>\n\n    </Stack>\n  );\n}\n\nexport default Planet;\n\n\nconst displayList = ['diameter', 'rotation_period', 'orbital_period', 'gravity', 'population', 'climate', \n  'terrain', 'surface_water'];","import { AppBar, Stack, Button, Tooltip, IconButton, AppBarTypeMap } from \"@mui/material\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport Toolbar from '@mui/material/Toolbar';\nimport { GREY } from \"src/theme/palette\";\n\ninterface ToolbarProps {\n  toolbarProps: any;\n  children: any;\n}\n\nexport default function AppToolbar({ toolbarProps, children }: ToolbarProps) {\n  \n  return (\n    <AppBar elevation={ 0 } { ...toolbarProps }>\n      <Toolbar \n        variant=\"regular\" \n        sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? GREY[100] : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#000' : null,\n          pr: 0\n        } }>\n        { children }\n      </Toolbar>\n    </AppBar>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"parentClass\":\"LoadingLogo_parentClass__NFHXT\",\"loadingLogo\":\"LoadingLogo_loadingLogo__BqUtz\",\"loadingParent\":\"LoadingLogo_loadingParent__VASnq\",\"loading-container\":\"LoadingLogo_loading-container__cjLsJ\",\"whole-page\":\"LoadingLogo_whole-page__DkCG7\",\"ldsFacebook\":\"LoadingLogo_ldsFacebook__pRdY2\",\"lds-facebook\":\"LoadingLogo_lds-facebook__JLntj\"};","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useReducer, useState, useContext, useMemo, Suspense } from 'react';\nimport classes from './LoadingLogo.module.scss';\nimport logo from '../../../static/img/death-star.png';\n\nexport interface LoadingLogoProps {\n  message: string;\n  children?: any;\n}\n\nexport default function LoadingLogo(props: LoadingLogoProps) {\n\n\n  return (\n    <div className={ `${classes.parentClass} w-100` }>\n      <div>\n        <div className={ classes.loadingLogo }>\n          <img src={ logo }\n            className={ `${classes.logoImg} d-inline-block` } alt=\"logo\" />\n        </div>\n    \n      </div>\n      <div className={ classes.loadingParent }>\n        <div className={ classes.ldsFacebook }><div></div><div></div><div></div></div>\n      </div>\n      <div className={ classes.secfont }>\n        Loading {props.message} ...\n      </div>\n    </div>\n  );\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;"],"names":["isMobile","useScreenSize","planetId","useAppDispatch","useParams","useState","setOpenEditDialog","useFetchPlanetQuery","data","isLoading","isFetching","error","isError","refetch","display","useMemo","displayList","map","key","value","result","properties","direction","width","justifyContent","alignItems","height","message","reason","status","debug","toolbarProps","position","sx","top","container","xs","flexDirection","sm","startIcon","variant","onClick","orientation","flexItem","mr","ml","size","mt","m","border","borderRadius","p","fontWeight","name","title","population","isNumeric","numberFormatter","my","res","mb","startCase","toLocaleString","AppToolbar","children","elevation","bgcolor","theme","palette","mode","GREY","color","pr","LoadingLogo","props","className","classes","src","logo","alt","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}