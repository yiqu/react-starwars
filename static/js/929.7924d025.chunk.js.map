{"version":3,"file":"static/js/929.7924d025.chunk.js","mappings":"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","sources":["404/ErrorPage.tsx","webpack://starwars/./src/core/movies/movies/movie/MovieDetailCard.module.scss?8533","core/movies/movies/movie/MovieDetailCard.tsx","core/movies/movies/movie/MoviePopoverContent.tsx","core/movies/movies/movie/EntityTable.tsx","shared/hooks/usePopover.tsx","core/movies/movies/movie/Movie.tsx","shared/components/progress/CircleProgress.tsx","shared/hooks/useIsMobile.ts"],"sourcesContent":["import { Box, Stack, Typography } from \"@mui/material\";\n\nexport interface ErrorPageProp {\n  reason?: string;\n  debug?: any;\n}\n\nexport default function ErrorPage({ reason, debug }: ErrorPageProp) {\n\n  return (\n    <Box marginY={ 5 } width=\"100%\">\n      <Stack direction=\"column\" spacing={ 5 } justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" sx={ {textTransform:'uppercase'} }>\n          An error has occurred!\n        </Typography>\n\n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            REASON\n          </Typography>\n          <Typography variant=\"body2\">\n            { reason }\n          </Typography>\n        </Stack>\n        \n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            DEBUG\n          </Typography>\n          <Typography variant=\"body2\" component=\"div\">\n            <pre>\n              <code style={ {display: 'flex', textAlign: 'center'} }>\n                { JSON.stringify(debug) }\n              </code>\n            </pre>\n          </Typography>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"detailcard\":\"MovieDetailCard_detailcard__FXvVo\"};","import { Card, CardMedia, CardContent, Typography, CardActions, Button, Stack, Divider } from \"@mui/material\";\nimport { StarwarFilmDetail } from \"src/shared/models/starwars.model\";\nimport { isArray, startCase } from 'lodash';\nimport styles from './MovieDetailCard.module.scss';\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\n\nexport interface MovieDetailCardProps {\n  movieDetail: StarwarFilmDetail;\n}\n\nconst displayKeys = ['release_date', 'director', 'producer', 'characters', 'planets', 'species', 'starships', 'vehicles'];\n\nexport default function MovieDetailCard({ movieDetail }: MovieDetailCardProps) {\n\n  const { isMobile } = useScreenSize();\n  \n  return (\n    <Card raised={ false } className={ isMobile ? '' : `${styles.detailcard}` }>\n      <CardMedia\n        component=\"img\"\n        alt=\"poster\"\n        height=\"400\"\n        image={ `${process.env.PUBLIC_URL}/assets/poster-img/${movieDetail.episode_id}.png` }\n        title=\"Film poster\"\n      />\n      <CardContent>\n        <Stack direction=\"column\">\n          <Typography  sx={ {fontFamily:'Poppins', fontWeight:'500'} }>\n            { movieDetail.title }\n          </Typography>\n          <Typography sx={ {fontWeight: '300'} }>\n            EP { movieDetail.episode_id }\n          </Typography>\n        </Stack>\n        <Divider sx={ {my: 2} } />\n        <Stack direction=\"column\" sx={ {fontSize: '12.5px', overflow: 'auto'} }>\n          <table style={ {borderSpacing: '0px 5px'} }>\n            <tbody>\n              {\n                displayKeys.map((key) => {\n                  return (\n                    <tr key={ key }>\n                      <td style={ {width: '35%'} }>\n                        <Typography variant=\"subtitle2\">\n                          { startCase(key) }\n                        </Typography>\n                      </td>\n                      <td>\n                        { isArray(movieDetail[key as keyof StarwarFilmDetail]) ? \n                          (movieDetail[key as keyof StarwarFilmDetail] as Array<string>).length : \n                          movieDetail[key as keyof StarwarFilmDetail]\n                        }\n                      </td>\n                    </tr>\n                  );\n                })\n              }\n            </tbody>\n          </table>\n        </Stack>\n      </CardContent>\n\n      <CardActions>\n\n      </CardActions>\n\n    </Card>\n  );\n}","import { Box, Button, Divider, Paper, Stack, Typography } from \"@mui/material\";\nimport { FC, PropsWithChildren, useEffect, useState } from \"react\";\nimport axios, { AxiosError, AxiosResponse } from 'axios';\nimport { HttpResponse2, StarwarCharacter } from \"src/shared/models/starwars.model\";\nimport LoadingSkeleton from \"src/shared/components/skeleton/LoadingSkeleton\";\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport HeightIcon from '@mui/icons-material/Height';\nimport { startCase, upperFirst } from 'lodash';\nimport MaleIcon from '@mui/icons-material/Male';\nimport CakeIcon from '@mui/icons-material/Cake';\nimport MonitorWeightIcon from '@mui/icons-material/MonitorWeight';\nimport Face4Icon from '@mui/icons-material/Face4';\nimport AccessibilityNewIcon from '@mui/icons-material/AccessibilityNew';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\n\nexport interface MoviePopoverContentProps {\n  url: string;\n  onCloseClick: () => void\n}\n\nconst displayProps = ['gender', 'birth_year', 'height', 'mass', 'hair_color', 'skin_color', 'eye_color'];\n\nexport default function MoviePopoverContent({ url, onCloseClick }: MoviePopoverContentProps) {\n\n  const [ isLoading, setIsLoading ] = useState<boolean>(true);\n  const [ hasError, setHasError ] = useState<any>();\n  const [ payload, setPayload ] = useState<StarwarCharacter>();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setIsLoading(true);\n    axios.get<HttpResponse2<StarwarCharacter>>(`${url}`, { signal: abortController.signal }).then(\n      (res: AxiosResponse<HttpResponse2<StarwarCharacter>>) => {\n        setPayload(res.data.result.properties);\n      }\n    ).catch((err: AxiosError) => {\n      setHasError(err.message);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n\n    return (() => {\n      abortController.abort();\n    });\n  }, [url]);\n\n  if (isLoading) return (<Wrapper props={ {alignItems: 'center'} }><ProgressCircle size={ 60 } /></Wrapper>);\n  if (!!hasError) return (<Wrapper>Error occurred: { hasError }</Wrapper>);\n\n  return (\n    <>\n      { \n        payload && <Wrapper >\n          <Stack direction=\"column\" spacing={ 0 } width=\"100%\">\n            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? 'primary.main' : '#2b4052', \n              color: (theme) => theme.palette.mode === 'light' ? '#fff' : null} } p={ 2 }>\n              <Typography variant=\"h5\" >\n                { payload.name }\n              </Typography>\n            </Stack>\n            \n            <List>\n              {\n                displayProps.map((prop) => {\n                  return (\n                    <ListItem key={ prop } dense>\n                      <ListItemIcon>\n                        { getIcon(prop) }\n                      </ListItemIcon>\n                      <ListItemText primary={ startCase(prop) } secondary={ upperFirst(payload[prop as keyof StarwarCharacter]) } />\n                    </ListItem>\n                  );\n                })\n              }\n            </List>\n            <Divider />\n            <Stack>\n              <Button variant=\"text\" onClick={ onCloseClick }>\n                Close\n              </Button>\n            </Stack>\n          </Stack>\n        </Wrapper>\n      }\n    </>\n  );\n};\n\nconst Wrapper: FC<PropsWithChildren<{props?: any}>> = ({ props, children }) => {\n\n  const { isMobile } = useScreenSize();\n\n  return (\n    <Box>\n      <Paper sx={ {p: 0, width: '100%', height: '100%', minHeight: '20rem', minWidth: (isMobile ? '0rem' : '20rem'), \n        display: 'flex', justifyContent: 'center', alignItems: 'start', ...props} }>\n        { children }\n      </Paper>\n    </Box>\n  );\n  \n};\n\nconst getIcon = (propName: string) => {\n  const iconMap = {\n    gender: <MaleIcon />,\n    birth_year: <CakeIcon />,\n    height: <HeightIcon />,\n    mass: <MonitorWeightIcon />,\n    hair_color: <Face4Icon />,\n    skin_color: <AccessibilityNewIcon />,\n    eye_color: <VisibilityIcon />,\n  };\n  return (iconMap as any)[propName];\n};","import { Box, Button, Paper, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\nimport React, { ReactNode, useState } from \"react\";\nimport { useDeepCompareEffect } from \"react-use\";\nimport { upperFirst } from 'lodash';\nimport usePopover from \"src/shared/hooks/usePopover\";\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport Popover from '@mui/material/Popover';\nimport MoviePopoverContent from \"./MoviePopoverContent\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\n\n\nexport interface MovieDetailEntityTableProps {\n  columns: string[];\n  columnData: any[];\n  header: ReactNode;\n}\n\nexport interface MovieDetailEntityTableData {\n  id: string;\n  detail: string;\n}\n\nexport default function MovieDetailEntityTable({ columns, columnData, header }: MovieDetailEntityTableProps) {\n  \n  const [tableData, setTableData] = useState<MovieDetailEntityTableData[]>([]);\n  const { popover, handlePopoverClose, handlePopoverOpen } = usePopover({ id: 'film-detail-popover'});\n  const { isXl } = useScreenSize();\n\n  useDeepCompareEffect(() => {\n    setTableData(convertTableData(columnData));\n  }, [columnData]);\n\n  const onViewClickHandler = (url: string) => (e: React.MouseEvent<HTMLButtonElement>) => {\n    handlePopoverOpen(e.currentTarget, <MoviePopoverContent url={ url } onCloseClick={ handlePopoverClose } />);\n  };\n\n  return (\n    <Stack>\n      <Box sx={ { width: '100%' } }>\n        <Paper sx={ { width: '100%', mb: 2 } } elevation={ 1 }>\n          { header }\n          <TableContainer>\n            <Table size=\"medium\">\n              <TableHead>\n                <TableRow>\n                  {\n                    columns.map((col) => {\n                      return <TableCell key={ col } width=\"50%\">{ upperFirst(col) }</TableCell>;\n                    })\n                  }\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {\n                  tableData.map((row: MovieDetailEntityTableData) => (\n                    <TableRow key={ row.detail } sx={ { '&:last-child td, &:last-child th': { border: 0 }, '&:nth-of-type(odd)': {\n                      backgroundColor: (theme)=> theme.palette.action.hover,\n                      }} }>\n                      {\n                        Object.keys(tableData[0]).map((dataKey: string) => {\n                          return (\n                            <TableCell component=\"th\" scope=\"row\" key={ dataKey } >\n                              <Box sx={ {display: 'flex'} }>\n                                <Typography title={ row[dataKey as keyof MovieDetailEntityTableData] } sx={ {cursor: 'pointer'} }>\n                                  {\n                                    dataKey === 'id' ? \n                                    (\n                                      row[dataKey as keyof MovieDetailEntityTableData]\n                                    ) : \n                                    (\n                                      <Button variant=\"outlined\" size=\"small\" onClick={ onViewClickHandler(row['detail']) }>View</Button>\n                                    )\n                                  }\n                                </Typography>\n                              </Box>\n                            </TableCell>\n                          );\n                        })\n                      }\n                    </TableRow>\n                  ))\n                }\n              </TableBody>  \n            </Table>\n          </TableContainer>\n        </Paper>\n      </Box>\n      { popover }\n    </Stack>\n  );\n};\n\nfunction convertTableData(data: string[] = []): MovieDetailEntityTableData[] {\n  return data.map((char: string) => {\n    const arr = char.split(\"/\");\n    const charId = arr[arr.length - 1];\n    return {\n      id: charId,\n      detail: char\n    };\n  });\n}","import React, { useEffect } from 'react';\nimport Popover, { PopoverOrigin } from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport { Popper, PopperPlacementType } from '@mui/material';\n\n\nexport interface PopoverProps {\n  id: string;\n  position?: PopperPlacementType;\n  handlePopoverOpen?: (target: any) => void;\n}\n\nexport default function usePopover({ id, position=\"bottom\" }: PopoverProps) {\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [content, setContent] = React.useState<any>(null);\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handlePopoverOpen = (target: any, content: any) => {\n    setAnchorEl(anchorEl ? null : target);\n    setContent(content);\n  };\n\n  const popover = (\n    <Popper \n      id={ id }\n      open={ !!anchorEl }\n      anchorEl={ anchorEl }\n      placement={ position }\n    >\n      { content }\n    </Popper>\n  );\n\n  return {\n    popover,\n    handlePopoverClose,\n    handlePopoverOpen\n  };\n};","import { Routes, Route, useParams, Params, useLoaderData, LoaderFunctionArgs } from 'react-router-dom';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { HttpResponse2, StarwarFilmDetail } from \"src/shared/models/starwars.model\";\nimport Typography from '@mui/material/Typography';\nimport ErrorPage from 'src/404/ErrorPage';\nimport { Box, Button, Divider, Stack } from '@mui/material';\nimport MovieDetailCard from './MovieDetailCard';\nimport useScreenSize from 'src/shared/hooks/useIsMobile';\nimport MovieDetailEntityTable from './EntityTable';\nimport SportsMartialArtsIcon from '@mui/icons-material/SportsMartialArts';\nimport { startCase } from 'lodash';\n\nconst tables = ['characters', 'planets', 'species', 'starships', 'vehicles'];\n\nconst Movie = () => {\n\n  const { isMobile } = useScreenSize();\n  const movieData = useLoaderData() as StarwarFilmDetail;\n\n  if (!movieData) return (<Grid xs={ 12 } sm={ 8 } smOffset={ 2 } xsOffset={ 1 }> <ErrorPage reason={ 'Result is malformed' } debug={ 'No properties' } /> </Grid>);\n\n  return (\n    <Grid xs={ 12 } container sx={ {p: 2} }>\n      <Grid xs={ 12 } sm={ 8 } xsOffset={ 0 } smOffset={ 2 }>\n        <Grid xs={ 12 } container \n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            flexDirection={ { xs: 'column', sm: 'row' } }>\n          <Grid xs={ 12 } sm={ 5 } sx={ { mb: isMobile ? 2: 0 } }>\n            <Stack direction=\"column\">\n              <MovieDetailCard movieDetail={ movieData } />\n            </Stack>\n          </Grid>\n          <Grid xs={ 12 } sm={ 7 }>\n            <Stack direction=\"column\" spacing={ 2 }>\n              <Typography variant='h4' sx={ {fontWeight: 500} }>\n                { movieData.title }\n              </Typography>\n              <Divider sx={ {my: 2} } />\n              <Box>\n                <Typography variant='body1'>\n                  { movieData.opening_crawl }\n                </Typography>\n              </Box>\n              {\n                tables.map((tab) => {\n                  return (\n                    <MovieDetailEntityTable columns={ ['id', 'detail'] } columnData={ movieData[tab as keyof StarwarFilmDetail] as any[] } key={ tab }\n                      header={ <Typography\n                        sx={ { display: 'flex', justifyContent: \"start\", alignItems: \"center\", pt: 2, pl: 2 } }\n                        variant=\"h5\"\n                        component=\"div\">\n                        <SportsMartialArtsIcon sx={ {mr: 1} } />\n                        <div style={ {fontFamily: 'Poppins'} }>\n                          { startCase(tab) }\n                        </div>\n                      </Typography> }\n                    />\n                  );\n                })\n              }\n            </Stack>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Movie;\n\n","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Theme } from '@emotion/react';\nimport { SxProps } from '@mui/material';\n\nexport default function ProgressCircle({ size=40, color='grey.500', styleProps }: {size?: number, color?: string, styleProps?: SxProps<Theme>}) {\n  return (\n    <Stack sx={ { color: color, ...styleProps } } spacing={ 1 } direction=\"row\">\n      <CircularProgress color=\"inherit\" size={ size } />\n    </Stack>\n  );\n}","import useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * A media query string\n * which matches screen widths less than the screen size given by the breakpoint key (down)\n * @returns \n */\nconst useScreenSize = () => {\n\n  const theme = useTheme();\n\n  const isMobileScreenSize = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const isMediumSize = useMediaQuery(theme.breakpoints.down('md'));\n\n  const isLargeSize = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const isXlSize = useMediaQuery(theme.breakpoints.down('xl'));\n\n  return {\n    isMobile: isMobileScreenSize,\n    isMed: isMediumSize,\n    isLg: isLargeSize,\n    isXl: isXlSize\n  };\n\n};\n\nexport default useScreenSize;"],"names":["ErrorPage","reason","debug","marginY","width","direction","spacing","justifyContent","alignItems","variant","sx","textTransform","fontWeight","component","style","display","textAlign","JSON","stringify","displayKeys","MovieDetailCard","movieDetail","isMobile","useScreenSize","Card","raised","className","styles","CardMedia","alt","height","image","process","episode_id","title","CardContent","Stack","Typography","fontFamily","Divider","my","fontSize","overflow","borderSpacing","map","key","startCase","isArray","length","CardActions","displayProps","MoviePopoverContent","url","onCloseClick","useState","isLoading","setIsLoading","hasError","setHasError","payload","setPayload","useEffect","abortController","AbortController","axios","signal","then","res","data","result","properties","catch","err","message","finally","abort","Wrapper","props","size","bgcolor","theme","palette","mode","color","p","name","List","prop","ListItem","dense","ListItemIcon","getIcon","ListItemText","primary","secondary","upperFirst","Button","onClick","children","Box","Paper","minHeight","minWidth","propName","gender","Male","birth_year","Cake","Height","mass","MonitorWeight","hair_color","Face4","skin_color","AccessibilityNew","eye_color","Visibility","MovieDetailEntityTable","columns","columnData","header","tableData","setTableData","id","position","React","anchorEl","setAnchorEl","content","setContent","popover","Popper","open","placement","handlePopoverClose","handlePopoverOpen","target","usePopover","isXl","useDeepCompareEffect","char","arr","split","detail","convertTableData","mb","elevation","TableContainer","Table","TableHead","TableRow","col","TableCell","TableBody","row","border","backgroundColor","action","hover","Object","keys","dataKey","scope","cursor","e","currentTarget","tables","movieData","useLoaderData","xs","container","sm","xsOffset","smOffset","flexDirection","opening_crawl","tab","pt","pl","SportsMartialArts","mr","ProgressCircle","styleProps","useTheme","useMediaQuery","breakpoints","down","isMed","isLg"],"sourceRoot":""}