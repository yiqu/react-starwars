{"version":3,"file":"static/js/856.de1b9eaf.chunk.js","mappings":"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","sources":["404/ErrorPage.tsx","core/shared/edit-dialog/EditDialog.tsx","core/species/detail/Specie.tsx","shared/components/layouts/LayoutWithGutter.tsx","shared/components/progress/CircleProgress.tsx","shared/components/toolbar/Toolbar.tsx","shared/hooks/useIsMobile.ts","webpack://starwars/./src/shared/loading/full-logo/LoadingLogo.module.scss?618b","shared/loading/full-logo/LoadingLogo.tsx","store/appHook.ts","../node_modules/@mui/material/esm/internal/svg-icons/Close.js"],"sourcesContent":["import { Box, Stack, Typography } from \"@mui/material\";\n\nexport interface ErrorPageProp {\n  reason?: string;\n  debug?: any;\n}\n\nexport default function ErrorPage({ reason, debug }: ErrorPageProp) {\n\n  return (\n    <Box marginY={ 5 } width=\"100%\">\n      <Stack direction=\"column\" spacing={ 5 } justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" sx={ {textTransform:'uppercase'} }>\n          An error has occurred!\n        </Typography>\n\n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            REASON\n          </Typography>\n          <Typography variant=\"body2\">\n            { reason }\n          </Typography>\n        </Stack>\n        \n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            DEBUG\n          </Typography>\n          <Typography variant=\"body2\" component=\"div\">\n            <pre>\n              <code style={ {display: 'flex', textAlign: 'center'} }>\n                { JSON.stringify(debug) }\n              </code>\n            </pre>\n          </Typography>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};","import { Dialog, DialogTitle, List, ListItem, ListItemButton, ListItemAvatar, Avatar, ListItemText, DialogContent, DialogActions, Button, Box, Alert, AlertTitle, Stack, Typography } from \"@mui/material\";\n\nexport interface EditDialogProps {\n  editable: any;\n  open: boolean;\n  title: string;\n  apiLoading?: boolean;\n  hasErrorMsg?: string;\n  onDialogClose: (editedData?: any) => void;\n}\n\nfunction EditDialog({ editable, onDialogClose, open, title, apiLoading, hasErrorMsg }: EditDialogProps) {\n\n\n  const onSubmitHandler = () => {\n    onDialogClose(editable);\n  };\n\n  const onCancelHandler = () => {\n    onDialogClose(undefined);\n  };\n\n  const onCloseHandler = (event: object, reason: string) => {\n    if (reason === 'backdropClick') {\n      onCancelHandler();\n    }\n  };\n\n  return (\n    <Dialog onClose={ onCloseHandler } open={ open } \n      fullWidth \n      id=\"edit-dialog\"\n      maxWidth={ \"sm\" }>\n      <DialogTitle>\n        { hasErrorMsg && <Stack width=\"100%\" pb={ 2 }>\n          <Alert severity=\"error\" sx={ {borderRadius: '20px'} }>\n            <AlertTitle>Error</AlertTitle>\n            { hasErrorMsg }\n          </Alert>\n        </Stack> }\n        { title}\n      </DialogTitle>\n      \n      <DialogContent>\n        Mock Edit...\n      </DialogContent>\n      <DialogActions >\n        <Button onClick={ onCancelHandler }>Cancel</Button>\n        <Button onClick={ onSubmitHandler }>{ apiLoading ? 'Working...' : 'Submit' } </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default EditDialog;","import { Box, Button, Divider, Paper, Stack, Typography } from \"@mui/material\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport FilterInput from \"src/core/movies/movies/filter/FilterInput\";\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport AppToolbar from \"src/shared/components/toolbar/Toolbar\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { useAppDispatch } from \"src/store/appHook\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { speciesTag, starwarsContentApi, useEditSpecieMutation, useFetchSpecieQuery } from \"src/core/store/sw-entities-config/swapi\";\nimport LoadingLogo from \"src/shared/loading/full-logo/LoadingLogo\";\nimport ErrorPage from \"src/404/ErrorPage\";\nimport SimpleGridDisplay from \"src/core/shared/display/SimpleGridDisplay\";\nimport LayoutWithGutter from \"src/shared/components/layouts/LayoutWithGutter\";\nimport { flexCenter } from \"src/shared/utils/css.utils\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { HttpSearchResponse, StarwarsSpecie } from \"src/shared/models/starwars.model\";\nimport { QueryObj } from \"src/shared/models/url\";\nimport { isArray, startCase } from 'lodash';\nimport { isNumeric } from \"src/shared/utils/number.utils\";\nimport EditDialog from \"src/core/shared/edit-dialog/EditDialog\";\n\n\nfunction Specie() {\n  const { isMobile } = useScreenSize();\n  const dispatch = useAppDispatch();\n  const { specieId } = useParams();\n  const [ openEditDialog, setOpenEditDialog ] = useState<boolean>(false);\n  const { data, isLoading, isFetching, error, isError, refetch } = useFetchSpecieQuery(specieId!);\n  const [ editSpecie, editResult ] = useEditSpecieMutation();\n\n  const display = useMemo(() => {\n    let list: QueryObj[] = [];\n    list = displayList.map((key: string) => {\n      return {\n        key,\n        value: (`${data?.result.properties[key as keyof StarwarsSpecie]}`)\n      };\n    });\n    return list;\n  }, [data]);\n\n  const onRefreshHandler = () => {\n    refetch();\n  };\n\n  const onEditHandler = () => {\n    setOpenEditDialog(true);\n  };\n\n  const onDialogCloseHandler = (editedData?: StarwarsSpecie) => {\n    if (editedData) {\n      editSpecie({\n        entityId: specieId!,\n        editable: editedData\n      });\n    } else {\n      setOpenEditDialog(false);\n    }\n  };\n  \n  if (isLoading) return (\n    <Stack direction=\"column\" width=\"100%\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n      <LoadingLogo message=\"species\" />\n    </Stack>\n  );\n\n  if (isError) {\n    return <ErrorPage reason={ (error as any).status } debug={ (error as any).error } />;\n  }\n\n  if (!data) {\n    return <></>;\n  }\n\n  return (\n    <Stack direction=\"column\" width=\"100%\">\n      <AppToolbar toolbarProps={ {\n        position: \"sticky\",\n        sx: {top: isMobile ? '56px':'64px'}\n      } }>\n        <Grid container xs={ 12 } flexDirection={ { xs: 'row', sm: 'row' } } justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid xs={ 10 } sm={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Button startIcon={ <RefreshIcon /> } variant=\"text\" onClick={ onRefreshHandler }>Refresh</Button>\n              <Divider orientation=\"vertical\" variant=\"middle\" flexItem sx={ {mr: 1, ml: 1} } />\n              <Button startIcon={ <EditIcon /> } variant=\"text\" onClick={ onEditHandler }>Edit</Button>\n            </Stack>\n          </Grid>\n          <Grid xs={ 2 } sm={ 8 }>\n            <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n              { isFetching && <ProgressCircle size={ 20 } /> }\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n\n      <Box mt={ 2 } m={ isMobile ? 2 : 0 }>\n        <LayoutWithGutter size={ 'med' }>\n          <Grid xs={ 12 } sx={ {border: '1px solid #ddd', borderRadius: '10px', p: 2} }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Typography variant='h4' sx={ {fontWeight: 500} } mr={ 2 }>\n                { data.result.properties.name }\n              </Typography>\n              <Typography variant='body1'>\n                ({ data.result.properties.classification })\n              </Typography>\n            </Stack>\n            <Divider sx={ {my: 2} } />\n            <Stack direction=\"column\" >\n              {\n                display.map((res) => {\n                  return (\n                    <Box key={ res.key } mb={ 1 }>\n                      <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n                        <Typography variant='h6' fontWeight={ 300 }>\n                          { startCase(res.key) }\n                        </Typography>\n                        <Typography mr={ 1.5 }>:</Typography>\n                        <Typography variant='h5'>\n                          { isNumeric(res.value) ? ((+res.value).toLocaleString()) : res.value }\n                        </Typography>\n                      </Stack>\n                    </Box>\n                  );\n                })\n              }\n            </Stack>\n          </Grid>\n        </LayoutWithGutter>\n      </Box>\n\n      <EditDialog open={ openEditDialog }  title={ `Edit ${data.result.properties.name}` } \n        editable={ data.result.properties } onDialogClose={ onDialogCloseHandler } apiLoading={ editResult.isLoading }\n        hasErrorMsg={ (editResult.error as any)?.error } />\n    </Stack>\n  );\n}\n\nexport default Specie;\n\n\nconst displayList = ['language', 'designation', 'average_height', 'average_lifespan', 'hair_colors', 'skin_colors', 'eye_colors'];","import Grid from '@mui/material/Unstable_Grid2';\nimport { ReactNode } from 'react';\n\nexport interface LayoutGutterProps {\n  children: ReactNode;\n  size?: \"full\" | \"med\" | \"skinny\"\n}\n\nfunction LayoutWithGutter({ size = \"med\", children }: LayoutGutterProps) {\n\n  return (\n    // <Grid container spacing={ 0 } xs={ 12 } xsOffset={ 0 } sm={ sizes.width } smOffset={ sizes.offset }>\n    //   { children }\n    // </Grid>\n    <Grid container spacing={ 0 } xs={ 12 } xsOffset={ 0 } \n      sm={ size==='full' ? 12 : (size === 'med' ? 7 : (4)) } \n      smOffset={ size==='full' ? 0 : (size === 'med' ? 2.5 : (4)) }>\n      { children }\n    </Grid>\n  );\n}\n\nexport default LayoutWithGutter;","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Theme } from '@emotion/react';\nimport { SxProps } from '@mui/material';\n\nexport default function ProgressCircle({ size=40, color='grey.500', styleProps }: {size?: number, color?: string, styleProps?: SxProps<Theme>}) {\n  return (\n    <Stack sx={ { color: color, ...styleProps } } spacing={ 1 } direction=\"row\">\n      <CircularProgress color=\"inherit\" size={ size } />\n    </Stack>\n  );\n}","import { AppBar, Stack, Button, Tooltip, IconButton, AppBarTypeMap } from \"@mui/material\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport Toolbar from '@mui/material/Toolbar';\nimport { GREY } from \"src/theme/palette\";\n\ninterface ToolbarProps {\n  toolbarProps: any;\n  children: any;\n}\n\nexport default function AppToolbar({ toolbarProps, children }: ToolbarProps) {\n  \n  return (\n    <AppBar elevation={ 0 } { ...toolbarProps }>\n      <Toolbar \n        variant=\"regular\" \n        sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? GREY[100] : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#000' : null,\n          pr: 0\n        } }>\n        { children }\n      </Toolbar>\n    </AppBar>\n  );\n}","import useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * A media query string\n * which matches screen widths less than the screen size given by the breakpoint key (down)\n * @returns \n */\nconst useScreenSize = () => {\n\n  const theme = useTheme();\n\n  const isMobileScreenSize = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const isMediumSize = useMediaQuery(theme.breakpoints.between('sm', 'md'));\n\n  const isLargeSize = useMediaQuery(theme.breakpoints.between('md', 'lg'));\n\n  const isXlSize = useMediaQuery(theme.breakpoints.between('lg', 'xl'));\n\n  const isAboveXlSize = useMediaQuery(theme.breakpoints.up('xl'));\n\n\n  return {\n    isMobile: isMobileScreenSize,\n    isMed: isMediumSize,\n    isLg: isLargeSize,\n    isXl: isXlSize,\n    isAboveXl: isAboveXlSize\n  };\n\n};\n\nexport default useScreenSize;","// extracted by mini-css-extract-plugin\nexport default {\"parentClass\":\"LoadingLogo_parentClass__NFHXT\",\"loadingLogo\":\"LoadingLogo_loadingLogo__BqUtz\",\"loadingParent\":\"LoadingLogo_loadingParent__VASnq\",\"loading-container\":\"LoadingLogo_loading-container__cjLsJ\",\"whole-page\":\"LoadingLogo_whole-page__DkCG7\",\"ldsFacebook\":\"LoadingLogo_ldsFacebook__pRdY2\",\"lds-facebook\":\"LoadingLogo_lds-facebook__JLntj\"};","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useReducer, useState, useContext, useMemo, Suspense } from 'react';\nimport classes from './LoadingLogo.module.scss';\nimport logo from '../../../static/img/death-star.png';\n\nexport interface LoadingLogoProps {\n  message: string;\n  children?: any;\n}\n\nexport default function LoadingLogo(props: LoadingLogoProps) {\n\n\n  return (\n    <div className={ `${classes.parentClass} w-100` }>\n      <div>\n        <div className={ classes.loadingLogo }>\n          <img src={ logo }\n            className={ `${classes.logoImg} d-inline-block` } alt=\"logo\" />\n        </div>\n    \n      </div>\n      <div className={ classes.loadingParent }>\n        <div className={ classes.ldsFacebook }><div></div><div></div><div></div></div>\n      </div>\n      <div className={ classes.secfont }>\n        Loading {props.message} ...\n      </div>\n    </div>\n  );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport type { TypedUseSelectorHook } from 'react-redux';\nimport type { RootState, AppDispatch } from './appStore';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["ErrorPage","reason","debug","marginY","width","direction","spacing","justifyContent","alignItems","variant","sx","textTransform","fontWeight","component","style","display","textAlign","JSON","stringify","editable","onDialogClose","open","title","apiLoading","hasErrorMsg","onCancelHandler","undefined","Dialog","onClose","event","fullWidth","id","maxWidth","DialogTitle","Stack","pb","Alert","severity","borderRadius","AlertTitle","DialogContent","DialogActions","Button","onClick","isMobile","useScreenSize","specieId","useAppDispatch","useParams","useState","openEditDialog","setOpenEditDialog","useFetchSpecieQuery","data","isLoading","isFetching","error","isError","refetch","useEditSpecieMutation","editSpecie","editResult","useMemo","displayList","map","key","value","result","properties","height","LoadingLogo","message","status","toolbarProps","position","top","container","xs","flexDirection","sm","startIcon","Refresh","Divider","orientation","flexItem","mr","ml","Edit","size","Box","mt","m","LayoutWithGutter","border","p","Typography","name","classification","my","res","mb","startCase","isNumeric","toLocaleString","editedData","entityId","children","xsOffset","smOffset","ProgressCircle","color","styleProps","AppToolbar","elevation","bgcolor","theme","palette","mode","GREY","pr","useTheme","useMediaQuery","breakpoints","down","isMed","between","isLg","isXl","isAboveXl","up","props","className","classes","src","logo","alt","useDispatch","useAppSelector","useSelector","createSvgIcon","_jsx","d"],"sourceRoot":""}