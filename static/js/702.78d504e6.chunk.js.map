{"version":3,"file":"static/js/702.78d504e6.chunk.js","mappings":"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","sources":["shared/loading/LoadingSkeleton.tsx","core/favorites/all/FavoriteCard.tsx","core/favorites/all/FavoritesAll.tsx","core/store/favorites/favorites.selectors.ts","shared/components/date/DateDisplay.tsx","store/appHook.ts","../node_modules/@mui/icons-material/Favorite.js","../node_modules/@mui/icons-material/HourglassBottom.js","../node_modules/@mui/material/esm/styles/cssUtils.js","../node_modules/@mui/material/esm/Skeleton/skeletonClasses.js","../node_modules/@mui/material/esm/Skeleton/Skeleton.js"],"sourcesContent":["import { Stack, Skeleton } from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2';\n\nexport interface LoadingSkeletonProps {\n  loading?: boolean;\n  children: any;\n}\n\nexport default function LoadingSkeleton(props: LoadingSkeletonProps) {\n\n  if (props.loading) return (\n    <Grid xs={ 12 } sm={ 12 } >\n      <Stack direction=\"row\" sx={ { display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%'} }>\n        <Skeleton variant='text' sx={ { fontSize: '2rem', width: '10rem'} } />\n        <Skeleton variant='circular' width={ 40 } height={ 40 } />\n      </Stack>\n\n      <Skeleton variant='rectangular' height=\"30rem\" />\n    </Grid>\n  );\n\n  return (\n    <>\n      {props.children}\n    </>\n  );\n}","import { Card, CardContent, Typography, CardActions, Button, IconButton, Stack, Box } from \"@mui/material\";\nimport { FavoriteToSave } from \"src/shared/models/starwars.model\";\nimport FavIcon from '@mui/icons-material/Favorite';\nimport HourglassBottomIcon from '@mui/icons-material/HourglassBottom';\nimport DateDisplay from \"src/shared/components/date/DateDisplay\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { useAppDispatch, useAppSelector } from \"src/store/appHook\";\nimport { fetchFavoritesSwitchThunk, toggleFavoriteExhaustThunk } from \"src/core/store/favorites/favorites.thunks\";\nimport { BASE_FIREBASE_URL } from \"src/shared/api/endpoints\";\nimport urlcat from \"urlcat\";\nimport * as fromFavSelectors from '../../store/favorites/favorites.selectors';\n\n\nexport interface FavoriteCardProps {\n  fav: FavoriteToSave;\n}\n\nexport default function FavoriteCard({ fav }: FavoriteCardProps) {\n  const userId = 'yqu';\n  const { isMobile } = useScreenSize();\n  const dispatch = useAppDispatch();\n  //TODO: make loading to be individual , not all loading\n  const isUnfavLoading = useAppSelector(fromFavSelectors.selectIsLoading);\n  \n  const unfavoriteHandler = () => {\n    if (fav.isCurrentFavorite) {\n      const favorite: FavoriteToSave = {\n        ...fav,\n        lastUpdated: new Date().getTime(),\n        isCurrentFavorite: false,\n      };\n      const restUrl: string = urlcat(\n        BASE_FIREBASE_URL, \n        `swdb/:user/favorites/${fav.fireId}.json`, \n        { user: userId }\n      );\n      const promise = dispatch(toggleFavoriteExhaustThunk({\n        fav: favorite,\n        url: restUrl\n      }));\n      promise.then((_) => {\n        dispatch(fetchFavoritesSwitchThunk({user: 'yqu'}));\n      });\n    }\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" sx={ {fontWeight: '300'} }>\n          EP { fav.episodeId }\n        </Typography>\n        <Box color=\"text.secondary\">\n          <Stack direction={ isMobile ? 'column' : 'row' }>\n            <Box marginRight=\"5px\">\n              Last updated: <DateDisplay date={ fav.lastUpdated } fromNow />\n            </Box>\n            <Box>\n              (<DateDisplay date={ fav.lastUpdated } fromNow={ false } format={ 'MM/DD/YY hh:mm A' } />)\n            </Box>\n          </Stack>\n        </Box>\n      </CardContent>\n      <CardActions>\n        <IconButton \n          onClick={ unfavoriteHandler } \n          title={ fav.isCurrentFavorite ? 'Unfavorite this film' : '' }\n          disabled={ isUnfavLoading } >\n          { (isUnfavLoading) ? <HourglassBottomIcon /> : <FavIcon color={ fav.isCurrentFavorite ? 'error' : 'disabled' } />}\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n","import { FavoriteToSave } from \"src/shared/models/starwars.model\";\nimport { useAppDispatch, useAppSelector } from \"src/store/appHook\";\nimport * as fromFavSelectors from '../../store/favorites/favorites.selectors';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport LoadingSkeleton from \"src/shared/loading/LoadingSkeleton\";\nimport FavoriteCard from \"./FavoriteCard\";\n\nexport default function FavoritesAll() {\n\n  const favorites: FavoriteToSave[] = useAppSelector(fromFavSelectors.selectFavorited);\n  const isFirstTimeLoading: boolean | undefined = useAppSelector(fromFavSelectors.selectIsFirstTimeLoading);\n\n  return (\n    <LoadingSkeleton loading={ isFirstTimeLoading }>\n      <Grid container spacing={ 2 }>\n        {\n          favorites.map((fav) => {\n            return (\n              <Grid md={ 4 } xs={ 12 } key={ fav.fireId } >\n                <FavoriteCard fav={ fav } />\n              </Grid>\n            );\n          })\n        }\n      </Grid>\n\n    </LoadingSkeleton>\n  );\n};","import { createSelector, createAction } from \"@reduxjs/toolkit\";\nimport { FavoriteMoviesObjList, FavoriteToSave } from \"src/shared/models/starwars.model\";\nimport { RootState } from \"src/store/appStore\";\nimport produce from 'immer';\nimport { adapter } from \"./favorites.reducer\";\n\nconst favoriteFilmsSlice = (state: RootState) => {\n  return state.favoriteFilms;\n};\n\nexport const { selectAll, selectById, selectEntities, selectIds, selectTotal } =\n  adapter.getSelectors((state: RootState) => state.favoriteFilms);\n\nexport const selectIsLoading = (state: RootState) => {\n  return favoriteFilmsSlice(state).loading;\n};\n\nexport const selectIsFirstTimeLoading = (state: RootState) => {\n  return favoriteFilmsSlice(state).firstTimeLoading;\n};\n\nexport const selectError = (state: RootState) => {\n  return favoriteFilmsSlice(state).error;\n};\n\nexport const selectErrorMsg = (state: RootState) => {\n  return favoriteFilmsSlice(state).errMsg;\n};\n\nexport const selectAllByEpId = createSelector(\n  selectAll,\n  (state: FavoriteToSave[]): FavoriteMoviesObjList => {\n    const allFavs = state;\n    const transformedData: FavoriteMoviesObjList = {};\n    allFavs.forEach((fav: FavoriteToSave) => {\n      transformedData[fav.episodeId] = {\n        ...fav\n      };\n    });\n    return transformedData;\n  }\n);\n\nexport const selectFavorited = createSelector(\n  selectAll,\n  (allFavs: FavoriteToSave[]) => {\n    const result: FavoriteToSave[] = produce(allFavs, (draft) => {\n      return draft.filter((fav) => {\n        return !!fav.isCurrentFavorite;\n      });\n    });\n    return result;\n  }\n);","import { Tooltip } from '@mui/material';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nexport interface DateDisplayProp {\n  date: string | number;\n  fromNow?: boolean;\n  format?: string;\n}\n\nconst DateDisplay = ({ date=0, fromNow=true, format=\"MM/DD/YY HH:mm\" }: DateDisplayProp) => {\n\n  return (\n    <Tooltip title={ date ? moment(date).format(format) : 'No date found' }>\n      <span>\n        {date ? (<Moment date={ date } fromNow={ fromNow } format={ fromNow ? undefined: format } />) : (<>N/A</>)}\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default DateDisplay;","import { useDispatch, useSelector } from 'react-redux';\nimport type { TypedUseSelectorHook } from 'react-redux';\nimport type { RootState, AppDispatch } from './appStore';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m18 22-.01-6L14 12l3.99-4.01L18 2H6v6l4 4-4 3.99V22h12zM8 7.5V4h8v3.5l-4 4-4-4z\"\n}), 'HourglassBottom');\n\nexports.default = _default;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    let pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    } // Convert length in pixels to the output unit\n\n\n    let outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;"],"names":["LoadingSkeleton","props","loading","xs","sm","Stack","direction","sx","display","justifyContent","alignItems","width","Skeleton","variant","fontSize","height","children","FavoriteCard","fav","isMobile","useScreenSize","dispatch","useAppDispatch","isUnfavLoading","useAppSelector","fromFavSelectors","Card","CardContent","Typography","fontWeight","episodeId","Box","color","marginRight","DateDisplay","date","lastUpdated","fromNow","format","CardActions","IconButton","onClick","isCurrentFavorite","favorite","Date","getTime","restUrl","urlcat","BASE_FIREBASE_URL","fireId","user","toggleFavoriteExhaustThunk","url","then","_","fetchFavoritesSwitchThunk","title","disabled","HourglassBottom","FavoritesAll","favorites","isFirstTimeLoading","container","spacing","map","md","favoriteFilmsSlice","state","favoriteFilms","adapter","selectAll","selectIsLoading","selectById","selectEntities","selectIds","selectTotal","selectIsFirstTimeLoading","firstTimeLoading","selectAllByEpId","createSelector","transformedData","forEach","selectFavorited","allFavs","produce","draft","filter","moment","undefined","useDispatch","useSelector","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getUnit","input","String","match","toUnitless","length","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","name","overridesResolver","styles","ownerState","root","animation","hasChildren","withChildren","fitContent","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","backgroundColor","vars","palette","bg","alpha","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","css","action","hover","React","inProps","ref","useThemeProps","className","component","style","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}