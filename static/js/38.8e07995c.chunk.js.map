{"version":3,"file":"static/js/38.8e07995c.chunk.js","mappings":"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","sources":["404/ErrorPage.tsx","core/utils/films.utils.tsx","core/movies/movies/MovieCard.tsx","webpack://starwars/./src/shared/loading-backdrop/LoadingBackdrop.module.scss?ef27","shared/loading-backdrop/LoadingBackdrop.tsx","core/store/all-films/films.selectors.ts","core/movies/movies/Movies.tsx","shared/models/general.model.ts","../node_modules/@mui/icons-material/Favorite.js","../node_modules/@mui/icons-material/TableChart.js","../node_modules/@mui/icons-material/ViewModule.js"],"sourcesContent":["import { Box, Stack, Typography } from \"@mui/material\";\n\nexport interface ErrorPageProp {\n  reason?: string;\n  debug?: any;\n}\n\nexport default function ErrorPage({ reason, debug }: ErrorPageProp) {\n\n  return (\n    <Box marginY={ 5 } width=\"100%\">\n      <Stack direction=\"column\" spacing={ 5 } justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" sx={ {textTransform:'uppercase'} }>\n          An error has occurred!\n        </Typography>\n\n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            REASON\n          </Typography>\n          <Typography variant=\"body2\">\n            { reason }\n          </Typography>\n        </Stack>\n        \n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            DEBUG\n          </Typography>\n          <Typography variant=\"body2\" component=\"div\">\n            <pre>\n              <code style={ {display: 'flex', textAlign: 'center'} }>\n                { JSON.stringify(debug) }\n              </code>\n            </pre>\n          </Typography>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};","import { FavoriteMoviesObjList, FavoriteToSave, ResultProperty, StarwarsFilm } from \"src/shared/models/starwars.model\";\nimport moment from 'moment';\nimport produce from 'immer';\nimport { Dictionary } from \"@reduxjs/toolkit\";\n\n\nexport const getFilmFavoriteToggleTooltip = (favorited?: FavoriteToSave) => {\n  let tooltip: string = '';\n  const dateFromNow = favorited?.lastUpdated ? (moment(favorited?.lastUpdated).fromNow()) : ('');\n\n  if (favorited?.isCurrentFavorite) {\n    tooltip = 'Remove from favorites';\n  } else {\n    tooltip = 'Add to favorites';\n  }\n\n  if (favorited?.lastUpdated) {\n    tooltip = tooltip + '. ' + (favorited.isCurrentFavorite ? 'Favorited ' : 'Unfavorited ') + dateFromNow;\n  }\n\n  return tooltip;\n};\n\nexport const getSortedFilmsWithFavorited = (allFilms: ResultProperty<StarwarsFilm>[] | undefined, favorited: Dictionary<FavoriteToSave>): ResultProperty<StarwarsFilm>[] => {\n  const result = produce((allFilms ?? []), (draft: ResultProperty<StarwarsFilm>[]) => {\n    draft.sort((prev: ResultProperty<StarwarsFilm>, next: ResultProperty<StarwarsFilm>) => {\n      return prev.properties.episode_id > next.properties.episode_id ? 1 : -1;\n    });\n    draft.forEach((res: ResultProperty<StarwarsFilm>) => {\n      res.properties.favorite = favorited[res.properties.episode_id];\n    });\n  });\n\n  return result;\n};","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Link } from \"react-router-dom\";\nimport FavIcon from '@mui/icons-material/Favorite';\nimport HourglassBottomIcon from '@mui/icons-material/HourglassBottom';\nimport IconButton from '@mui/material/IconButton';\nimport { useEffect, useState } from 'react';\nimport { Box, Stack } from \"@mui/material\";\nimport { getFilmFavoriteToggleTooltip } from \"src/core/utils/films.utils\";\nimport DateDisplay from \"src/shared/components/date/DateDisplay\";\nimport { StarwarsFilm, FavoriteToSave } from \"src/shared/models/starwars.model\";\nimport { BASE_FIREBASE_URL } from \"src/shared/api/endpoints\";\nimport { axiosPost, axiosPut } from 'src/shared/rest/axios';\nimport urlcat from \"urlcat\";\nimport { AxiosResponse } from \"axios\";\nimport { useAppDispatch } from 'src/store/appHook';\nimport { addNewFavoriteExhaustThunk, fetchFavoritesThunk, toggleFavoriteExhaustThunk } from 'src/core/store/favorites/favorites.thunks';\nimport { FulfilledAction } from 'src/shared/models/redux.model';\nimport { ToggleFavoriteArg } from 'src/core/store/favorites/favorites.state';\n\nexport interface StarwarsFilmCardProps {\n  film: StarwarsFilm;\n  uid: string;\n  userId: string;\n  allFavoritesLoading?: boolean;\n  favToggleLoading?: boolean;\n}\n\nexport default function MovieCard({ film, uid, userId, allFavoritesLoading, favToggleLoading }: StarwarsFilmCardProps) {\n  const dispatch = useAppDispatch();\n\n  const favoriteToggleHandler = () => {\n    const { url: filmUrl } = film;\n    const filmId = (filmUrl.split(\"/\"))[filmUrl.split(\"/\").length - 1];\n    const restUrl: string = urlcat(\n      BASE_FIREBASE_URL, \n      `swdb/:user/favorites${film.favorite?.fireId ? ('/'+film.favorite?.fireId) :''}.json`, \n      { user: userId }\n    );\n\n    const favorite: FavoriteToSave = {\n      filmUrl,\n      filmId,\n      lastUpdated: new Date().getTime(),\n      episodeId: film.episode_id,\n      isCurrentFavorite: true,\n    };\n\n    let promise;\n    if (film.favorite) {\n      favorite.isCurrentFavorite = !film.favorite.isCurrentFavorite;\n      favorite.fireId = film.favorite.fireId;\n      promise = dispatch(toggleFavoriteExhaustThunk({\n        fav: favorite,\n        url: restUrl,\n        favStatus: !film.favorite.isCurrentFavorite\n      }));\n    } else {\n      promise = dispatch(addNewFavoriteExhaustThunk({\n        fav: favorite,\n        url: restUrl,\n        favStatus: true\n      }));\n    }\n    promise.then((_) => dispatch(fetchFavoritesThunk({httpParams: {user: 'yqu'}})));\n  };\n\n  return (\n    <Card sx={ {display:'flex',\n      flexDirection:'column', \n      justifyContent:'space-between'} } \n      elevation={ 2 }\n    >\n      <div>\n        <CardMedia\n          component=\"img\"\n          alt=\"poster\"\n          height=\"440\"\n          image={ `${process.env.PUBLIC_URL}/assets/poster-img/${film.episode_id}.png` }\n          sx={ {backgroundColor: '#000', objectFit: 'contain'} }\n        />\n        <CardContent>\n          <Stack direction={ {lg: 'column', xl: 'row'} } justifyContent={ {xl:'space-between', lg:'flex-start'} }\n            marginBottom={ {lg:'10px', xl: '0px'} }>\n            <Typography gutterBottom variant=\"h5\" component={ Link } to={ `./${uid}` } sx={ {\n              fontWeight:'500'} }>\n              { film.title }\n            </Typography>\n            <Typography variant=\"h5\" color='text.secondary' sx={ {fontWeight: '300'} }>\n              EP { film.episode_id }\n            </Typography>\n          </Stack>\n          \n          <Stack spacing={ 1 }>\n            <Stack direction=\"row\" spacing={ 0.5 }>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                Released:\n              </Typography>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                <DateDisplay date={ film.release_date } format=\"MMM Do YYYY\" />\n              </Typography>\n            </Stack>\n            \n            <Typography variant=\"body1\" color=\"text.secondary\">\n              Directed by: { film.director }\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\">\n              Produced by: { film.producer }\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.primary\">\n              { film.opening_crawl }\n            </Typography>\n          </Stack>\n          \n        </CardContent>\n      </div>\n      \n      <CardActions sx={ {display: 'flex', justifyContent: 'space-between'} }>\n        <div>\n          <Button size=\"small\" component={ Link } to={ `./${uid}` }>\n            See More\n          </Button>\n        </div>\n        <div>\n          <IconButton \n            aria-label=\"favorite\" \n            onClick={ favoriteToggleHandler } \n            title={ getFilmFavoriteToggleTooltip(film.favorite) }\n            disabled={ !!(allFavoritesLoading) } >\n            { (allFavoritesLoading) ? <HourglassBottomIcon /> : <FavIcon color={ film.favorite?.isCurrentFavorite ? 'error' : 'disabled' } />}\n          </IconButton>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"loadingbackdrop\":\"LoadingBackdrop_loadingbackdrop__fzQLF\",\"spinner\":\"LoadingBackdrop_spinner__8-PXS\"};","import { Box } from \"@mui/material\";\nimport { ReactNode } from \"react\";\nimport classes from './LoadingBackdrop.module.scss';\n\nexport interface LoadingBackdropProps {\n  isLoading?: boolean;\n  children?:  ReactNode | undefined;\n}\n\nfunction LoadingBackdrop({ isLoading, children }: LoadingBackdropProps) {\n\n  return (\n    <Box className={ isLoading ? `${classes.loadingbackdrop}` :'' } width=\"100%\">\n      { children }\n    </Box>\n  );\n};\n\nexport default LoadingBackdrop;","import { createSelector } from \"@reduxjs/toolkit\";\nimport { FavoriteMoviesObjList, ResultProperty, StarwarsFilm } from \"src/shared/models/starwars.model\";\nimport { RootState } from \"src/store/appStore\";\nimport * as fromFilmsReducer from './films.reducer';\nimport { getSortedFilmsWithFavorited } from \"src/core/utils/films.utils\";\nimport { HttpParams } from \"src/shared/models/http.model\";\nimport produce from \"immer\";\nimport { selectAllByEpId } from \"../favorites/favorites.selectors\";\n\nconst allFilmsSlice = (state: RootState) => {\n  return state.allFilms;\n};\n\nexport const { selectAll, selectById, selectEntities, selectIds, selectTotal } =\n  fromFilmsReducer.adapter.getSelectors((state: RootState) => state.allFilms);\n\nexport const selectIsLoading = (state: RootState) => {\n  return allFilmsSlice(state).isLoading;\n};\n\nexport const selectIsValidating = (state: RootState) => {\n  return allFilmsSlice(state).isValidating;\n};\n\nexport const selectApiUrl = (state: RootState) => {\n  return allFilmsSlice(state).apiUrl;\n};\n\nexport const selectApiParams = (state: RootState) => {\n  return allFilmsSlice(state).apiParams;\n};\n\nexport const selectError = (state: RootState) => {\n  return allFilmsSlice(state).errMsg;\n};\n\n\nexport const getAllFilmsWithFavorites = createSelector(\n  selectAll,\n  selectAllByEpId,\n  (allFilms: ResultProperty<StarwarsFilm>[], favFilmsMap: FavoriteMoviesObjList): ResultProperty<StarwarsFilm>[] => {\n    const result = getSortedFilmsWithFavorited(allFilms, favFilmsMap);\n    return result;\n  }\n);\n\nexport const getFetchParams = createSelector(\n  selectApiParams,\n  (params: HttpParams | undefined) => {\n    let p = {\n      ...params\n    };\n    const keys = Object.keys(p);\n    keys.forEach((key) => {\n      const value = `${p[key]}`.trim();\n      if (value === '') {\n        delete p[key];\n      }\n    });\n    return p;\n  }\n);","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useContext } from \"react\";\nimport { Box, Button, IconButton, Stack, Tooltip, Typography } from \"@mui/material\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { useCallback, useMemo, useState, useEffect } from \"react\";\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport { FavoriteMoviesObjList, FavoriteToSave, ResultProperty, StarwarsFilm } from \"src/shared/models/starwars.model\";\nimport FilterInput from \"./filter/FilterInput\";\nimport MovieCard from \"./MovieCard\";\nimport AppToolbar from \"src/shared/components/toolbar/Toolbar\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport { useSearchParams } from \"react-router-dom\";\nimport TableChartIcon from '@mui/icons-material/TableChart';\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\nimport LoadingBackdrop from \"src/shared/loading-backdrop/LoadingBackdrop\";\nimport SnackbarContext from \"src/shared/context/snackbar/SnackbarContext\";\nimport ErrorPage from \"src/404/ErrorPage\";\nimport * as fromAllFilmsSelectors from '../../store/all-films/films.selectors';\nimport { useAppDispatch, useAppSelector } from \"src/store/appHook\";\nimport * as fromFavoriteFilmsSelectors from '../../store/favorites/favorites.selectors';\nimport { setParams2 } from \"src/core/store/all-films\";\nimport { useFetchFilmsQuery } from \"src/core/store/swapi-films/swapi-films\";\n\n\nconst userId = 'yqu';\n\nconst Movies = () => {\n  const dispatch = useAppDispatch();\n  const { showSnackbar } = useContext(SnackbarContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentDisplayModeUrl = searchParams.get(\"moviePageDisplayMode\");\n  const { isMobile } = useScreenSize();\n\n  const [filmPageDisplayMode, setFilmPageDisplayMode] = useState<string | null>(currentDisplayModeUrl);\n\n  const isFilmsLoading: boolean | undefined = useAppSelector(fromAllFilmsSelectors.selectIsLoading);\n  const isFilmsValidating: boolean | undefined = useAppSelector(fromAllFilmsSelectors.selectIsValidating);\n  const fetchFilmsError: any = useAppSelector(fromAllFilmsSelectors.selectError);\n  const favoritesLoading: boolean | undefined = useAppSelector(fromFavoriteFilmsSelectors.selectIsLoading);\n  const favToggleLoading: boolean | undefined = useAppSelector(fromFavoriteFilmsSelectors.selectIsFavToggleLoading);\n  const sortedFilms: ResultProperty<StarwarsFilm>[] = useAppSelector(fromAllFilmsSelectors.getAllFilmsWithFavorites);\n\n  const { data, isLoading, isFetching, fulfilledTimeStamp, startedTimeStamp, refetch } = useFetchFilmsQuery();\n  console.log(data);\n  if (fulfilledTimeStamp && startedTimeStamp) {\n    console.log(fulfilledTimeStamp - startedTimeStamp);\n  }\n  \n\n  /**\n   * Clean up - close any snackbars\n   */\n  useEffect(() => {\n    return (() => {\n      showSnackbar('info', undefined);\n    });\n  }, [showSnackbar]);\n\n\n  const onFilterChangeHandler = useCallback((movieName: string) => {\n    dispatch(setParams2({title: movieName}));\n  }, [dispatch]);\n\n  const filmPageDisplayToggleHandler = () => {\n    const nextDisplayMode = {\n      moviePageDisplayMode: getNextDisplayState(filmPageDisplayMode)\n    };\n    setSearchParams(nextDisplayMode);\n  };\n\n  return (\n    <>\n      <AppToolbar toolbarProps={ {\n        position:\"sticky\",\n        sx:{top: isMobile ? '56px':'64px'}\n      } }>\n        <Grid container xs={ 12 } flexDirection={ { xs: 'row', sm: 'row' } } justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid xs={ 10 } sm={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Grid container xs={ 12 }>\n                <Grid xs={ 8 }>\n                  <FilterInput filterChange={ onFilterChangeHandler } />\n                </Grid>\n                <Grid xs={ 2 } sx={ {display:'flex'} } justifyContent=\"center\" alignItems=\"center\">\n                  { isFilmsValidating && <ProgressCircle size={ 20 } /> }\n                </Grid>\n              </Grid>\n            </Stack>\n          </Grid>\n          <Grid xs={ 2 } sm={ 8 }>\n            <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n              <Tooltip title={ `Switch to ${getNextDisplayState(filmPageDisplayMode)}` }>\n                <IconButton onClick={ filmPageDisplayToggleHandler }>\n                  { filmPageDisplayMode === DataBlockDisplayMode.CARD ? (<TableChartIcon />) : (<ViewModuleIcon  />) }\n                </IconButton>\n              </Tooltip>\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n\n      {\n        <LoadingBackdrop isLoading={ isFilmsLoading }>\n          {\n            fetchFilmsError ? <ErrorPage reason={ 'Failed loading all films.' } debug={ fetchFilmsError } /> :\n            (\n              <Stack direction=\"column\" p={ 2 } width=\"100%\">\n                <Grid container disableEqualOverflow rowSpacing={ 4 }>\n                  { sortedFilms?.map((film) => {\n                    return (\n                      <Grid key={ film.properties.episode_id } xs={ 12 } sm={ 4 } smOffset={ 4 }>\n                        <MovieCard \n                          userId={ userId }\n                          film={ film.properties } \n                          uid={ film.uid }\n                          allFavoritesLoading={ favoritesLoading }\n                          favToggleLoading={ favToggleLoading } />\n                      </Grid>\n                    );\n                  }) }\n                </Grid>\n              </Stack>\n            )\n          }\n        </LoadingBackdrop>\n      }\n    </>\n  );\n};\n\nexport default Movies;\n\nconst getNextDisplayState = (current: any) => {\n  if (!current) {\n    return DataBlockDisplayMode.CARD;\n  }\n  return current === DataBlockDisplayMode.CARD ? DataBlockDisplayMode.TABLE : DataBlockDisplayMode.CARD;\n};\n","export enum DataBlockDisplayMode {\n  TABLE = \"table\",\n  CARD = \"card\"\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 10.02h5V21h-5zM17 21h3c1.1 0 2-.9 2-2v-9h-5v11zm3-18H5c-1.1 0-2 .9-2 2v3h19V5c0-1.1-.9-2-2-2zM3 19c0 1.1.9 2 2 2h3V10H3v9z\"\n}), 'TableChart');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.67 5v6.5H9.33V5h5.34zm1 6.5H21V5h-5.33v6.5zm-1 7.5v-6.5H9.33V19h5.34zm1-6.5V19H21v-6.5h-5.33zm-7.34 0H3V19h5.33v-6.5zm0-1V5H3v6.5h5.33z\"\n}), 'ViewModule');\n\nexports.default = _default;"],"names":["ErrorPage","reason","debug","marginY","width","direction","spacing","justifyContent","alignItems","variant","sx","textTransform","fontWeight","component","style","display","textAlign","JSON","stringify","getFilmFavoriteToggleTooltip","favorited","tooltip","dateFromNow","lastUpdated","moment","fromNow","isCurrentFavorite","MovieCard","film","uid","userId","allFavoritesLoading","dispatch","favToggleLoading","useAppDispatch","Card","flexDirection","elevation","CardMedia","alt","height","image","process","episode_id","backgroundColor","objectFit","CardContent","Stack","lg","xl","marginBottom","Typography","gutterBottom","Link","to","title","color","DateDisplay","date","release_date","format","director","producer","opening_crawl","CardActions","Button","size","IconButton","onClick","promise","filmUrl","url","filmId","split","length","restUrl","urlcat","BASE_FIREBASE_URL","favorite","fireId","user","Date","getTime","episodeId","toggleFavoriteExhaustThunk","fav","favStatus","addNewFavoriteExhaustThunk","then","_","fetchFavoritesThunk","httpParams","disabled","HourglassBottom","isLoading","children","Box","className","classes","allFilmsSlice","state","allFilms","fromFilmsReducer","selectAll","selectIsLoading","selectById","selectEntities","selectIds","selectTotal","selectIsValidating","isValidating","selectError","errMsg","getAllFilmsWithFavorites","createSelector","selectAllByEpId","favFilmsMap","result","produce","draft","sort","prev","next","properties","forEach","res","getSortedFilmsWithFavorited","apiParams","params","p","Object","keys","key","trim","showSnackbar","useContext","SnackbarContext","useSearchParams","searchParams","setSearchParams","currentDisplayModeUrl","get","isMobile","useScreenSize","useState","filmPageDisplayMode","isFilmsLoading","useAppSelector","fromAllFilmsSelectors","isFilmsValidating","fetchFilmsError","favoritesLoading","fromFavoriteFilmsSelectors","sortedFilms","useFetchFilmsQuery","data","fulfilledTimeStamp","isFetching","startedTimeStamp","refetch","console","log","useEffect","undefined","onFilterChangeHandler","useCallback","movieName","setParams2","toolbarProps","position","top","container","xs","sm","FilterInput","filterChange","Tooltip","getNextDisplayState","nextDisplayMode","moviePageDisplayMode","DataBlockDisplayMode","TableChart","ViewModule","disableEqualOverflow","rowSpacing","map","smOffset","current","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}