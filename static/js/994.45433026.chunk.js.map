{"version":3,"file":"static/js/994.45433026.chunk.js","mappings":"4QA4CA,UAjCA,WACE,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAoDE,EAAAA,EAAAA,IAAwC,GAAI,CAC9FC,QAAQ,IACR,sBAFOC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAASC,EAAO,KASxC,OATgD,MAIhDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkBC,IAAOC,EAAAA,EAAY,oBAAsB,CAAEX,SAAAA,IACnEO,EAAQ,CAACK,IAAKH,GAChB,GAAG,CAACT,EAAUO,IAEVF,GACF,SAAC,IAAK,CAACQ,UAAU,SAASC,MAAM,OAAOC,eAAe,SAASC,WAAW,SAASC,OAAO,QAAO,UAC/F,SAAC,IAAW,CAACC,QAAQ,aAIrBZ,GACF,gCAAIA,EAAMY,QAAO,QAIjB,SAAC,IAAG,CAACC,GAAK,CAACC,EAAG,GAAKN,MAAM,OAAM,UAC7B,UAAC,IAAgB,CAACO,KAAO,MAAO,WAC9B,SAAC,IAAU,CAACC,QAAQ,KAAKH,GAAK,CAACI,WAAY,IAAKC,GAAI,GAAI,SAChD,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,OAAOC,WAAWC,QAE5B,SAAC,IAAM,CAACC,OAAa,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,OAAOC,iBAItC,C","sources":["core/planets/planet/PlanetLayout.tsx"],"sourcesContent":["import { Box, Stack, Typography } from \"@mui/material\";\nimport useAxios from \"axios-hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoadingLogo from \"src/shared/loading/full-logo/LoadingLogo\";\nimport Planet from \"./Planet\";\nimport urlcat from \"urlcat\";\nimport { BASE_SW_API } from \"src/shared/api/endpoints\";\nimport { HttpResponse2, StarwarsPlanet } from \"src/shared/models/starwars.model\";\nimport LayoutWithGutter from \"src/shared/components/layouts/LayoutWithGutter\";\n\nfunction PlanetLayout() {\n  const { planetId } = useParams<string>();\n  const [{ data, loading, error }, refetch, cancel] = useAxios<HttpResponse2<StarwarsPlanet>>('', {\n    manual: true\n  });\n\n  useEffect(() => {\n    const restUrl: string = urlcat(BASE_SW_API, `planets/:planetId`, { planetId });\n    refetch({url: restUrl});\n  }, [planetId, refetch]);\n\n  if (loading) return (\n    <Stack direction=\"column\" width=\"100%\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n      <LoadingLogo message=\"planet\" />\n    </Stack>\n  );\n\n  if (error) return (\n    <>{ error.message } </>\n  );\n\n  return (\n    <Box sx={ {p: 2} } width=\"100%\">\n      <LayoutWithGutter size={ \"med\" }>\n        <Typography variant='h4' sx={ {fontWeight: 500, mb: 4} }>\n          { data?.result.properties.name }\n        </Typography>\n        <Planet planet={ data?.result.properties } />\n      </LayoutWithGutter>\n    </Box>\n  );\n}\n\nexport default PlanetLayout;"],"names":["planetId","useParams","useAxios","manual","data","loading","error","refetch","useEffect","restUrl","urlcat","BASE_SW_API","url","direction","width","justifyContent","alignItems","height","message","sx","p","size","variant","fontWeight","mb","result","properties","name","planet"],"sourceRoot":""}