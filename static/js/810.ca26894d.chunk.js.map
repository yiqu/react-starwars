{"version":3,"file":"static/js/810.ca26894d.chunk.js","mappings":"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","sources":["shared/firebase/fire-axios.ts","core/fetchers/favorites.ts","core/hooks/useFetchFavorites.ts","core/hooks/useFetchMovies.ts","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Search.js","core/movies/movies/filter/FilterInput.tsx","shared/hooks/useDebounce.ts","core/utils/films.utils.tsx","core/movies/movies/MovieCard.tsx","webpack://starwars/./src/shared/loading-backdrop/LoadingBackdrop.module.scss?ef27","shared/loading-backdrop/LoadingBackdrop.tsx","core/movies/movies/Movies.tsx","shared/api/endpoints.ts","shared/components/date/DateDisplay.tsx","shared/components/progress/CircleProgress.tsx","shared/components/toolbar/Toolbar.tsx","shared/fetcber/axios.ts","shared/hooks/useIsMobile.ts","shared/models/general.model.ts","shared/rest/axios.ts","shared/utils/sleep.js","../node_modules/@mui/icons-material/Favorite.js"],"sourcesContent":["import { AxiosResponse } from 'axios';\nimport { HttpParams } from '../models/http.model';\nimport getAxiosInstance from '../rest/axios';\n\nconst BASE_URL = 'https://kq-1-1a499.firebaseio.com/';\n\nconst kqAxiosInstance = getAxiosInstance(BASE_URL);\n\nexport const axiosGet = async <T>(url: string, params: HttpParams | null = null): Promise<T> => {\n  try {\n    const res: AxiosResponse<T, any> = await kqAxiosInstance.get<T>(url + '.json', {\n      params: params\n    });\n    if (res.status === 200) {\n      return res.data;\n    }\n    return Promise.reject(res);\n  } catch (error) {\n    console.error(\"App error\", error);\n    throw error;\n  }\n};\n\nexport const axiosPost = <T>(url: string, data?: T) => {\n  return kqAxiosInstance.post<T>(url + '.json', data)\n  .then((res: AxiosResponse) => {\n    return res.data;\n  })\n  .catch((err) => {\n    console.log(\"App error POST: \", err);\n    throw err;\n  });\n};\n\nexport const axiosPut = <T>(url: string, data?: T) => {\n  return kqAxiosInstance.put<T>(url + '.json', data);\n};\n\nexport const axiosDelete = <T>(url: string, data?: T) => {\n  return kqAxiosInstance.delete<T>(url + '.json');\n};","import { AxiosResponse } from 'axios';\nimport { axiosGet, axiosPost, axiosPut } from 'src/shared/firebase/fire-axios';\nimport { HttpParams } from 'src/shared/models/http.model';\nimport { FavoriteToSave } from 'src/shared/models/starwars.model';\nimport { sleep } from \"../../shared/utils/sleep\";\n\nconst baseUrl: string = 'swdb/';\n\nexport const saveFavorite = (userId: string, film: FavoriteToSave): Promise<AxiosResponse<FavoriteToSave, any>> => {\n  const favUrl = `${baseUrl}${userId}/favorites`;\n  return axiosPost<FavoriteToSave>(favUrl, film);\n};\n\nexport const updateFavorite = (userId: string, favorite: FavoriteToSave): Promise<AxiosResponse<FavoriteToSave, any>> => {\n  const favUrl = `${baseUrl}${userId}/favorites/${favorite.fireId}`;\n  return axiosPut(favUrl, favorite);\n};","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport useSWR from \"swr/immutable\";\nimport { FetchFavoritesHookProp } from 'src/shared/models/core-props.model';\nimport { FavoriteMoviesObjList, FavoriteToSave } from 'src/shared/models/starwars.model';\nimport { axiosGet } from \"src/shared/firebase/fire-axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDeepCompareEffect } from \"react-use\";\nimport urlcat from \"urlcat\";\nimport { httpGet } from \"src/shared/fetcber/axios\";\nimport { FirebaseData } from \"src/shared/models/firebase.model\";\nimport { BASE_FIREBASE_URL } from \"src/shared/api/endpoints\";\n\nconst useFetchFavorites = ({ userId, params={} }: FetchFavoritesHookProp) => {\n\n  const [url, setUrl] = useState<string>();\n  const [transformed, setTransformed] = useState<FavoriteMoviesObjList>({});\n\n  useDeepCompareEffect(() => {\n    const restUrl = urlcat(BASE_FIREBASE_URL, '/swdb/:user/favorites.json', { user: 'yqu', ...params });\n    setUrl(restUrl);\n  }, [userId, params]);\n\n  const { data, isValidating, error, isLoading } = useSWR(\n    () => url ? url : null, \n    (url) => httpGet<FirebaseData<FavoriteToSave>>(url),\n  );\n\n\n  useEffect(() => {\n    const transformedData: FavoriteMoviesObjList = {};\n    if (data) {\n      const keys = Object.keys(data ?? {});\n      keys.forEach((key) => {\n        transformedData[data[key].episodeId] = {\n          fireId: key,\n          ...data[key],\n        };\n      });\n      setTransformed(transformedData);\n    }\n  }, [data]);\n  \n  return {\n    data: transformed,\n    loading: isLoading,\n    error,\n  };\n};\n\nexport default useFetchFavorites;","import { FetchMovieHookProp } from \"src/shared/models/core-props.model\";\nimport useSWR from \"swr\";\nimport { useState } from \"react\";\nimport { useDeepCompareEffect } from \"react-use\";\nimport urlcat from \"urlcat\";\nimport { httpGet } from \"src/shared/fetcber/axios\";\nimport { HttpResponse2List, StarwarsFilm } from \"src/shared/models/starwars.model\";\nimport { BASE_SW_API } from \"src/shared/api/endpoints\";\n\n\nconst useFetchMovies = ({ params={refetch: 0} }: FetchMovieHookProp) => {\n  \n  const [url, setUrl] = useState<string>();\n\n  useDeepCompareEffect(() => {\n    const restUrl = urlcat(BASE_SW_API, '/films', { ...params });\n    setUrl(restUrl);\n  }, [params]);\n\n  const { data, isValidating, error, isLoading } = useSWR(\n    () => url ? url : null, \n    (url) => httpGet<HttpResponse2List<StarwarsFilm>>(url, 1000),\n    {\n      revalidateOnFocus: false,\n      revalidateIfStale: true,\n      keepPreviousData: true\n    }\n  );\n\n  return {\n    allFilms: data?.result,\n    allFilmsLoading: isLoading,\n    allFilmsValidating: isValidating,\n    allFilmsError: error,\n  };\n};\n\nexport default useFetchMovies;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage, useFormikContext, FormikProps } from 'formik';\nimport * as Yup from 'yup';\nimport FormInput from 'src/shared/form/m-input/FormInput';\nimport { IconButton, InputAdornment, TextField, TextFieldProps } from '@mui/material';\nimport { useDebounce } from 'src/shared/hooks/useDebounce';\nimport { useDeepCompareEffect } from 'react-use';\nimport { FCC } from 'src/shared/models/fc-children.model';\nimport { FilmFilterProp } from 'src/shared/models/core-props.model';\nimport { MoviesFilterInput } from 'src/shared/models/starwars.model';\nimport { Close, Filter, Search } from '@mui/icons-material';\nimport { FormInput2Props } from 'src/shared/models/form.model';\nimport { isEmpty } from 'lodash';\n\nexport default function FilterInput({ filterChange }: FilmFilterProp) {\n\n  const [inputValue, setInputValue] = useState<string>('');\n  const debouncedTerm = useDebounce<string>(inputValue, 600);\n\n  useEffect(() => {\n    filterChange(debouncedTerm);\n  }, [filterChange, debouncedTerm]);\n\n  return (\n    <TextField name=\"movieName\" type=\"text\" fullWidth\n      value={ inputValue }\n      onChange={ (e) => setInputValue(e.target.value) }\n      placeholder='Filter by name'\n      variant='standard'\n      InputProps={ {\n        endAdornment:(<InputAdornment position='end'>\n          { !isEmpty(inputValue) && <IconButton onClick={ () => setInputValue('') } size=\"small\">\n            <Close />\n            </IconButton> \n          }\n        </InputAdornment>),\n        startAdornment:(\n          <InputAdornment position='start'>\n            <Search />\n          </InputAdornment>\n        )\n      } }\n    />\n  );\n};","import { useState, useEffect } from \"react\";\n\nexport const useDebounce = <T>(value: T, delay: number) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n};","import { FavoriteMoviesObjList, FavoriteToSave, ResultProperty, StarwarsFilm } from \"src/shared/models/starwars.model\";\nimport moment from 'moment';\n\nexport const getFilmFavoriteToggleTooltip = (favorited?: FavoriteToSave) => {\n  let tooltip: string = '';\n  const dateFromNow = favorited?.lastUpdated ? (moment(favorited?.lastUpdated).fromNow()) : ('');\n\n  if (favorited?.isCurrentFavorite) {\n    tooltip = 'Remove from favorites';\n  } else {\n    tooltip = 'Add to favorites';\n  }\n\n  if (favorited?.lastUpdated) {\n    tooltip = tooltip + '. ' + (favorited.isCurrentFavorite ? 'Favorited ' : 'Unfavorited ') + dateFromNow;\n  }\n\n  return tooltip;\n};\n\nexport const getSortedFilmsWithFavorited = (allFilms: ResultProperty<StarwarsFilm>[] | undefined, favorited: FavoriteMoviesObjList): ResultProperty<StarwarsFilm>[] => {\n  const sortedArr = allFilms ?? [];\n  if (sortedArr) {\n    sortedArr.sort((prev: ResultProperty<StarwarsFilm>, next: ResultProperty<StarwarsFilm>) => {\n      return prev.properties.episode_id > next.properties.episode_id ? 1 : -1;\n    });\n  }\n  sortedArr.forEach((res: ResultProperty<StarwarsFilm>) => {\n    res.properties.userFavorited = favorited[res.properties.episode_id]?.isCurrentFavorite;\n  });\n\n  return sortedArr;\n};","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { FCC } from \"src/shared/models/fc-children.model\";\nimport { StarwarsFilmCardProps } from \"src/shared/models/starwars.model\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { Link } from \"react-router-dom\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport FavIcon from '@mui/icons-material/Favorite';\nimport IconButton from '@mui/material/IconButton';\nimport { useEffect } from 'react';\nimport { Box, Stack } from \"@mui/material\";\nimport { getFilmFavoriteToggleTooltip } from \"src/core/utils/films.utils\";\nimport DateDisplay from \"src/shared/components/date/DateDisplay\";\n\n\nexport default function MovieCard({ film, favorited, onFavoriteToggle, uid }: StarwarsFilmCardProps) {\n\n  const favoriteToggleHandler = () => {\n    onFavoriteToggle(film, favorited);\n  };\n\n  return (\n    <Card sx={ {display:'flex',\n      flexDirection:'column', \n      justifyContent:'space-between'} } \n      elevation={ 4 }\n    >\n      <div>\n        <CardMedia\n          component=\"img\"\n          alt=\"poster\"\n          height=\"440\"\n          image={ `${process.env.PUBLIC_URL}/assets/poster-img/${film.episode_id}.png` }\n          sx={ {backgroundColor: '#000', objectFit: 'contain'} }\n        />\n        <CardContent>\n          <Stack direction={ {lg: 'column', xl: 'row'} } justifyContent={ {xl:'space-between', lg:'flex-start'} }\n            marginBottom={ {lg:'10px', xl: '0px'} }>\n            <Typography gutterBottom variant=\"h5\" component={ Link } to={ `./${uid}` } sx={ {fontFamily:'Poppins',\n              fontWeight:'500'} }>\n              { film.title }\n            </Typography>\n            <Typography variant=\"h5\" color='text.secondary' sx={ {fontWeight: '300'} }>\n              EP { film.episode_id }\n            </Typography>\n          </Stack>\n          \n          <Stack spacing={ 1 }>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Released: <DateDisplay date={ film.release_date } format=\"MMM Do YYYY\" />\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Directed by: { film.director }\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Produced by: { film.producer }\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\">\n              { film.opening_crawl }\n            </Typography>\n          </Stack>\n          \n        </CardContent>\n      </div>\n      \n      <CardActions sx={ {display: 'flex', justifyContent: 'space-between'} }>\n        <div>\n          <Button size=\"small\" component={ Link } to={ `./${uid}` }>\n            See More\n          </Button>\n        </div>\n        <div>\n          <IconButton aria-label=\"favorite\" onClick={ favoriteToggleHandler } \n            title={ getFilmFavoriteToggleTooltip(favorited) }>\n            <FavIcon color={ film.userFavorited ? 'error' : 'disabled' } />\n          </IconButton>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"loadingbackdrop\":\"LoadingBackdrop_loadingbackdrop__fzQLF\",\"spinner\":\"LoadingBackdrop_spinner__8-PXS\"};","import { Box } from \"@mui/material\";\nimport { ReactNode } from \"react\";\nimport classes from './LoadingBackdrop.module.scss';\n\nexport interface LoadingBackdropProps {\n  isLoading?: boolean;\n  children?:  ReactNode | undefined;\n}\n\nfunction LoadingBackdrop({ isLoading, children }: LoadingBackdropProps) {\n\n  return (\n    <Box className={ isLoading ? `${classes.loadingbackdrop}` :'' } width=\"100%\">\n      { children }\n    </Box>\n  );\n};\n\nexport default LoadingBackdrop;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from \"react\";\nimport { Box, Button, IconButton, Stack, Tooltip } from \"@mui/material\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { useCallback, useMemo, useState, useEffect } from \"react\";\nimport { saveFavorite, updateFavorite } from \"src/core/fetchers/favorites\";\nimport useFetchFavorites from \"src/core/hooks/useFetchFavorites\";\nimport useFetchMovies from \"src/core/hooks/useFetchMovies\";\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport LoadingSkeleton from \"src/shared/components/skeleton/LoadingSkeleton\";\nimport { HttpParams } from \"src/shared/models/http.model\";\nimport { FavoriteToSave, HttpResponse, HttpResponse2,\n  HttpResponse2List, ResultProperty, StarwarsFilm } from \"src/shared/models/starwars.model\";\nimport FilterInput from \"./filter/FilterInput\";\nimport MovieCard from \"./MovieCard\";\nimport AppToolbar from \"src/shared/components/toolbar/Toolbar\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport { createSearchParams, Outlet, useNavigate, useSearchParams } from \"react-router-dom\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport TableChartIcon from '@mui/icons-material/TableChart';\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\nimport { useDeepCompareEffect } from \"react-use\";\nimport { getSortedFilmsWithFavorited } from \"src/core/utils/films.utils\";\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport LoadingBackdrop from \"src/shared/loading-backdrop/LoadingBackdrop\";\n\n\nconst userId = 'yqu';\n\nconst Movies = () => {\n  const arrOfItems = Array.from(Array(3).keys());\n\n  const [saveFavLoading, setSaveFavLoading] = useState<boolean>(false);\n  const [fetchFavoriteTime, setFetchFavoriteTime] = useState<number>(0);\n  const [fetchMoviesParams, setFetchMoviesParams] = useState<HttpParams>({});\n  const { isMobile } = useScreenSize();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentDisplayModeUrl = searchParams.get(\"moviePageDisplayMode\");\n  const [filmPageDisplayMode, setFilmPageDisplayMode] = useState<string | null>(currentDisplayModeUrl);\n  const [sortedFilms, setSortedFilms] = useState<ResultProperty<StarwarsFilm>[]>([]);\n  \n  const {data: favMovies, error: favError, loading: favLoading} = \n    useFetchFavorites({userId: userId, params: {fetchTime: fetchFavoriteTime}});\n\n  const { allFilms, allFilmsError, allFilmsLoading, allFilmsValidating } = \n    useFetchMovies({ params: fetchMoviesParams });\n\n  const filmPageDisplayToggleHandler = () => {\n    const nextDisplayMode = {\n      moviePageDisplayMode: getNextDisplayState(filmPageDisplayMode)\n    };\n    setSearchParams(nextDisplayMode);\n  };\n\n  useDeepCompareEffect(() => {\n    setSortedFilms(getSortedFilmsWithFavorited(allFilms, favMovies));\n  }, [allFilms, favMovies]);\n\n  const onFavoriteToggleHandler = (film: StarwarsFilm, currentFavoriteStatus?: FavoriteToSave) => {\n    const { url: filmUrl } = film;\n    const filmId = (filmUrl.split(\"/\"))[filmUrl.split(\"/\").length - 1];\n\n    const favorite: FavoriteToSave = {\n      filmUrl,\n      filmId,\n      lastUpdated: new Date().getTime(),\n      episodeId: film.episode_id,\n      isCurrentFavorite: true,\n    };\n\n    setSaveFavLoading(true);\n    // update current favorited item in DB to false status\n    if (currentFavoriteStatus) {\n      favorite.isCurrentFavorite = !currentFavoriteStatus.isCurrentFavorite;\n      favorite.fireId = currentFavoriteStatus.fireId;\n      updateFavorite(userId, favorite).then((res) => {\n      }).catch((err) => {\n\n      }).finally(() => {\n        setSaveFavLoading(false);\n        setFetchFavoriteTime(new Date().getTime());\n      });\n\n    } else {\n      // create new favorited item to save\n      saveFavorite(userId, favorite).then((res) => {\n      }).catch((err) => {\n        // toast error\n      }).finally(() => {\n        // show toast save done\n        setSaveFavLoading(false);\n        setFetchFavoriteTime(new Date().getTime());\n      });\n    }\n  };\n\n  const onFilterChangeHandler = useCallback((movieName: string) => {\n    if (movieName) {\n      setFetchMoviesParams({\n        title: movieName\n      });\n    } else {\n      setFetchMoviesParams({});\n    }\n  }, []);\n\n\n  return (\n    <>\n      <AppToolbar toolbarProps={ {\n        position:\"sticky\",\n        sx:{top: isMobile ? '56px':'64px'}\n      } }>\n        <Grid container xs={ 12 } flexDirection={ { xs: 'row', sm: 'row' } } justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid xs={ 10 } sm={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Grid container xs={ 12 }>\n                <Grid xs={ 10 }>\n                  <FilterInput filterChange={ onFilterChangeHandler } />\n                </Grid>\n                <Grid xs={ 2 } sx={ {display:'flex'} } justifyContent=\"center\" alignItems=\"center\">\n                  { allFilmsValidating && <ProgressCircle size={ 20 } /> }\n                </Grid>\n              </Grid>\n              \n             \n            </Stack>\n          </Grid>\n          <Grid xs={ 2 } sm={ 8 }>\n            <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n              <Tooltip title={ `Switch to ${getNextDisplayState(filmPageDisplayMode)}` }>\n                <IconButton onClick={ filmPageDisplayToggleHandler }>\n                  { filmPageDisplayMode === DataBlockDisplayMode.CARD ? (<TableChartIcon />) : (<ViewModuleIcon  />) }\n                </IconButton>\n              </Tooltip>\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n\n      {\n        <LoadingBackdrop isLoading={ allFilmsLoading }>\n          {\n            allFilmsError ? <div>Error Page</div> :\n            (\n              <Stack direction=\"column\" p={ 2 } width=\"100%\">\n                <Grid container disableEqualOverflow rowSpacing={ 4 }>\n                  { sortedFilms?.map((res) => {\n                    return (\n                      <Grid key={ res.properties.episode_id } xs={ 12 } sm={ 4 } smOffset={ 4 }>\n                        <MovieCard \n                          film={ res.properties } \n                          onFavoriteToggle={ onFavoriteToggleHandler } \n                          favorited={ favMovies[res.properties.episode_id] } \n                          uid={ res.uid } />\n                      </Grid>\n                    );\n                  }) }\n                </Grid>\n              </Stack>\n            )\n          }\n        </LoadingBackdrop>\n      }\n    </>\n  );\n};\n\nexport default Movies;\n\nconst getNextDisplayState = (current: any) => {\n  if (!current) {\n    return DataBlockDisplayMode.CARD;\n  }\n  return current === DataBlockDisplayMode.CARD ? DataBlockDisplayMode.TABLE : DataBlockDisplayMode.CARD;\n};\n","export const BASE_FIREBASE_URL = 'https://kq-1-1a499.firebaseio.com/';\nexport const BASE_SW_API = 'https://swapi.tech/api/';","import { Tooltip } from '@mui/material';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nexport interface DateDisplayProp {\n  date: string | number;\n  fromNow?: boolean;\n  format?: string;\n}\n\nconst DateDisplay = ({ date=0, fromNow=true, format=\"MM/DD/YY HH:mm\" }: DateDisplayProp) => {\n\n  return (\n    <Tooltip title={ date ? moment(date).format(format) : 'No date found' }>\n      <span>\n        {date ? (<Moment date={ date } fromNow={ fromNow } />) : (<>N/A</>)}\n      </span>\n    </Tooltip>\n  );\n};\n\nexport default DateDisplay;","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport default function ProgressCircle({ size=40, color='grey.500' }: {size?: number, color?: string}) {\n  return (\n    <Stack sx={ { color: color } } spacing={ 1 } direction=\"row\">\n      <CircularProgress color=\"inherit\" size={ size } />\n    </Stack>\n  );\n}","import { AppBar, Stack, Button, Tooltip, IconButton, AppBarTypeMap } from \"@mui/material\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport Toolbar from '@mui/material/Toolbar';\nimport { GREY } from \"src/theme/palette\";\n\ninterface ToolbarProps {\n  toolbarProps: any;\n  children: any;\n}\n\nexport default function AppToolbar({ toolbarProps, children }: ToolbarProps) {\n  \n  return (\n    <AppBar elevation={ 0 } { ...toolbarProps }>\n      <Toolbar \n        variant=\"regular\" \n        sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? GREY[100] : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#000' : null, \n        } }>\n        { children }\n      </Toolbar>\n    </AppBar>\n  );\n}","import axios, { AxiosResponse } from 'axios';\nimport { sleep } from \"../utils/sleep\";\n\nexport const httpGet = async <T>(url: string, slow = 0): Promise<T> => {\n  if (slow) {\n    await sleep(slow);\n  }\n  try {\n    const res: AxiosResponse<T, any> = await axios.get<T>(url, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      responseType: 'json'\n    });\n\n    if (res.status === 200) {\n      return res.data;\n    }\n\n    return Promise.reject(res);\n  } catch (error) {\n    console.error(\"App fetcher GET error:\", error);\n    throw error;\n  }\n};","import useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\nconst useScreenSize = () => {\n\n  const theme = useTheme();\n\n  const isMobileScreenSize = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const isMediumSize = useMediaQuery(theme.breakpoints.down('md'));\n\n  const isLargeSize = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const isXlSize = useMediaQuery(theme.breakpoints.down('xl'));\n\n  return {\n    isMobile: isMobileScreenSize,\n    isMed: isMediumSize,\n    isLg: isLargeSize,\n    isXl: isXlSize\n  };\n\n};\n\nexport default useScreenSize;","export enum DataBlockDisplayMode {\n  TABLE = \"table\",\n  CARD = \"card\"\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { HttpAction } from './fetch';\n\n/**\n * Create a Axios instance\n * @param baseUrl \n * @returns \n */\nexport const getAxiosInstance = (baseUrl: string) => {\n  const axiosInstance = axios.create({\n    baseURL: baseUrl,\n    timeout: 5000,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    responseType: 'json'\n  });\n  return axiosInstance;\n};\n\nexport const axiosGet = <T>({ url, onSuccess, onFailure, onFinally, abortController }: HttpAction<T>) => {\n  axios.get(url)\n  .then((res: AxiosResponse) => {\n    onSuccess && onSuccess(res.data);\n  })\n  .catch((err: AxiosError) => {\n    console.log(\"App error GET: \", err);\n    onFailure && onFailure(err);\n  })\n  .finally(() => {\n    onFinally && onFinally();\n  });\n};\n\n\nexport const axiosPost = <T>({ url, body, onSuccess, onFailure, onFinally, abortController }: HttpAction<T>) => {\n  axios.post(url, body)\n  .then((res: AxiosResponse) => {\n    onSuccess && onSuccess(res.data);\n  })\n  .catch((err: AxiosError) => {\n    console.log(\"App error POST: \", err);\n    onFailure && onFailure(err);\n  })\n  .finally(() => {\n    onFinally && onFinally();\n  });\n};\n\nexport const axiosPut = <T>({ url, body, onSuccess, onFailure, onFinally, abortController }: HttpAction<T>) => {\n  axios.put(url, body)\n  .then((res: AxiosResponse) => {\n    onSuccess && onSuccess(res.data);\n  })\n  .catch((err: AxiosError) => {\n    console.log(\"App error PUT: \", err);\n    onFailure && onFailure(err);\n  })\n  .finally(() => {\n    onFinally && onFinally();\n  });\n};\n\nexport const axiosDelete = <T>({ url, onSuccess, onFailure, onFinally, abortController }: HttpAction<T>) => {\n  axios.delete(url)\n  .then((res: AxiosResponse) => {\n    onSuccess && onSuccess(res.data);\n  })\n  .catch((err: AxiosError) => {\n    console.log(\"App error DELETE: \", err);\n    onFailure && onFailure(err);\n  })\n  .finally(() => {\n    onFinally && onFinally();\n  });\n};\n\nexport default getAxiosInstance;","export function sleep(time) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;"],"names":["kqAxiosInstance","getAxiosInstance","baseUrl","saveFavorite","userId","film","url","data","favUrl","post","then","res","catch","err","console","log","updateFavorite","favorite","fireId","put","params","useState","setUrl","transformed","setTransformed","useDeepCompareEffect","restUrl","urlcat","BASE_FIREBASE_URL","user","useSWR","httpGet","error","isValidating","isLoading","useEffect","transformedData","Object","keys","forEach","key","episodeId","loading","refetch","BASE_SW_API","revalidateOnFocus","revalidateIfStale","keepPreviousData","allFilms","result","allFilmsLoading","allFilmsValidating","allFilmsError","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","value","as","clsx","_jsxs","Typography","createSvgIcon","d","FilterInput","filterChange","inputValue","setInputValue","debouncedTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","TextField","type","fullWidth","onChange","e","target","placeholder","InputProps","endAdornment","isEmpty","IconButton","onClick","Close","startAdornment","Search","getFilmFavoriteToggleTooltip","favorited","tooltip","dateFromNow","lastUpdated","moment","fromNow","isCurrentFavorite","MovieCard","onFavoriteToggle","uid","Card","sx","flexDirection","justifyContent","elevation","CardMedia","alt","image","process","episode_id","backgroundColor","objectFit","CardContent","Stack","direction","lg","xl","marginBottom","gutterBottom","Link","to","fontFamily","fontWeight","title","spacing","DateDisplay","date","release_date","format","director","producer","opening_crawl","CardActions","Button","userFavorited","Box","width","Array","from","setSaveFavLoading","fetchFavoriteTime","setFetchFavoriteTime","fetchMoviesParams","setFetchMoviesParams","isMobile","useScreenSize","useSearchParams","searchParams","setSearchParams","currentDisplayModeUrl","get","filmPageDisplayMode","sortedFilms","setSortedFilms","useFetchFavorites","fetchTime","favMovies","useFetchMovies","sortedArr","sort","prev","next","properties","getSortedFilmsWithFavorited","onFavoriteToggleHandler","currentFavoriteStatus","filmUrl","filmId","split","length","Date","getTime","finally","onFilterChangeHandler","useCallback","movieName","toolbarProps","top","container","xs","sm","Tooltip","getNextDisplayState","nextDisplayMode","moviePageDisplayMode","DataBlockDisplayMode","TableChart","ViewModule","p","disableEqualOverflow","rowSpacing","map","smOffset","current","ProgressCircle","AppToolbar","bgcolor","mode","GREY","slow","sleep","axios","headers","responseType","status","Promise","reject","useTheme","useMediaQuery","breakpoints","down","isMed","isLg","isXl","axiosPost","body","onSuccess","onFailure","onFinally","abortController","baseURL","timeout","time","resolve","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}