{"version":3,"file":"static/js/455.6c854e1b.chunk.js","mappings":"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","sources":["404/ErrorPage.tsx","core/vehicles/detail/Vehicle.tsx","shared/components/layouts/LayoutWithGutter.tsx","shared/components/progress/CircleProgress.tsx","shared/components/toolbar/Toolbar.tsx","shared/hooks/useIsMobile.ts","webpack://starwars/./src/shared/loading/full-logo/LoadingLogo.module.scss?618b","shared/loading/full-logo/LoadingLogo.tsx"],"sourcesContent":["import { Box, Stack, Typography } from \"@mui/material\";\n\nexport interface ErrorPageProp {\n  reason?: string;\n  debug?: any;\n}\n\nexport default function ErrorPage({ reason, debug }: ErrorPageProp) {\n\n  return (\n    <Box marginY={ 5 } width=\"100%\">\n      <Stack direction=\"column\" spacing={ 5 } justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h5\" sx={ {textTransform:'uppercase'} }>\n          An error has occurred!\n        </Typography>\n\n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            REASON\n          </Typography>\n          <Typography variant=\"body2\">\n            { reason }\n          </Typography>\n        </Stack>\n        \n        <Stack direction=\"column\" spacing={ 1 } justifyContent=\"center\" alignItems=\"center\">\n          <Typography variant=\"body1\" fontWeight={ 700 }>\n            DEBUG\n          </Typography>\n          <Typography variant=\"body2\" component=\"div\">\n            <pre>\n              <code style={ {display: 'flex', textAlign: 'center'} }>\n                { JSON.stringify(debug) }\n              </code>\n            </pre>\n          </Typography>\n        </Stack>\n      </Stack>\n    </Box>\n  );\n};","import { Box, Button, Divider, Paper, Stack, Typography } from \"@mui/material\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport AppToolbar from \"src/shared/components/toolbar/Toolbar\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { useAppDispatch } from \"src/store/appHook\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { useFetchStarshipQuery, useFetchVehicleQuery } from \"src/core/store/swapi/swapi\";\nimport LoadingLogo from \"src/shared/loading/full-logo/LoadingLogo\";\nimport ErrorPage from \"src/404/ErrorPage\";\nimport LayoutWithGutter from \"src/shared/components/layouts/LayoutWithGutter\";\nimport { useMemo, useState } from \"react\";\nimport { StarwarsStarships, StarwarsVehicles } from \"src/shared/models/starwars.model\";\nimport { QueryObj } from \"src/shared/models/url\";\nimport { startCase } from 'lodash';\nimport { isNumeric } from \"src/shared/utils/number.utils\";\n\n\nfunction Vehicle() {\n  const { isMobile } = useScreenSize();\n  const dispatch = useAppDispatch();\n  const { vehicleId } = useParams();\n  const [ openEditDialog, setOpenEditDialog ] = useState<boolean>(false);\n  const { data, isLoading, isFetching, error, isError, refetch } = useFetchVehicleQuery(vehicleId!);\n\n  const display = useMemo(() => {\n    let list: QueryObj[] = [];\n    list = displayList.map((key: string) => {\n      return {\n        key,\n        value: (`${data?.result.properties[key as keyof StarwarsVehicles]}`)\n      };\n    });\n    return list;\n  }, [data]);\n\n  const onRefreshHandler = () => {\n    refetch();\n  };\n\n  const onEditHandler = () => {\n    setOpenEditDialog(true);\n  };\n\n  const onDialogCloseHandler = (editedData?: StarwarsStarships) => {\n  };\n  \n  if (isLoading) return (\n    <Stack direction=\"column\" width=\"100%\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n      <LoadingLogo message=\"starship\" />\n    </Stack>\n  );\n\n  if (isError) {\n    return <ErrorPage reason={ (error as any).status } debug={ (error as any).error } />;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Stack direction=\"column\" width=\"100%\">\n      <AppToolbar toolbarProps={ {\n        position: \"sticky\",\n        sx: {top: isMobile ? '56px':'64px'}\n      } }>\n        <Grid container xs={ 12 } flexDirection={ { xs: 'row', sm: 'row' } } justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid xs={ 10 } sm={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Button startIcon={ <RefreshIcon /> } variant=\"text\" onClick={ onRefreshHandler }>Refresh</Button>\n              <Divider orientation=\"vertical\" variant=\"middle\" flexItem sx={ {mr: 1, ml: 1} } />\n              <Button startIcon={ <EditIcon /> } variant=\"text\" onClick={ onEditHandler }>Edit</Button>\n            </Stack>\n          </Grid>\n          <Grid xs={ 2 } sm={ 8 }>\n            <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n              { isFetching && <ProgressCircle size={ 20 } /> }\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n\n      <Box mt={ 2 } m={ isMobile ? 2 : 0 }>\n        <LayoutWithGutter size={ 'med' }>\n          <Grid xs={ 12 } sx={ {border: '1px solid #ddd', borderRadius: '10px', p: 2} }>\n            <Stack direction={ isMobile ? \"column\" : \"row\" } justifyContent=\"start\" alignItems=\"center\">\n              <Typography variant='h4' sx={ {fontWeight: 500} } mr={ 2 }>\n                { data.result.properties.name }\n              </Typography>\n              <Typography variant='body1'>\n                ({ data.result.properties.manufacturer })\n              </Typography>\n            </Stack>\n            <Divider sx={ {my: 2} } />\n            <Stack direction=\"column\" >\n              {\n                display.map((res) => {\n                  return (\n                    <Box key={ res.key } mb={ 1 }>\n                      <Stack direction={ isMobile ? \"column\" : \"row\" } justifyContent=\"start\" \n                        alignItems={ isMobile ? \"start\" : \"center\" }>\n                        <Typography variant='h6' fontWeight={ 300 }>\n                          { startCase(res.key) }\n                        </Typography>\n                        {!isMobile && <Typography mr={ 1.5 }>:</Typography>}\n                        <Typography variant='h5'>\n                          { isNumeric(res.value) ? ((+res.value).toLocaleString()) : res.value }\n                        </Typography>\n                      </Stack>\n                    </Box>\n                  );\n                })\n              }\n            </Stack>\n          </Grid>\n        </LayoutWithGutter>\n      </Box>\n\n    </Stack>\n  );\n}\n\nexport default Vehicle;\n\n\nconst displayList = ['model', 'vehicle_class', 'manufacturer', 'cost_in_credits', 'length', 'crew', \n  'passengers', 'max_atmosphering_speed', 'cargo_capacity', 'consumables'];","import Grid from '@mui/material/Unstable_Grid2';\nimport { ReactNode } from 'react';\n\nexport interface LayoutGutterProps {\n  children: ReactNode;\n  size?: \"full\" | \"med\" | \"skinny\"\n}\n\nfunction LayoutWithGutter({ size = \"med\", children }: LayoutGutterProps) {\n\n  return (\n    // <Grid container spacing={ 0 } xs={ 12 } xsOffset={ 0 } sm={ sizes.width } smOffset={ sizes.offset }>\n    //   { children }\n    // </Grid>\n    <Grid container spacing={ 0 } xs={ 12 } xsOffset={ 0 } \n      sm={ size==='full' ? 12 : (size === 'med' ? 7 : (4)) } \n      smOffset={ size==='full' ? 0 : (size === 'med' ? 2.5 : (4)) }>\n      { children }\n    </Grid>\n  );\n}\n\nexport default LayoutWithGutter;","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Theme } from '@emotion/react';\nimport { SxProps } from '@mui/material';\n\nexport default function ProgressCircle({ size=40, color='grey.500', styleProps }: {size?: number, color?: string, styleProps?: SxProps<Theme>}) {\n  return (\n    <Stack sx={ { color: color, ...styleProps } } spacing={ 1 } direction=\"row\">\n      <CircularProgress color=\"inherit\" size={ size } />\n    </Stack>\n  );\n}","import { AppBar, Stack, Button, Tooltip, IconButton, AppBarTypeMap } from \"@mui/material\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport Toolbar from '@mui/material/Toolbar';\nimport { GREY } from \"src/theme/palette\";\n\ninterface ToolbarProps {\n  toolbarProps: any;\n  children: any;\n}\n\nexport default function AppToolbar({ toolbarProps, children }: ToolbarProps) {\n  \n  return (\n    <AppBar elevation={ 0 } { ...toolbarProps }>\n      <Toolbar \n        variant=\"regular\" \n        sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? GREY[100] : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#000' : null,\n          pr: 0\n        } }>\n        { children }\n      </Toolbar>\n    </AppBar>\n  );\n}","import useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * A media query string\n * which matches screen widths less than the screen size given by the breakpoint key (down)\n * @returns \n */\nconst useScreenSize = () => {\n\n  const theme = useTheme();\n\n  const isMobileScreenSize = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const isMediumSize = useMediaQuery(theme.breakpoints.down('md'));\n\n  const isLargeSize = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const isXlSize = useMediaQuery(theme.breakpoints.down('xl'));\n\n  return {\n    isMobile: isMobileScreenSize,\n    isMed: isMediumSize,\n    isLg: isLargeSize,\n    isXl: isXlSize\n  };\n\n};\n\nexport default useScreenSize;","// extracted by mini-css-extract-plugin\nexport default {\"parentClass\":\"LoadingLogo_parentClass__NFHXT\",\"loadingLogo\":\"LoadingLogo_loadingLogo__BqUtz\",\"loadingParent\":\"LoadingLogo_loadingParent__VASnq\",\"loading-container\":\"LoadingLogo_loading-container__cjLsJ\",\"whole-page\":\"LoadingLogo_whole-page__DkCG7\",\"ldsFacebook\":\"LoadingLogo_ldsFacebook__pRdY2\",\"lds-facebook\":\"LoadingLogo_lds-facebook__JLntj\"};","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useReducer, useState, useContext, useMemo, Suspense } from 'react';\nimport classes from './LoadingLogo.module.scss';\nimport logo from '../../../static/img/death-star.png';\n\nexport interface LoadingLogoProps {\n  message: string;\n  children?: any;\n}\n\nexport default function LoadingLogo(props: LoadingLogoProps) {\n\n\n  return (\n    <div className={ `${classes.parentClass} w-100` }>\n      <div>\n        <div className={ classes.loadingLogo }>\n          <img src={ logo }\n            className={ `${classes.logoImg} d-inline-block` } alt=\"logo\" />\n        </div>\n    \n      </div>\n      <div className={ classes.loadingParent }>\n        <div className={ classes.ldsFacebook }><div></div><div></div><div></div></div>\n      </div>\n      <div className={ classes.secfont }>\n        Loading {props.message} ...\n      </div>\n    </div>\n  );\n};"],"names":["ErrorPage","reason","debug","marginY","width","direction","spacing","justifyContent","alignItems","variant","sx","textTransform","fontWeight","component","style","display","textAlign","JSON","stringify","isMobile","useScreenSize","vehicleId","useAppDispatch","useParams","useState","setOpenEditDialog","useFetchVehicleQuery","data","isLoading","isFetching","error","isError","refetch","useMemo","displayList","map","key","value","result","properties","height","message","status","toolbarProps","position","top","container","xs","flexDirection","sm","startIcon","onClick","orientation","flexItem","mr","ml","size","mt","m","border","borderRadius","p","name","manufacturer","my","res","mb","startCase","isNumeric","toLocaleString","children","xsOffset","smOffset","ProgressCircle","color","styleProps","AppToolbar","elevation","bgcolor","theme","palette","mode","GREY","pr","useTheme","useMediaQuery","breakpoints","down","isMed","isLg","isXl","LoadingLogo","props","className","classes","src","logo","alt"],"sourceRoot":""}