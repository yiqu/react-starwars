{"version":3,"file":"static/js/897.64ab42d7.chunk.js","mappings":"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","sources":["core/characters/all/CharactersAll.tsx","../node_modules/@mui/material/esm/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/esm/InputAdornment/InputAdornment.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Search.js","core/movies/movies/filter/FilterInput.tsx","shared/components/toolbar/Toolbar.tsx","shared/hooks/useDebounce.ts","../node_modules/react-use/esm/useUpdateEffect.js","../node_modules/react-use/esm/useFirstMountState.js"],"sourcesContent":["import { Link, LoaderFunctionArgs, useLoaderData, useRouteLoaderData } from \"react-router-dom\";\nimport { delay, firstValueFrom, map } from \"rxjs\";\nimport { ajax, AjaxResponse } from 'rxjs/ajax';\nimport { BASE_SW_API } from \"src/shared/api/endpoints\";\nimport { PAGE_COUNT, PAGE_LIMIT } from \"src/shared/utils/constants\";\nimport urlcat from \"urlcat\";\nimport { HttpResponse, StarwarsContent } from 'src/shared/models/starwars.model';\nimport AppToolbar from \"src/shared/components/toolbar/Toolbar\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { Stack, Tooltip, IconButton, Typography } from \"@mui/material\";\nimport ErrorPage from \"src/404/ErrorPage\";\nimport FilterInput from \"src/core/movies/movies/filter/FilterInput\";\nimport MovieCard from \"src/core/movies/movies/MovieCard\";\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport LoadingBackdrop from \"src/shared/loading-backdrop/LoadingBackdrop\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport { useCallback } from \"react\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport SimpleGridDisplay from \"src/core/shared/display/SimpleGridDisplay\";\nimport { useAppDispatch, useAppSelector } from \"src/store/appHook\";\nimport { fetchCharacters } from \"src/core/store/characters/characters.thunks\";\nimport * as fromCharactersSelectors from '../../store/characters/characters.selectors';\nimport LoadingLogo from \"src/shared/loading/full-logo/LoadingLogo\";\nimport { HttpParams } from \"src/shared/models/http.model\";\n\n\nconst CharactersAll = () => {\n\n  //const characters = useRouteLoaderData('swCharacters') as StarwarsContent[];\n  const characters: StarwarsContent[] = useAppSelector(fromCharactersSelectors.selectAll);\n  const charactersGrouped: StarwarsContent[] = useAppSelector(fromCharactersSelectors.charactersGrouped);\n  const firstTimeLoading: boolean = useAppSelector(fromCharactersSelectors.firstTimeLoading);\n  const apiLoading: boolean = useAppSelector(fromCharactersSelectors.apiLoading);\n  const currentFetchParams: HttpParams | undefined = useAppSelector(fromCharactersSelectors.extraParams);\n  const { isMobile } = useScreenSize();\n  const dispatch = useAppDispatch();\n  \n  const onFilterChangeHandler = useCallback((charName: string) => {\n    if (charName && charName.trim() !== '') {\n      dispatch(fetchCharacters({name: charName}));\n    } else {\n      dispatch(fetchCharacters());\n    }\n  }, [dispatch]);\n\n  if (firstTimeLoading) return (\n    <Stack direction=\"column\" width=\"100%\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n      <LoadingLogo message=\"characters\" />\n    </Stack>\n  );\n  \n  return (\n    <Stack direction=\"column\" width=\"100%\">\n      <AppToolbar toolbarProps={ {\n        position:\"sticky\",\n        sx:{top: isMobile ? '56px':'64px'}\n      } }>\n        <Grid container xs={ 12 } flexDirection={ { xs: 'row', sm: 'row' } } justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid xs={ 10 } sm={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Grid container xs={ 12 }>\n                <Grid xs={ 8 }>\n                  <FilterInput filterChange={ onFilterChangeHandler } currentText={ currentFetchParams?.name } />\n                </Grid>\n                <Grid xs={ 2 } sx={ {display:'flex'} } justifyContent=\"center\" alignItems=\"center\">\n                  { apiLoading && <ProgressCircle size={ 20 } /> }\n                </Grid>\n              </Grid>\n            </Stack>\n          </Grid>\n          <Grid xs={ 2 } sm={ 8 }>\n            <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n\n      <SimpleGridDisplay data={ charactersGrouped } itemUrlPath=\"characters\" />\n\n    </Stack>\n  );\n};\n\nexport default CharactersAll;\n\nexport function loader({ params }: LoaderFunctionArgs): Promise<StarwarsContent[]> {\n\n  const restUrl: string = urlcat(BASE_SW_API, `people`, { limit: PAGE_LIMIT, page: PAGE_COUNT });\n  \n  const people$ = ajax<HttpResponse<StarwarsContent>>(restUrl).pipe(\n    delay(0),\n    map((res) => {\n      return res.response.results;\n    })\n  );\n\n  return firstValueFrom(people$);\n};","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","import React, { useCallback, useEffect, useState } from 'react';\nimport { IconButton, InputAdornment, TextField, TextFieldProps } from '@mui/material';\nimport { useDebounce } from 'src/shared/hooks/useDebounce';\nimport { useDeepCompareEffect, useUpdateEffect } from 'react-use';\nimport { FilmFilterProp } from 'src/shared/models/core-props.model';\nimport { Close, Filter, Search } from '@mui/icons-material';\nimport { isEmpty } from 'lodash';\n\nexport default function FilterInput({ count, filterChange, placeholderText, currentText }: FilmFilterProp) {\n\n  const [inputValue, setInputValue] = useState<string>('');\n  const debouncedTerm = useDebounce<string>(inputValue, 200);\n  const [placeholderTextt, setPlaceholderTextt] = useState<string>(\"Filter by name\");\n\n  useEffect(() => {\n    if (!currentText) {\n      setPlaceholderTextt(placeholderText ?? `Filter by name ${count !== undefined ? ('('+count+')') : ''}`);\n    }\n  }, [count, currentText, placeholderText]);\n\n  useUpdateEffect(() => {\n    filterChange(debouncedTerm);\n  }, [filterChange, debouncedTerm]);\n\n  useEffect(() => {\n    setInputValue(currentText ?? '');\n  }, [currentText]);\n\n  return (\n    <TextField name=\"movieName\" type=\"text\" fullWidth\n      value={ inputValue }\n      onChange={ (e) => setInputValue(e.target.value) }\n      placeholder={ placeholderTextt }\n      variant='standard'\n      InputProps={ {\n        endAdornment:(<InputAdornment position='end'>\n          { !isEmpty(inputValue) && <IconButton onClick={ () => setInputValue('') } size=\"small\">\n            <Close />\n            </IconButton> \n          }\n        </InputAdornment>),\n        startAdornment:(\n          <InputAdornment position='start'>\n            <Search />\n          </InputAdornment>\n        )\n      } }\n    />\n  );\n};","import { AppBar, Stack, Button, Tooltip, IconButton, AppBarTypeMap } from \"@mui/material\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport Toolbar from '@mui/material/Toolbar';\nimport { GREY } from \"src/theme/palette\";\n\ninterface ToolbarProps {\n  toolbarProps: any;\n  children: any;\n}\n\nexport default function AppToolbar({ toolbarProps, children }: ToolbarProps) {\n  \n  return (\n    <AppBar elevation={ 0 } { ...toolbarProps }>\n      <Toolbar \n        variant=\"regular\" \n        sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? GREY[100] : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#000' : null,\n          pr: 0\n        } }>\n        { children }\n      </Toolbar>\n    </AppBar>\n  );\n}","import { useState, useEffect } from \"react\";\n\nexport const useDebounce = <T>(value: T, delay: number) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n};","import { useEffect } from 'react';\nimport { useFirstMountState } from './useFirstMountState';\nvar useUpdateEffect = function (effect, deps) {\n    var isFirstMount = useFirstMountState();\n    useEffect(function () {\n        if (!isFirstMount) {\n            return effect();\n        }\n    }, deps);\n};\nexport default useUpdateEffect;\n","import { useRef } from 'react';\nexport function useFirstMountState() {\n    var isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n"],"names":["loader","params","restUrl","urlcat","BASE_SW_API","limit","PAGE_LIMIT","page","PAGE_COUNT","people$","ajax","pipe","delay","map","res","response","results","firstValueFrom","useAppSelector","fromCharactersSelectors","charactersGrouped","firstTimeLoading","apiLoading","currentFetchParams","isMobile","useScreenSize","dispatch","useAppDispatch","onFilterChangeHandler","useCallback","charName","trim","fetchCharacters","name","direction","width","justifyContent","alignItems","height","message","toolbarProps","position","sx","top","container","xs","flexDirection","sm","filterChange","currentText","display","size","data","itemUrlPath","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","variant","theme","_extends","maxHeight","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","value","as","clsx","_jsxs","Typography","createSvgIcon","d","FilterInput","count","placeholderText","useState","inputValue","setInputValue","debouncedTerm","useDebounce","placeholderTextt","setPlaceholderTextt","useEffect","undefined","useUpdateEffect","TextField","type","fullWidth","onChange","e","target","placeholder","InputProps","endAdornment","isEmpty","IconButton","onClick","Close","startAdornment","Search","AppToolbar","elevation","bgcolor","mode","GREY","pr","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","effect","deps","isFirstMount","isFirst","useRef","current","useFirstMountState"],"sourceRoot":""}