{"version":3,"file":"static/js/510.187bb986.chunk.js","mappings":"ucAsDA,MA3CA,SAAoB,GAAqF,IAAnFA,EAAQ,EAARA,SAAUC,EAAa,EAAbA,cAAeC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YAOhEC,EAAkB,WACtBL,OAAcM,EAChB,EAQA,OACE,UAACC,EAAA,EAAM,CAACC,QAPa,SAACC,EAAeC,GACtB,kBAAXA,GACFL,GAEJ,EAGqCJ,KAAOA,EACxCU,WAAS,EACTC,GAAG,cACHC,SAAW,KAAM,WACjB,UAACC,EAAA,EAAW,WACRV,IAAe,SAACW,EAAA,EAAK,CAACC,MAAM,OAAOC,GAAK,EAAG,UAC3C,UAACC,EAAA,EAAK,CAACC,SAAS,QAAQC,GAAK,CAACC,aAAc,QAAS,WACnD,SAACC,EAAA,EAAU,oBACTlB,OAGJF,MAGJ,SAACqB,EAAA,EAAa,4BAGd,UAACC,EAAA,EAAa,YACZ,SAACC,EAAA,EAAM,CAACC,QAAUrB,EAAiB,qBACnC,UAACoB,EAAA,EAAM,CAACC,QAlCU,WACtB1B,EAAcD,EAChB,EAgCyC,UAAGI,EAAa,aAAe,SAAQ,YAIlF,ECwFA,MApHA,WAAmB,IAAD,EACRwB,GAAaC,EAAAA,EAAAA,KAAbD,SAEAE,IADSC,EAAAA,EAAAA,MACIC,EAAAA,EAAAA,MAAbF,UACR,GAA8CG,EAAAA,EAAAA,WAAkB,GAAM,eAA9DC,EAAc,KAAEC,EAAiB,KACzC,GAAiEC,EAAAA,EAAAA,IAAoBN,GAA7EO,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAAWC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QACrD,GAAmCC,EAAAA,EAAAA,MAAuB,eAAlDC,EAAU,KAAEC,EAAU,KAExBC,GAAUC,EAAAA,EAAAA,UAAQ,WAQtB,OANOC,EAAYC,KAAI,SAACC,GACtB,MAAO,CACLA,IAAAA,EACAC,MAAM,GAAD,OAAU,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMe,OAAOC,WAAWH,IAEvC,GAEF,GAAG,CAACb,IAqBJ,OAAIC,GACF,SAACtB,EAAA,EAAK,CAACsC,UAAU,SAASrC,MAAM,OAAOsC,eAAe,SAASC,WAAW,SAASC,OAAO,QAAO,UAC/F,SAACC,EAAA,EAAW,CAACC,QAAQ,cAIrBlB,GACK,SAACmB,EAAA,EAAS,CAACjD,OAAU6B,EAAcqB,OAASC,MAAStB,EAAcA,QAGvEH,GAKH,UAACrB,EAAA,EAAK,CAACsC,UAAU,SAASrC,MAAM,OAAM,WACpC,SAAC,IAAU,CAAC8C,aAAe,CACzBC,SAAU,SACV3C,GAAI,CAAC4C,IAAKrC,EAAW,OAAO,SAC3B,UACD,UAAC,IAAI,CAACsC,WAAS,EAACC,GAAK,GAAKC,cAAgB,CAAED,GAAI,MAAOE,GAAI,OAAUd,eAAe,gBAAgBC,WAAW,SAAQ,WACrH,SAAC,IAAI,CAACW,GAAK,GAAKE,GAAK,EAAG,UACtB,UAACrD,EAAA,EAAK,CAACsC,UAAU,MAAMC,eAAe,QAAQC,WAAW,SAAQ,WAC/D,SAAC9B,EAAA,EAAM,CAAC4C,WAAY,SAACC,EAAA,EAAW,IAAMC,QAAQ,OAAO7C,QA1CxC,WACvBe,GACF,EAwC6F,sBACjF,SAAC+B,EAAA,EAAO,CAACC,YAAY,WAAWF,QAAQ,SAASG,UAAQ,EAACtD,GAAK,CAACuD,GAAI,EAAGC,GAAI,MAC3E,SAACnD,EAAA,EAAM,CAAC4C,WAAY,SAACQ,EAAA,EAAQ,IAAMN,QAAQ,OAAO7C,QAxCxC,WACpBQ,GAAkB,EACpB,EAsCuF,wBAG/E,SAAC,IAAI,CAACgC,GAAK,EAAIE,GAAK,EAAG,UACrB,SAACrD,EAAA,EAAK,CAACsC,UAAU,MAAMC,eAAe,WAAWC,WAAW,SAAQ,SAChEjB,IAAc,SAAC,IAAc,CAACwC,KAAO,eAM/C,SAACC,EAAA,EAAG,CAACC,GAAK,EAAIC,EAAItD,EAAW,EAAI,EAAG,UAClC,SAACuD,EAAA,EAAgB,CAACJ,KAAO,MAAO,UAC9B,UAAC,IAAI,CAACZ,GAAK,GAAK9C,GAAK,CAAC+D,OAAQ,iBAAkB9D,aAAc,OAAQ+D,EAAG,GAAI,WAC3E,UAACrE,EAAA,EAAK,CAACsC,UAAU,MAAMC,eAAe,QAAQC,WAAW,SAAQ,WAC/D,SAAC8B,EAAA,EAAU,CAACd,QAAQ,KAAKnD,GAAK,CAACkE,WAAY,KAAOX,GAAK,EAAG,SACtDvC,EAAKe,OAAOC,WAAWmC,QAE3B,UAACF,EAAA,EAAU,CAACd,QAAQ,QAAO,cACtBnC,EAAKe,OAAOC,WAAWoC,eAAc,WAG5C,SAAChB,EAAA,EAAO,CAACpD,GAAK,CAACqE,GAAI,MACnB,SAAC1E,EAAA,EAAK,CAACsC,UAAU,SAAQ,SAErBR,EAAQG,KAAI,SAAC0C,GACX,OACE,SAACX,EAAA,EAAG,CAAiBY,GAAK,EAAG,UAC3B,UAAC5E,EAAA,EAAK,CAACsC,UAAU,MAAMC,eAAe,QAAQC,WAAW,SAAQ,WAC/D,SAAC8B,EAAA,EAAU,CAACd,QAAQ,KAAKe,WAAa,IAAK,UACvCM,EAAAA,EAAAA,WAAUF,EAAIzC,QAElB,SAACoC,EAAA,EAAU,CAACV,GAAK,IAAK,gBACtB,SAACU,EAAA,EAAU,CAACd,QAAQ,KAAI,UACpBsB,EAAAA,EAAAA,IAAUH,EAAIxC,SAAYwC,EAAIxC,OAAO4C,iBAAoBJ,EAAIxC,YAP1DwC,EAAIzC,IAYnB,cAOV,SAAC,EAAU,CAAChD,KAAOgC,EAAkB/B,MAAK,eAAWkC,EAAKe,OAAOC,WAAWmC,MAC1ExF,SAAWqC,EAAKe,OAAOC,WAAapD,cAnFb,SAAC+F,GACxBA,EACFpD,EAAW,CACTqD,SAAUnE,EACV9B,SAAUgG,IAGZ7D,GAAkB,EAEtB,EA0EiF/B,WAAayC,EAAWP,UACnGjC,YAA+B,QAApB,EAAIwC,EAAWL,aAAK,aAAjB,EAA2BA,YA9DtC,uBAiEX,EAKMQ,EAAc,CAAC,WAAY,cAAe,iBAAkB,mBAAoB,cAAe,cAAe,a,kHCrIrG,SAASkD,EAAW,GAA2C,IAAzCnC,EAAY,EAAZA,aAAcoC,EAAQ,EAARA,SAEjD,OACE,SAAC,KAAM,gBAACC,UAAY,GAASrC,GAAY,cACvC,SAAC,IAAO,CACNS,QAAQ,UACRnD,GAAK,CAACgF,QAAS,SAACC,GAAK,MAA4B,UAAvBA,EAAMC,QAAQC,KAAmBC,EAAAA,EAAAA,KAAY,IAAI,EACzEC,MAAO,SAACJ,GAAK,MAA4B,UAAvBA,EAAMC,QAAQC,KAAmB,OAAS,IAAI,EAChEG,GAAI,GACH,SACDR,MAIV,C,4BCtBIS,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,yJACD,QAEJN,EAAQ,EAAUG,C,4BCfdL,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+MACD,WAEJN,EAAQ,EAAUG,C,yKCfX,SAASI,EAA0BC,GACxC,OAAOC,EAAAA,EAAAA,GAAqB,gBAAiBD,EAC/C,EAC0BE,EAAAA,EAAAA,GAAuB,gBAAiB,CAAC,SAAnE,I,WCHMC,EAAY,CAAC,aAqBbC,GAAiBC,EAAAA,EAAAA,IAAOrC,EAAAA,EAAY,CACxCE,KAAM,gBACN8B,KAAM,OACNM,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOC,IAAI,GAH5BJ,EAIpB,YAGD,MAAO,CACLpC,WAHG,EAALe,MAGoB0B,WAAWC,iBAC7BC,WAAY,EAEhB,IAkDA,EAjDgCC,EAAAA,YAAiB,SAAoBC,EAASC,GAC5E,IAAMR,GAAQS,EAAAA,EAAAA,GAAc,CAC1BT,MAAOO,EACP5C,KAAM,kBAIN+C,EACEV,EADFU,UAEIC,GAAQC,EAAAA,EAAAA,GAA8BZ,EAAOJ,GAE7CiB,EAAab,EACbc,EAlCkB,SAAAD,GACxB,IACEC,EACED,EADFC,QAKF,OAAOC,EAAAA,EAAAA,GAHO,CACZb,KAAM,CAAC,SAEoBV,EAA2BsB,EAC1D,CA0BkBE,CAAkBH,GAClC,OAAoBI,EAAAA,EAAAA,KAAKpB,GAAgBqB,EAAAA,EAAAA,GAAS,CAChDC,cAAc,EACdC,UAAW,MACXP,WAAYA,EACZL,IAAKA,EACLE,WAAWW,EAAAA,EAAAA,GAAKP,EAAQZ,KAAMQ,IAC7BC,GACL,G","sources":["core/shared/edit-dialog/EditDialog.tsx","core/species/detail/Specie.tsx","shared/components/toolbar/Toolbar.tsx","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/icons-material/Refresh.js","../node_modules/@mui/material/esm/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/esm/AlertTitle/AlertTitle.js"],"sourcesContent":["import { Dialog, DialogTitle, List, ListItem, ListItemButton, ListItemAvatar, Avatar, ListItemText, DialogContent, DialogActions, Button, Box, Alert, AlertTitle, Stack, Typography } from \"@mui/material\";\n\nexport interface EditDialogProps {\n  editable: any;\n  open: boolean;\n  title: string;\n  apiLoading?: boolean;\n  hasErrorMsg?: string;\n  onDialogClose: (editedData?: any) => void;\n}\n\nfunction EditDialog({ editable, onDialogClose, open, title, apiLoading, hasErrorMsg }: EditDialogProps) {\n\n\n  const onSubmitHandler = () => {\n    onDialogClose(editable);\n  };\n\n  const onCancelHandler = () => {\n    onDialogClose(undefined);\n  };\n\n  const onCloseHandler = (event: object, reason: string) => {\n    if (reason === 'backdropClick') {\n      onCancelHandler();\n    }\n  };\n\n  return (\n    <Dialog onClose={ onCloseHandler } open={ open } \n      fullWidth \n      id=\"edit-dialog\"\n      maxWidth={ \"sm\" }>\n      <DialogTitle>\n        { hasErrorMsg && <Stack width=\"100%\" pb={ 2 }>\n          <Alert severity=\"error\" sx={ {borderRadius: '20px'} }>\n            <AlertTitle>Error</AlertTitle>\n            { hasErrorMsg }\n          </Alert>\n        </Stack> }\n        { title}\n      </DialogTitle>\n      \n      <DialogContent>\n        Mock Edit...\n      </DialogContent>\n      <DialogActions >\n        <Button onClick={ onCancelHandler }>Cancel</Button>\n        <Button onClick={ onSubmitHandler }>{ apiLoading ? 'Working...' : 'Submit' } </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default EditDialog;","import { Box, Button, Divider, Paper, Stack, Typography } from \"@mui/material\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport FilterInput from \"src/core/movies/movies/filter/FilterInput\";\nimport ProgressCircle from \"src/shared/components/progress/CircleProgress\";\nimport AppToolbar from \"src/shared/components/toolbar/Toolbar\";\nimport useScreenSize from \"src/shared/hooks/useIsMobile\";\nimport { useAppDispatch } from \"src/store/appHook\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { speciesTag, starwarsContentApi, useEditSpecieMutation, useFetchSpecieQuery } from \"src/core/store/swapi/swapi\";\nimport LoadingLogo from \"src/shared/loading/full-logo/LoadingLogo\";\nimport ErrorPage from \"src/404/ErrorPage\";\nimport SimpleGridDisplay from \"src/core/shared/display/SimpleGridDisplay\";\nimport LayoutWithGutter from \"src/shared/components/layouts/LayoutWithGutter\";\nimport { flexCenter } from \"src/shared/utils/css.utils\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { HttpSearchResponse, StarwarsSpecie } from \"src/shared/models/starwars.model\";\nimport { QueryObj } from \"src/shared/models/url\";\nimport { isArray, startCase } from 'lodash';\nimport { isNumeric } from \"src/shared/utils/number.utils\";\nimport EditDialog from \"src/core/shared/edit-dialog/EditDialog\";\n\n\nfunction Specie() {\n  const { isMobile } = useScreenSize();\n  const dispatch = useAppDispatch();\n  const { specieId } = useParams();\n  const [ openEditDialog, setOpenEditDialog ] = useState<boolean>(false);\n  const { data, isLoading, isFetching, error, isError, refetch } = useFetchSpecieQuery(specieId!);\n  const [ editSpecie, editResult ] = useEditSpecieMutation();\n\n  const display = useMemo(() => {\n    let list: QueryObj[] = [];\n    list = displayList.map((key: string) => {\n      return {\n        key,\n        value: (`${data?.result.properties[key as keyof StarwarsSpecie]}`)\n      };\n    });\n    return list;\n  }, [data]);\n\n  const onRefreshHandler = () => {\n    refetch();\n  };\n\n  const onEditHandler = () => {\n    setOpenEditDialog(true);\n  };\n\n  const onDialogCloseHandler = (editedData?: StarwarsSpecie) => {\n    if (editedData) {\n      editSpecie({\n        entityId: specieId!,\n        editable: editedData\n      });\n    } else {\n      setOpenEditDialog(false);\n    }\n  };\n  \n  if (isLoading) return (\n    <Stack direction=\"column\" width=\"100%\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n      <LoadingLogo message=\"species\" />\n    </Stack>\n  );\n\n  if (isError) {\n    return <ErrorPage reason={ (error as any).status } debug={ (error as any).error } />;\n  }\n\n  if (!data) {\n    return <></>;\n  }\n\n  return (\n    <Stack direction=\"column\" width=\"100%\">\n      <AppToolbar toolbarProps={ {\n        position: \"sticky\",\n        sx: {top: isMobile ? '56px':'64px'}\n      } }>\n        <Grid container xs={ 12 } flexDirection={ { xs: 'row', sm: 'row' } } justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid xs={ 10 } sm={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Button startIcon={ <RefreshIcon /> } variant=\"text\" onClick={ onRefreshHandler }>Refresh</Button>\n              <Divider orientation=\"vertical\" variant=\"middle\" flexItem sx={ {mr: 1, ml: 1} } />\n              <Button startIcon={ <EditIcon /> } variant=\"text\" onClick={ onEditHandler }>Edit</Button>\n            </Stack>\n          </Grid>\n          <Grid xs={ 2 } sm={ 8 }>\n            <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n              { isFetching && <ProgressCircle size={ 20 } /> }\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n\n      <Box mt={ 2 } m={ isMobile ? 2 : 0 }>\n        <LayoutWithGutter size={ 'med' }>\n          <Grid xs={ 12 } sx={ {border: '1px solid #ddd', borderRadius: '10px', p: 2} }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              <Typography variant='h4' sx={ {fontWeight: 500} } mr={ 2 }>\n                { data.result.properties.name }\n              </Typography>\n              <Typography variant='body1'>\n                ({ data.result.properties.classification })\n              </Typography>\n            </Stack>\n            <Divider sx={ {my: 2} } />\n            <Stack direction=\"column\" >\n              {\n                display.map((res) => {\n                  return (\n                    <Box key={ res.key } mb={ 1 }>\n                      <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n                        <Typography variant='h6' fontWeight={ 300 }>\n                          { startCase(res.key) }\n                        </Typography>\n                        <Typography mr={ 1.5 }>:</Typography>\n                        <Typography variant='h5'>\n                          { isNumeric(res.value) ? ((+res.value).toLocaleString()) : res.value }\n                        </Typography>\n                      </Stack>\n                    </Box>\n                  );\n                })\n              }\n            </Stack>\n          </Grid>\n        </LayoutWithGutter>\n      </Box>\n\n      <EditDialog open={ openEditDialog }  title={ `Edit ${data.result.properties.name}` } \n        editable={ data.result.properties } onDialogClose={ onDialogCloseHandler } apiLoading={ editResult.isLoading }\n        hasErrorMsg={ (editResult.error as any)?.error } />\n    </Stack>\n  );\n}\n\nexport default Specie;\n\n\nconst displayList = ['language', 'designation', 'average_height', 'average_lifespan', 'hair_colors', 'skin_colors', 'eye_colors'];","import { AppBar, Stack, Button, Tooltip, IconButton, AppBarTypeMap } from \"@mui/material\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport Toolbar from '@mui/material/Toolbar';\nimport { GREY } from \"src/theme/palette\";\n\ninterface ToolbarProps {\n  toolbarProps: any;\n  children: any;\n}\n\nexport default function AppToolbar({ toolbarProps, children }: ToolbarProps) {\n  \n  return (\n    <AppBar elevation={ 0 } { ...toolbarProps }>\n      <Toolbar \n        variant=\"regular\" \n        sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? GREY[100] : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#000' : null,\n          pr: 0\n        } }>\n        { children }\n      </Toolbar>\n    </AppBar>\n  );\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\n\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport { getAlertTitleUtilityClass } from './alertTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\n\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n});\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, _extends({\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;"],"names":["editable","onDialogClose","open","title","apiLoading","hasErrorMsg","onCancelHandler","undefined","Dialog","onClose","event","reason","fullWidth","id","maxWidth","DialogTitle","Stack","width","pb","Alert","severity","sx","borderRadius","AlertTitle","DialogContent","DialogActions","Button","onClick","isMobile","useScreenSize","specieId","useAppDispatch","useParams","useState","openEditDialog","setOpenEditDialog","useFetchSpecieQuery","data","isLoading","isFetching","error","isError","refetch","useEditSpecieMutation","editSpecie","editResult","display","useMemo","displayList","map","key","value","result","properties","direction","justifyContent","alignItems","height","LoadingLogo","message","ErrorPage","status","debug","toolbarProps","position","top","container","xs","flexDirection","sm","startIcon","Refresh","variant","Divider","orientation","flexItem","mr","ml","Edit","size","Box","mt","m","LayoutWithGutter","border","p","Typography","fontWeight","name","classification","my","res","mb","startCase","isNumeric","toLocaleString","editedData","entityId","AppToolbar","children","elevation","bgcolor","theme","palette","mode","GREY","color","pr","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getAlertTitleUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AlertTitleRoot","styled","overridesResolver","props","styles","root","typography","fontWeightMedium","marginTop","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","_jsx","_extends","gutterBottom","component","clsx"],"sourceRoot":""}