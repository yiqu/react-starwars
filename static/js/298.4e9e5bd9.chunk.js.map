{"version":3,"file":"static/js/298.4e9e5bd9.chunk.js","mappings":"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","sources":["shared/form/m-autocomplete/FormAutocomplete.tsx","shared/form/m-checkbox/FormCheckbox.tsx","shared/form/m-input/FormInput.tsx","shared/form/m-select/FormSelect.tsx","shared/models/form.model.ts","shared/form/m-textarea/FormTextArea.tsx","shared/form/FormFields.tsx","create-new/hooks/useFetchEntity.ts","create-new/new-dialog/NewFilmForm.tsx","create-new/schemas/all-schemas.ts","create-new/http/crud.ts","shared/rest/axios.ts","create-new/new-dialog/NewFilmDialog.tsx","create-new/core/CreateNewFilm.tsx","shared/utils/sleep.js","shared/fetcber/axios.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { ErrorMessage, Field, Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport { FormAutocompleteProps, FormikInputProps, FormInput2Props, FormInputProps } from 'src/shared/models/form.model';\nimport { Checkbox, FormControl, FormHelperText, InputLabel } from '@mui/material';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { upperFirst, startCase } from 'lodash';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\n\n\nconst icon = <CheckBoxOutlineBlankIcon/>;\nconst checkedIcon = <CheckBoxIcon />;\n\nconst FormAutocomplete = ({ label, name, options, dataLoading, placeholder, validate, \n    disabled, ...props}: FormAutocompleteProps) => {\n  const formik = useFormikContext<any>();\n\n  const onValueChangeHandler = (event: any, value: any) => {\n    formik.setFieldValue(name, value);\n  };\n  \n  return (\n    <FormControl fullWidth size='small'>\n      <Field as={ Autocomplete } \n        label={ label } \n        name={ name } \n        id={ name } \n        onChange={ onValueChangeHandler } \n        renderInput={ (params: any) => (\n          <TextField { ...params }\n            name={ name }\n            variant=\"standard\"\n            label={ startCase((dataLoading ? `Loading ${name}...` : `Select ${name}`)) } \n            placeholder={ upperFirst(placeholder ?? label) }\n            error={ formik.touched[name] && !!formik.errors[name] }\n            { ...props.renderInputProps }\n          />\n        ) }\n        renderOption= { (props: any, option: any, { selected }: {selected: boolean}) => { return (\n          <li { ...props }>\n            <Checkbox\n              icon={ icon }\n              checkedIcon={ checkedIcon }\n              checked={ selected }\n            />\n            { option.name ?? option.display ?? option }\n          </li>\n        );} }\n        getOptionLabel={ (option: any) => option.name ?? option.display ?? option }\n        validate={ validate }\n        options={ options }\n        disabled={ disabled }\n        loading={ dataLoading }\n        loadingText = { `Loading ${label}` }\n        noOptionsText={ `No ${label} available` }\n        autoHighlight\n        { ...props.props } \n      />\n\n      <FormHelperText id={ `${name}-helper-text` } error={ formik.touched[name] && !!formik.errors[name] }>\n        {\n          (formik.touched[name] && formik.errors[name]) ? \n            (<ErrorMessage name={ name } render={ (err) => upperFirst(err) } />) : (<>{ props.helperText }</>)\n        }\n      </FormHelperText>\n      \n    </FormControl>\n  );\n};\n\nexport default FormAutocomplete;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport { ErrorMessage, Field, Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport { FormikInputProps, FormInput2Props, FormInputProps } from 'src/shared/models/form.model';\nimport { FormControl, FormControlLabel, FormHelperText, InputLabel } from '@mui/material';\nimport Checkbox from '@mui/material/Checkbox';\nimport { upperFirst, startCase } from 'lodash';\n\nconst FormCheckbox = ({ label, name, props, disabled }: FormInput2Props) => {\n  const formik = useFormikContext<any>();\n  return (\n    <FormControl fullWidth size='small'>\n      <Field as={ FormControlLabel } \n        control={ <Checkbox checked={ !!formik.values[name] } \n          onChange={ (e: React.ChangeEvent<HTMLInputElement>) => formik.setFieldValue(name, e.target.checked || false) }/> }\n        label={ startCase(label) } \n        name={ name } \n        id={ name }\n        disabled={ disabled }\n        { ...props } />\n    </FormControl>\n  );\n};\n\nexport default FormCheckbox;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { ErrorMessage, Field, Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport { FormikInputProps, FormInput2Props, FormInputProps } from 'src/shared/models/form.model';\nimport { FormControl, FormHelperText, InputLabel } from '@mui/material';\nimport { upperFirst, startCase } from 'lodash';\n\n\nconst FormInput = ({ label, name, validate, \n    disabled, placeholder, ...props}: FormInput2Props) => {\n      \n  const formik = useFormikContext<any>();\n  return (\n    <FormControl fullWidth size='small'>\n      <Field as={ TextField } \n        label={ startCase(label) } \n        name={ name } \n        id={ name }\n        error={ formik.touched[name] && !!formik.errors[name] }\n        validate={ validate }\n        variant=\"standard\"\n        disabled={ disabled }\n        placeholder={ upperFirst(placeholder ?? label) }\n        { ...props.props } />\n\n      <FormHelperText id={ `${name}-helper-text` } error={ formik.touched[name] && !!formik.errors[name] }>\n        {\n          (formik.touched[name] && formik.errors[name]) ? \n            (<ErrorMessage name={ name } render={ (err) => upperFirst(err) } />) : (<>{props.helperText}</>)\n        }\n      </FormHelperText>\n\n    </FormControl>\n  );\n};\n\nexport default FormInput;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport { ErrorMessage, Field, Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport { FormSelectProps, NONE_SELECTED_VALUE } from 'src/shared/models/form.model';\nimport { FormHelperText, MenuItem, Select, Typography } from '@mui/material';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport { upperFirst, startCase } from 'lodash';\n\n\nconst FormikSelect = ({ label, name, options, disabled, \n    placeholder, validate, ...props}: FormSelectProps) => {\n\n  const formik = useFormikContext<any>();\n\n  return (\n    <FormControl fullWidth size='small'>\n      <InputLabel id={ name+'label' }> { startCase(label) } </InputLabel>\n\n      <Field as={ Select } \n        name={ name } \n        label={ startCase(label) }\n        id={ name } \n        validate={ validate }\n        variant=\"standard\"\n        error={ formik.touched[name] && !!formik.errors[name] }\n        disabled={ disabled }\n        { ...props.props } >\n        {\n          props.useDefaultNoneSelected && (\n          <MenuItem value={ NONE_SELECTED_VALUE } key={ '' } disabled>\n            <Typography sx={ {color: '#666'} }>Select { props.useDefaultNoneSelected }</Typography>\n          </MenuItem>\n          ) \n        }\n        {\n          options?.map((opt) => {\n            const display = opt.name ?? opt;\n            const value = opt.value ?? opt;\n            return (\n              <MenuItem value={ value } key={ opt.id ?? opt.uid }>{ display }</MenuItem>\n            );\n          })\n        }\n      </Field>\n      <FormHelperText id={ `${name}-helper-text` } error={ formik.touched[name] && !!formik.errors[name] }>\n        {\n          (formik.touched[name] && formik.errors[name]) ? \n            (<ErrorMessage name={ name } render={ (err) => upperFirst(err) } />) : (<>{props.helperText}</>)\n        }\n      </FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default FormikSelect;","import { TextFieldProps, SelectProps } from '@mui/material';\n\nexport const NONE_SELECTED_VALUE = 'NONE_SELECTED';\nexport interface FormInputProps {\n  name: string;\n  label?: string;\n  disabled?: boolean;\n  showLabel?: boolean;\n  helperText?: string;\n  placeholder?: string;\n  type: string;\n  validate?: (value: any) => string | null;\n  valueChange?: (payload: any) => void;\n}\n\nexport interface FormInput2Props extends FormInputProps {\n  props?: TextFieldProps;\n}\n\nexport interface FormAutocompleteProps extends FormInputProps {\n  options: any[];\n  props?: any;\n  dataLoading?: boolean;\n  renderInputProps?: any;\n}\n\nexport interface FormSelectProps extends FormInputProps {\n  options?: any[];\n  useDefaultNoneSelected?: boolean | string;\n  props?: SelectProps;\n}\n\nexport type FormikInputProps = TextFieldProps & FormInputProps;\n\nexport type FormikSelectProps = SelectProps & FormSelectProps;\n\nexport type GenericFormFieldObject = FormInput2Props | FormAutocompleteProps | FormSelectProps;\n\nexport interface AsyncFormFieldOptions<T> {\n  [key: string]: {\n    options:  T[] | undefined,\n    loading?: boolean\n  }\n}\n\nexport interface FormFieldOptions<T> {\n  [key: string]: {\n    options:  T[] | undefined,\n  }\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport { ErrorMessage, Field, Form, Formik, FormikProps, useFormikContext } from 'formik';\nimport { FormikInputProps, FormInput2Props, FormInputProps } from 'src/shared/models/form.model';\nimport { FormControl, FormHelperText, InputLabel } from '@mui/material';\nimport TextareaAutosize from '@mui/base/TextareaAutosize';\nimport { upperFirst, startCase } from 'lodash';\n\nconst FormTextArea = ({ label, name, placeholder, disabled, validate, ...props}: FormInput2Props) => {\n  const formik = useFormikContext<any>();\n  return (\n    <FormControl fullWidth size='small'>\n\n      <Field as={ TextField } \n        multiline\n        name={ name } \n        id={ name }\n        validate={ validate }\n        minRows={ 1 }\n        label={ startCase(label) }\n        error={ formik.touched[name] && !!formik.errors[name] }\n        placeholder={ upperFirst(placeholder ?? label) }\n        InputProps={ {\n          inputComponent: TextareaAutosize,\n          inputProps: {\n            style: {\n              resize: \"vertical\",\n              minHeight: \"3.5rem\"\n            },\n          }\n        } }\n        { ...props.props } />\n\n      <FormHelperText id={ `${name}-helper-text` } error={ formik.touched[name] && !!formik.errors[name] }>\n        {\n          (formik.touched[name] && formik.errors[name]) ? \n            (<ErrorMessage name={ name } render={ (err) => upperFirst(err) } />) : (<>{props.helperText}</>)\n        }\n      </FormHelperText>\n\n    </FormControl>\n  );\n};\n\nexport default FormTextArea;","import React from 'react';\nimport FormAutocomplete from \"src/shared/form/m-autocomplete/FormAutocomplete\";\nimport FormCheckbox from 'src/shared/form/m-checkbox/FormCheckbox';\nimport FormInput from \"src/shared/form/m-input/FormInput\";\nimport FormikSelect from \"src/shared/form/m-select/FormSelect\";\nimport FormTextArea from 'src/shared/form/m-textarea/FormTextArea';\n\nexport const CreateFormFields = (controlObject: any) => {\n  switch (controlObject.type) {\n    case 'select': {\n      return (\n        <FormikSelect \n          name={ controlObject.name } \n          label={ controlObject.label }\n          options={ controlObject.options ?? [] } \n          disabled={ controlObject.disabled }\n          placeholder={ controlObject.placeholder }\n          { ...controlObject }\n        />\n      );\n    }\n    case 'text': {\n      return (\n        <FormInput \n          name={ controlObject.name } \n          label={ controlObject.label }\n          disabled={ controlObject.disabled }\n          placeholder={ controlObject.placeholder }\n          { ...controlObject }\n        />\n      );\n    }\n    case 'autocomplete': {\n      return (\n        <FormAutocomplete \n          name={ controlObject.name } \n          label={ controlObject.label }\n          options={ controlObject.props.options ?? [] }\n          dataLoading={ controlObject.props.loading } \n          disabled={ controlObject.disabled }\n          placeholder={ controlObject.placeholder }\n          { ...controlObject } />\n      );\n    }\n    case 'textarea': {\n      return (\n        <FormTextArea \n          name={ controlObject.name } \n          label={ controlObject.label }\n          disabled={ controlObject.disabled }\n          placeholder={ controlObject.placeholder }\n          { ...controlObject } />\n      );\n    }\n    case 'checkbox': {\n      return (\n        <FormCheckbox \n          name={ controlObject.name }\n          label={ controlObject.label }\n          disabled={ controlObject.disabled }\n          { ...controlObject } />\n      );\n    }\n    default: {\n      return (\n        <> No component matched... </>\n      );\n    }\n  }\n};","import { useState } from \"react\";\nimport { useDeepCompareEffect } from \"react-use\";\nimport { HttpEntityProp } from \"src/shared/models/http.model\";\nimport urlcat from 'urlcat';\nimport useSWRImmutable from 'swr/immutable';\nimport { httpGet } from \"src/shared/fetcber/axios\";\nimport { HttpResponse } from \"src/shared/models/starwars.model\";\nimport { AxiosError } from \"axios\";\nimport { BASE_SW_API } from \"src/shared/api/endpoints\";\n\nexport const DEFAULT_MAX_PAGE_PARAMS = {limit: 10000, page: 1};\n\nconst useFetchSwEntity = <T>({ entityType, params={}, sleep=0 }: HttpEntityProp) => {\n\n  const [url, setUrl] = useState<string>();\n\n  useDeepCompareEffect(() => {\n    const restUrl = urlcat(BASE_SW_API, entityType, params);\n    setUrl(restUrl);\n  }, [params, entityType]);\n\n  const { data, isValidating, error, isLoading } = useSWRImmutable<HttpResponse<T>>(\n    () => url ? url : null, \n    (url) => httpGet<HttpResponse<T>>(url, sleep),\n    {\n      shouldRetryOnError: false\n    }\n  );\n\n  return {\n    data: data?.results,\n    validating: isValidating,\n    loading: isLoading,\n    error: error as AxiosError\n  };\n};\n\nexport default useFetchSwEntity;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Alert, AlertTitle, Box, Checkbox, DialogContent, DialogTitle, Divider, IconButton, Stack } from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport React, { useEffect, useRef, useState } from 'react';\n import { Form, useFormikContext } from 'formik';\nimport { StarwarsContent, StarwarsPeople } from 'src/shared/models/starwars.model';\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport { GenericFormFieldObject } from 'src/shared/models/form.model';\nimport { CreateFormFields } from 'src/shared/form/FormFields';\nimport useFetchSwEntity, { DEFAULT_MAX_PAGE_PARAMS } from '../hooks/useFetchEntity';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\nimport CloseIcon from '@mui/icons-material/Close';\n\n\nconst NewFilmForm = ({ handleClose, isEditMode }: {handleClose: () => void; isEditMode?: boolean}) => {\n  const formikContext = useFormikContext<any>();\n  const formikContextRef = useRef(formikContext);\n  const [refetch, triggerRefetch] = useState<number>(0);\n\n  const [ formFields, setFormFields ] = useState<GenericFormFieldObject[]>([]);\n\n  const { data: peopleListData, error: charactersError, loading: peopleListLoading } = \n    useFetchSwEntity<StarwarsContent>({entityType: 'people', sleep: 1000, params: {...DEFAULT_MAX_PAGE_PARAMS, time: refetch}});\n\n  const { data: starshipsList, error: starshipsError, loading: starshipsLoading } = \n    useFetchSwEntity<StarwarsContent>({entityType: 'starships', params: {...DEFAULT_MAX_PAGE_PARAMS, time: refetch}});\n\n  const { data: vehiclesList, error: vehiclesError, loading: vehiclesLoading } = \n    useFetchSwEntity<StarwarsContent>({entityType: 'vehicles', params: {...DEFAULT_MAX_PAGE_PARAMS, time: refetch}});\n\n  const { data: planetList, error: planetsError, loading: planetsLoading } = \n    useFetchSwEntity<StarwarsContent>({entityType: 'planets', params: {...DEFAULT_MAX_PAGE_PARAMS, time: refetch}});\n\n  const { data: speciesList, error: speciesError, loading: speciesLoading } = \n    useFetchSwEntity<StarwarsContent>({entityType: 'species', params: {...DEFAULT_MAX_PAGE_PARAMS, time: refetch}});\n  \n\n  useEffect(() => {\n    setFormFields(defaultFormFields);\n  }, []);\n\n    useEffect(() => {\n    formikContextRef.current.resetForm();\n  }, [refetch]);\n\n  const handleRefresh = () => {\n    triggerRefetch(new Date().getTime());\n  };\n\n  useEffect(() => {\n    if (peopleListData && peopleListData.length > -1) {\n      setFormFields((fields: any[]) => {\n        const index = fields.findIndex((field) => {\n          return field.name === 'characters';\n        });\n        fields[index].props.options = peopleListData;\n        return fields;\n      });\n    }\n  }, [peopleListData]);\n\n  useEffect(() => {\n    setFormFields((fields: any[]) => {\n      const index = fields.findIndex((field) => {\n        return field.name === 'characters';\n      });\n      fields[index].props.loading = peopleListLoading;\n      return [...fields];\n    });\n  }, [peopleListLoading]);\n\n  useEffect(() => {\n    if (starshipsList && starshipsList.length > -1) {\n      setFormFields((fields: any[]) => {\n        const index = fields.findIndex((field) => {\n          return field.name === 'starships';\n        });\n        fields[index].props.options = starshipsList;\n        return fields;\n      });\n    }\n  }, [starshipsList]);\n\n  useEffect(() => {\n    setFormFields((fields: any[]) => {\n      const index = fields.findIndex((field) => {\n        return field.name === 'starships';\n      });\n      fields[index].props.loading = starshipsLoading;\n      return [...fields];\n    });\n  }, [starshipsLoading]);\n\n  useEffect(() => {\n    if (vehiclesList && vehiclesList.length > -1) {\n      setFormFields((fields: any[]) => {\n        const index = fields.findIndex((field) => {\n          return field.name === 'vehicles';\n        });\n        fields[index].props.options = vehiclesList;\n        return fields;\n      });\n    }\n  }, [vehiclesList]);\n\n  useEffect(() => {\n    setFormFields((fields: any[]) => {\n      const index = fields.findIndex((field) => {\n        return field.name === 'vehicles';\n      });\n      fields[index].props.loading = vehiclesLoading;\n      return [...fields];\n    });\n  }, [vehiclesLoading]);\n\n  useEffect(() => {\n    if (planetList && planetList.length > -1) {\n      setFormFields((fields: any[]) => {\n        const index = fields.findIndex((field) => {\n          return field.name === 'planets';\n        });\n        fields[index].options = planetList;\n        return [...fields];\n      });\n    }\n  }, [planetList]);\n\n  useEffect(() => {\n    if (speciesList && speciesList.length > -1) {\n      setFormFields((fields: any[]) => {\n        const index = fields.findIndex((field) => {\n          return field.name === 'species';\n        });\n        fields[index].props.options = speciesList;\n        return fields;\n      });\n    }\n  }, [speciesList]);\n\n  useEffect(() => {\n    setFormFields((fields: any[]) => {\n      const index = fields.findIndex((field) => {\n        return field.name === 'species';\n      });\n      fields[index].props.loading = speciesLoading;\n      return [...fields];\n    });\n  }, [speciesLoading]);\n\n\n  return (\n    <>\n      <DialogTitle>\n        <Stack direction={ 'row' } justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack>\n            { isEditMode ? 'Editing' : 'Create New Movie' }\n          </Stack>\n          <Stack direction=\"row\">\n            <IconButton onClick={ handleRefresh }>\n              <CloudDownloadIcon />\n            </IconButton>\n            <IconButton onClick={ handleClose }>\n              <CloseIcon />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </DialogTitle>\n\n      <Divider />\n      <DialogContent >\n        <Stack direction=\"column\" spacing={ 2 }>\n          {\n            (charactersError || speciesError || vehiclesError || starshipsError || planetsError) && \n            <Alert severity=\"error\">\n              <AlertTitle>API Error</AlertTitle>\n              <Box>\n                <>\n                  An API error occurred:\n                  <Box>{ charactersError?.message }</Box>\n                  <Box>{ speciesError?.message }</Box>\n                  <Box>{ vehiclesError?.message }</Box>\n                  <Box>{ starshipsError?.message }</Box>\n                  <Box>{ planetsError?.message }</Box>\n                </>\n              </Box>\n            </Alert>\n          }\n          <Form>\n            <Grid container spacing={ 2 }>\n              { formFields.map((field) => {\n                return (\n                  <Grid key={ field.name } xs={ 12 } >\n                    { CreateFormFields(field) }\n                  </Grid>\n                );\n              })\n            }\n            </Grid>\n          </Form>\n        </Stack>\n      </DialogContent>\n    </>\n  );\n};\n\nexport default NewFilmForm;\n\nexport const defaultFormFields: GenericFormFieldObject[] = [\n  {\n    name: 'title',\n    label: 'title',\n    placeholder: 'A new hope',\n    type: 'text',\n    disabled: false,\n    props: {\n      variant: \"outlined\"\n    }\n  },\n  {\n    name: 'director',\n    label: 'director',\n    placeholder: 'George Lucas',\n    type: 'text',\n    disabled: false,\n    props: {\n      variant: \"outlined\"\n    }\n  },\n  {\n    name: 'characters',\n    label: 'characters',\n    type: 'autocomplete',\n    renderInputProps: {\n      variant: 'outlined' \n    },\n    disabled: false,\n    placeholder: 'Luke Skywalker, Han Solo...',\n    props: {\n      options: [],\n      multiple: true,\n      disableCloseOnSelect: true,\n      ChipProps: {\n        color: 'primary'\n      },\n    }\n  },\n  {\n    name: 'openingCrawl',\n    label: 'Opening crawl',\n    placeholder: 'In a galaxy far far away...',\n    type: 'textarea',\n    disabled: false,\n  },\n  {\n    name: 'planets',\n    label: 'Select planet',\n    type: 'select',\n    options: [],\n    disabled: false,\n    props: {\n      variant: 'outlined',\n    }\n  },\n  {\n    name: 'species',\n    label: 'Species',\n    type: 'autocomplete',\n    renderInputProps: {\n      variant: 'outlined' \n    },\n    disabled: false,\n    props: {\n      multiple: true,\n      disableCloseOnSelect: true,\n      ChipProps: {\n        color: 'primary'\n      },\n    }\n  },\n  {\n    name: 'vehicles',\n    label: 'Vehicles',\n    type: 'autocomplete',\n    renderInputProps: {\n      variant: 'outlined' \n    },\n    disabled: false,\n    props: {\n      multiple: true,\n      disableCloseOnSelect: true,\n      ChipProps: {\n        color: 'primary'\n      },\n    }\n  },\n  {\n    name: 'starships',\n    label: 'starships',\n    type: 'autocomplete',\n    renderInputProps: {\n      variant: 'outlined' \n    },\n    disabled: false,\n    props: {\n      multiple: true,\n      disableCloseOnSelect: true,\n      ChipProps: {\n        color: 'primary'\n      },\n    }\n  },\n  {\n    name: 'canon',\n    label: 'Canon',\n    type: 'checkbox',\n    disabled: false\n  }\n];","import * as Yup from 'yup';\n\nexport const newFilmValidationSchema = Yup.object({\n  title: Yup.string().required(),\n  director: Yup.string().required().min(1),\n  openingCrawl: Yup.string().required('Opening crawl text is a required field').min(5, 'At least 5 characters is required for crawl text'),\n  characters: Yup.array().min(1, \"At least one character is required\"),\n  starships: Yup.array().min(1,  \"At least one starship is required\"),\n  planets: Yup.object().required(\"Planet is a required field\"),\n  species: Yup.array().min(1,  \"At least one species is required\"),\n  vehicles: Yup.array().min(1,  \"At least one vehicle is required\"),\n});","import { AxiosError } from \"axios\";\nimport { axiosPost } from \"src/shared/rest/axios\";\nimport urlcat from \"urlcat\";\n\nconst BASE_URL = 'https://kq-1-1a499.firebaseio.com/';\n\nexport interface CreationNewFilm<T> {\n  film: any;\n  onSuccess: (res: T) => void;\n  onFailure: (err: AxiosError) => void;\n}\n\nexport const createNewFilm = <T>({film, onSuccess, onFailure}: CreationNewFilm<T>) => {\n  axiosPost({\n    url: urlcat(BASE_URL, '/swdb/:user/added-films.json', { user: 'yqu' }),\n    body: JSON.stringify(film),\n    onSuccess,\n    onFailure\n  });\n};\n","import axios, { AxiosError, AxiosResponse } from 'axios';\n\nexport interface HttpAction<T> {\n  url: string;\n  body?: any;\n  abortController?: AbortController;\n  onSuccess: (data: T) => void;\n  onFailure: (errorData: any) => void;\n  onFinally?: () => void;\n}\n/**\n * Create a Axios instance\n * @param baseUrl \n * @returns \n */\nexport const getAxiosInstance = (baseUrl: string) => {\n  const axiosInstance = axios.create({\n    baseURL: baseUrl,\n    timeout: 5000,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    responseType: 'json'\n  });\n  return axiosInstance;\n};\n\nexport const axiosGet = <T>({ url, onSuccess, onFailure, onFinally, abortController }: HttpAction<T>) => {\n  axios.get(url)\n  .then((res: AxiosResponse) => {\n    onSuccess && onSuccess(res.data as T);\n  })\n  .catch((err: AxiosError) => {\n    console.log(\"App error GET: \", err);\n    onFailure && onFailure(err);\n  })\n  .finally(() => {\n    onFinally && onFinally();\n  });\n};\n\n\nexport const axiosPost = <T>({ url, body, onSuccess, onFailure, onFinally, abortController }: HttpAction<T>) => {\n  axios.post(url, body)\n  .then((res: AxiosResponse) => {\n    onSuccess && onSuccess(res.data);\n  })\n  .catch((err: AxiosError) => {\n    console.log(\"App error POST: \", err);\n    onFailure && onFailure(err);\n  })\n  .finally(() => {\n    onFinally && onFinally();\n  });\n};\n\nexport const axiosPut = <T>({ url, body, onSuccess, onFailure, onFinally, abortController }: HttpAction<T>) => {\n  axios.put(url, body)\n  .then((res: AxiosResponse) => {\n    onSuccess && onSuccess(res.data);\n  })\n  .catch((err: AxiosError) => {\n    console.log(\"App error PUT: \", err);\n    onFailure && onFailure(err);\n  })\n  .finally(() => {\n    onFinally && onFinally();\n  });\n};\n\nexport const axiosDelete = <T>({ url, onSuccess, onFailure, onFinally, abortController }: HttpAction<T>) => {\n  axios.delete(url)\n  .then((res: AxiosResponse) => {\n    onSuccess && onSuccess(res.data);\n  })\n  .catch((err: AxiosError) => {\n    console.log(\"App error DELETE: \", err);\n    onFailure && onFailure(err);\n  })\n  .finally(() => {\n    onFinally && onFinally();\n  });\n};\n\nexport default getAxiosInstance;","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useCallback, useState } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport { DialogProps } from 'src/shared/models/dialog.model';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Alert, AlertTitle, Box, Button, Divider, IconButton, Paper, Stack, Typography } from '@mui/material';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport SaveIcon from '@mui/icons-material/Save';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\n import { Form, Formik, useFormikContext } from 'formik';\nimport NewFilmForm from './NewFilmForm';\nimport { newFilmValidationSchema } from '../schemas/all-schemas';\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\nimport { createNewFilm } from '../http/crud';\n\nexport interface NewFilmData {\n  title: string;\n  director: string;\n  characters: string[];\n  starships: string[];\n  openingCrawl: string;\n  planets: string;\n  species: string[];\n  vehicles: string[];\n  canon: boolean;\n}\n\nconst initValues: NewFilmData = {\n  title: '',\n  director: '',\n  characters: [],\n  starships: [],\n  openingCrawl: 'In a galaxy far far away...',\n  planets: '',\n  species: [],\n  vehicles: [],\n  canon: false\n};\n\nconst NewFilmDialog = ({ onClose, open, isEditMode }: DialogProps) => {\n  \n  const handleClose = useCallback((event?: any, reason?: string) => {\n    if (reason !== 'backdropClick') {\n      onClose(null);\n    }\n  }, [onClose]);\n\n  const [errorMsg, setErrorMsg] = useState<string | undefined>();\n  \n  const formSubmitHandler = (payload: any) => {\n    setErrorMsg(undefined);\n    if (payload) {\n      createNewFilm({\n        film: payload,\n        onSuccess: ((res) => {\n          onClose(res);\n        }),\n        onFailure: ((err) => {\n          setErrorMsg(`${err.response?.data}`);\n        })\n      });\n    }\n  };\n\n  return (\n     \n    <Formik \n      initialValues={ initValues }\n      onSubmit={ formSubmitHandler }\n      validationSchema={ newFilmValidationSchema } >\n      {(formik) => {\n        return <>\n          <Dialog onClose={ handleClose } open={ open } disableEscapeKeyDown >\n\n            <NewFilmForm handleClose={ handleClose } isEditMode={ isEditMode } />\n\n            {\n              errorMsg && \n              <Alert severity=\"error\">\n                <AlertTitle>API Error</AlertTitle>\n                <Box>\n                  An API error occurred: {errorMsg}\n                </Box>\n              </Alert>\n            }\n\n            <DialogActions>\n              <Button variant=\"text\" startIcon={ <RestartAltIcon /> } onClick={ formik.handleReset }>\n                Reset\n              </Button>\n              <Button variant=\"text\" startIcon={ <SaveIcon /> } onClick={ formik.submitForm }>\n                Save\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </>;\n      }}\n    </Formik>\n  );\n};\n\nexport default NewFilmDialog;\n\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Grid from '@mui/material/Unstable_Grid2';\nimport { Button, Stack, Typography } from \"@mui/material\";\nimport AddAPhotoOutlinedIcon from '@mui/icons-material/AddAPhotoOutlined';\nimport NewFilmDialog from \"../new-dialog/NewFilmDialog\";\n\nconst CreateNewFilm = () => {\n\n  const [showDialog, setShowDialog] = useState<boolean>(false);\n\n  const handleClickOpen = () => {\n    setShowDialog(true);\n  };\n  const handleClose = useCallback((payload: any) => {\n    console.log(payload);\n    setShowDialog(false);\n  }, []);\n\n  return (\n    <Stack direction=\"column\" p={ 2 } width=\"100%\">\n      <Grid container>\n        <Grid xs={ 12 }>\n          <Stack direction=\"column\" spacing={ 3 } alignItems=\"center\" justifyContent=\"center\">\n            <Stack direction=\"row\" >\n              <Typography variant=\"h6\" >\n                Create your own Starwars movie.\n              </Typography>\n            </Stack>\n            <Stack direction=\"row\" >\n              <Typography variant=\"body2\">\n                Try adding your own movie with starships, vehicles, species, and planet.\n              </Typography>\n            </Stack>\n\n            <Stack direction=\"row\" >\n              <Button variant=\"contained\" startIcon={ <AddAPhotoOutlinedIcon /> } onClick={ handleClickOpen }>\n                Add New Movie\n              </Button>\n            </Stack>\n          </Stack>\n          \n        </Grid>\n      </Grid>\n\n      { showDialog && <NewFilmDialog onClose={ handleClose } open={ showDialog }></NewFilmDialog> }     \n    </Stack>\n  );\n};\n\nexport default CreateNewFilm;;","export function sleep(time) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { sleep } from \"../utils/sleep\";\n\nexport const httpGet = async <T>(url: string, slow = 0): Promise<T> => {\n  if (slow) {\n    await sleep(slow);\n  }\n  try {\n    const res: AxiosResponse<T, any> = await axios.get<T>(url, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      responseType: 'json'\n    });\n\n    if (res.status === 200) {\n      return res.data;\n    }\n\n    return Promise.reject(res);\n  } catch (error) {\n    console.error(\"App fetcher GET error:\", error);\n    throw error;\n  }\n};\n\n\nexport const httpGetCancellable = async <T>(url: string, abortController: AbortController, slow = 0): Promise<T> => {\n  if (slow) {\n    await sleep(slow);\n  }\n  try {\n    const res: AxiosResponse<T, any> = await axios.get<T>(url, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      responseType: 'json',\n      signal: abortController.signal\n    });\n    \n    if (res.status === 200) {\n      return res.data;\n    }\n\n    return Promise.reject(res);\n  } catch (error: any) {\n    if (error.code !== \"ERR_CANCELED\") {\n      console.error(\"App fetcher GET error:\", error);\n    }\n    throw error;\n  }\n};"],"names":["icon","CheckBoxOutlineBlank","checkedIcon","CheckBox","label","name","options","dataLoading","placeholder","validate","disabled","props","formik","useFormikContext","FormControl","fullWidth","size","as","Autocomplete","id","onChange","event","value","setFieldValue","renderInput","params","TextField","variant","startCase","upperFirst","error","touched","errors","renderInputProps","renderOption","option","selected","Checkbox","checked","display","getOptionLabel","loading","loadingText","noOptionsText","autoHighlight","FormHelperText","render","err","helperText","FormControlLabel","control","values","e","target","InputLabel","Select","useDefaultNoneSelected","MenuItem","Typography","sx","color","map","opt","uid","multiline","minRows","InputProps","inputComponent","TextareaAutosize","inputProps","style","resize","minHeight","CreateFormFields","controlObject","type","DEFAULT_MAX_PAGE_PARAMS","limit","page","entityType","sleep","useState","url","setUrl","useDeepCompareEffect","restUrl","urlcat","BASE_SW_API","useSWRImmutable","httpGet","shouldRetryOnError","data","isValidating","isLoading","results","validating","handleClose","isEditMode","formikContext","formikContextRef","useRef","refetch","triggerRefetch","formFields","setFormFields","useFetchSwEntity","time","peopleListData","charactersError","peopleListLoading","starshipsList","starshipsError","starshipsLoading","vehiclesList","vehiclesError","vehiclesLoading","planetList","planetsError","speciesList","speciesError","speciesLoading","useEffect","defaultFormFields","current","resetForm","length","fields","index","findIndex","field","DialogTitle","Stack","direction","justifyContent","alignItems","IconButton","onClick","Date","getTime","CloudDownload","Close","Divider","DialogContent","spacing","Alert","severity","AlertTitle","Box","message","container","xs","multiple","disableCloseOnSelect","ChipProps","newFilmValidationSchema","Yup","title","required","director","min","openingCrawl","characters","starships","planets","species","vehicles","createNewFilm","film","onSuccess","onFailure","body","onFinally","abortController","axios","then","res","catch","console","log","finally","axiosPost","user","JSON","stringify","initValues","canon","onClose","open","useCallback","reason","errorMsg","setErrorMsg","initialValues","onSubmit","payload","undefined","response","validationSchema","Dialog","disableEscapeKeyDown","DialogActions","Button","startIcon","RestartAlt","handleReset","Save","submitForm","showDialog","setShowDialog","p","width","AddAPhotoOutlined","Promise","resolve","reject","setTimeout","slow","headers","responseType","status"],"sourceRoot":""}