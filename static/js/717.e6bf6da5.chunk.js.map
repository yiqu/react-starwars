{"version":3,"file":"static/js/717.e6bf6da5.chunk.js","mappings":"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","sources":["shared/firebase/utils.ts","personal-movies/hooks/useFetchPersonalFilms.ts","shared/components/skeleton/LoadingSkeleton.tsx","personal-movies/core/PersonalFilmCard.tsx","personal-movies/core/PersonalFilms.tsx","shared/components/date/DateDisplay.tsx","shared/components/progress/CircleProgress.tsx","shared/components/toolbar/Toolbar.tsx","shared/utils/sleep.js","shared/fetcber/axios.ts","shared/hooks/useIsMobile.ts","shared/models/general.model.ts","../node_modules/@mui/icons-material/TableChart.js","../node_modules/@mui/icons-material/ViewModule.js"],"sourcesContent":["import { FirebaseData } from \"../models/firebase.model\";\n\nexport const appendKeyFireData = <T>(fireData: T) => {\n  let res: FirebaseDataWithId<T>[] = [];\n  const keys = Object.keys(fireData ?? []);\n  keys.forEach((key) => {\n    res.push({\n      id: key,\n      ...((fireData as any)[key])\n    });\n  });\n  return res;\n};\n\nexport type FirebaseDataWithId<T> = T & {id: string};\n\nexport const convertFirebaseDataToList = <T>(fireData: FirebaseData<T>): T[] => {\n\n  const result: T[] = [];\n\n  if (fireData) {\n    const keys = Object.keys(fireData);\n    keys.forEach((key) => {\n      result.push({\n        fireId: key,\n        ...fireData[key],\n      });\n    });\n  }\n\n  return result;\n};\n","import { useState } from 'react';\nimport { HttpParams } from 'src/shared/models/http.model';\nimport useSWR from 'swr';\nimport { useDeepCompareEffect } from \"react-use\";\nimport urlcat from 'urlcat';\nimport { httpGet } from \"src/shared/fetcber/axios\";\nimport { convertFirebaseDataToList } from 'src/shared/firebase/utils';\nimport { FirebaseData } from 'src/shared/models/firebase.model';\nimport { StarwarFilmPersonal } from 'src/shared/models/starwars.model';\n\nconst BASE_URL = 'https://kq-1-1a499.firebaseio.com/';\n\nconst useFetchPersonalFilms = ({ user, params }: {user: string, params?: HttpParams}) => {\n\n  const [url, setUrl] = useState<string>();\n\n  useDeepCompareEffect(() => {\n    const restUrl = urlcat(BASE_URL, '/swdb/:user/added-films.json', { user: 'yqu', ...params });\n    setUrl(restUrl);\n  }, [user, params]);\n\n  const { data, isValidating, error, isLoading } = useSWR(\n    () => url ? url : null, \n    (url) => httpGet<FirebaseData<StarwarFilmPersonal>>(url, 2000),\n    {\n      shouldRetryOnError: false,\n      revalidateOnFocus: false,\n      revalidateIfStale: false,\n    }\n  );\n\n  return {\n    personalFilms: data ? convertFirebaseDataToList(data) : data,\n    personalFilmsLoading: isLoading,\n    personalFilmsValidating: isValidating,\n    personalFilmsError: error\n  };\n\n};\nexport default useFetchPersonalFilms;\n\n","import * as React from 'react';\nimport Skeleton from '@mui/material/Skeleton';\nimport Stack from '@mui/material/Stack';\nimport { times } from 'lodash';\nimport Grid from '@mui/material/Unstable_Grid2';\n\nconst LoadingSkeleton = ({ count }: { count: number }) => {\n\n  return (\n    <Grid direction=\"column\" padding={ 2 } xs={ 12 }>\n\n      <Grid xs={ 12 } md={ 6 }>\n        <Skeleton variant='text' sx={ {fontSize: '2rem'} }></Skeleton>\n      </Grid>\n\n      <Grid container spacing={ 2 }>\n        {\n          times(count, (index) => {\n            return (\n              <Grid key={ index } xs={ 12 } sm={ 12 } md >\n                <Stack direction=\"row\" sx={ { display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%'} }>\n                  <Skeleton variant='text' sx={ { fontSize: '2rem', width: '10rem'} } />\n                  <Skeleton variant='circular' width={ 40 } height={ 40 } />\n                </Stack>\n\n                <Skeleton variant='rectangular' height=\"30rem\" />\n              </Grid>\n            );\n          })\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LoadingSkeleton;","import { Card, CardMedia, CardContent, Stack, Typography, CardActions, Button, IconButton } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { getFilmFavoriteToggleTooltip } from \"src/core/utils/films.utils\";\nimport DateDisplay from \"src/shared/components/date/DateDisplay\";\nimport { StarwarFilmPersonal } from \"src/shared/models/starwars.model\";\n\nexport default function PersonalFilmCard({\n  title,\n  canon,\n  characters,\n  director,\n  fireId,\n  openingCrawl,\n  planets,\n  species,\n  starships,\n  vehicles }: StarwarFilmPersonal) {\n\n    return (\n      <Card sx={ {display:'flex',\n        flexDirection:'column', \n        justifyContent:'space-between'} } \n        elevation={ 4 }\n      >\n        <div>\n          <CardMedia\n            component=\"img\"\n            alt=\"poster\"\n            height=\"440\"\n            image={ `${process.env.PUBLIC_URL}/assets/film/sw-blk-logo.png` }\n            sx={ {backgroundColor: '#000', objectFit: 'contain'} }\n          />\n          <CardContent>\n            <Stack direction={ {lg: 'column', xl: 'row'} } justifyContent={ {xl:'space-between', lg:'flex-start'} }\n              marginBottom={ {lg:'10px', xl: '0px'} }>\n              <Typography gutterBottom variant=\"h5\" component={ Link } to={ `./${fireId}` } sx={ {fontFamily:'Poppins',\n              fontWeight:'500'} }>\n                { title }\n              </Typography>\n              <Typography variant=\"h5\" color='text.secondary' sx={ {fontWeight: '300'} }>\n              </Typography>\n            </Stack>\n          \n            <Stack spacing={ 1 }>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Released: <DateDisplay date={ 0 } format=\"MMM Do YYYY\" />\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Directed by: { director }\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Produced by: { 'producer' }\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.primary\">\n                { openingCrawl }\n              </Typography>\n            </Stack>\n          \n          </CardContent>\n        </div>\n      \n        <CardActions sx={ {display: 'flex', justifyContent: 'space-between'} }>\n          <div>\n            <Button size=\"small\" component={ Link } to={ `./${fireId}` }>\n              Learn More\n            </Button>\n          </div>\n        </CardActions>\n      </Card>\n    );\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport Grid from '@mui/material/Unstable_Grid2';\nimport useFetchPersonalFilms from '../hooks/useFetchPersonalFilms';\nimport LoadingSkeleton from \"src/shared/components/skeleton/LoadingSkeleton\";\nimport { Stack, Tooltip, IconButton } from '@mui/material';\nimport FilterInput from 'src/core/movies/movies/filter/FilterInput';\nimport MovieCard from 'src/core/movies/movies/MovieCard';\nimport ProgressCircle from 'src/shared/components/progress/CircleProgress';\nimport AppToolbar from 'src/shared/components/toolbar/Toolbar';\nimport { DataBlockDisplayMode } from 'src/shared/models/general.model';\nimport useScreenSize from 'src/shared/hooks/useIsMobile';\nimport { createSearchParams, Outlet, useNavigate, useSearchParams } from \"react-router-dom\";\nimport TableChartIcon from '@mui/icons-material/TableChart';\nimport ViewModuleIcon from '@mui/icons-material/ViewModule';\nimport { StarwarFilmPersonal } from 'src/shared/models/starwars.model';\nimport PersonalFilmCard from './PersonalFilmCard';\n\n\n\nexport default function PersonalFilms() {\n\n  const [refetch, triggerRefetch] = useState<number>(0);\n  const { isMobile } = useScreenSize();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentDisplayModeUrl = searchParams.get(\"moviePageDisplayMode\");\n  const [filmPageDisplayMode, setFilmPageDisplayMode] = useState<string | null>(currentDisplayModeUrl);\n\n  const { personalFilms, personalFilmsLoading, personalFilmsError, personalFilmsValidating } = \n    useFetchPersonalFilms({user: 'yqu', params: {fetchTime: refetch}});\n\n  const filmPageDisplayToggleHandler = () => {\n    const nextDisplayMode = {\n      moviePageDisplayMode: getNextDisplayState(filmPageDisplayMode)\n    };\n    setSearchParams(nextDisplayMode);\n  };\n\n  if (personalFilmsLoading) return <LoadingSkeleton count={ 4 } />;\n  if (personalFilmsError) return <div>Error Page</div>;\n\n  return (\n    <>\n      <AppToolbar \n        toolbarProps={ {\n        position:\"sticky\",\n        sx:{top: isMobile ? '56px':'64px'}\n        } }\n      >\n        <Grid container xs={ 12 } flexDirection={ { xs: 'row', sm: 'row' } } justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid xs={ 10 } sm={ 4 }>\n            <Stack direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n              { personalFilmsLoading && <ProgressCircle size={ 20 } /> }\n            </Stack>\n          </Grid>\n          <Grid xs={ 2 } sm={ 8 }>\n            <Stack direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\">\n              <Tooltip title={ `Switch to ${getNextDisplayState(filmPageDisplayMode)}` }>\n                <IconButton onClick={ filmPageDisplayToggleHandler }>\n                  { filmPageDisplayMode === DataBlockDisplayMode.CARD ? (<TableChartIcon />) : (<ViewModuleIcon  />) }\n                </IconButton>\n              </Tooltip>\n            </Stack>\n          </Grid>\n        </Grid>\n      </AppToolbar>\n\n      <Stack direction=\"column\" p={ 2 } width=\"100%\">\n        <Grid container disableEqualOverflow rowSpacing={ 4 }>\n          {personalFilms?.map((res: StarwarFilmPersonal) => {\n            return (\n              <Grid key={ res.fireId } xs={ 12 } sm={ 4 } smOffset={ 4 }>\n                <PersonalFilmCard { ...res } />\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Stack>\n    </>\n  );\n};\n\nconst getNextDisplayState = (current: any) => {\n  if (!current) {\n    return DataBlockDisplayMode.CARD;\n  }\n  return current === DataBlockDisplayMode.CARD ? DataBlockDisplayMode.TABLE : DataBlockDisplayMode.CARD;\n};","import { Box, Tooltip, Typography } from '@mui/material';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nexport interface DateDisplayProp {\n  date: string | number;\n  fromNow?: boolean;\n  format?: string;\n}\n\nconst DateDisplay = ({ date=0, fromNow=true, format=\"MM/DD/YY HH:mm\" }: DateDisplayProp) => {\n\n  return (\n    <Tooltip title={ date ? moment(date).format(format) : 'No date found' }>\n      <Typography component=\"span\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n        {date ? (<Moment date={ date } fromNow={ fromNow } format={ fromNow ? undefined: format } interval={ 60000 } />) : (<>N/A</>)}\n      </Typography>\n    </Tooltip>\n  );\n};\n\nexport default DateDisplay;","import * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Theme } from '@emotion/react';\nimport { SxProps } from '@mui/material';\n\nexport default function ProgressCircle({ size=40, color='grey.500', styleProps }: {size?: number, color?: string, styleProps?: SxProps<Theme>}) {\n  return (\n    <Stack sx={ { color: color, ...styleProps } } spacing={ 1 } direction=\"row\">\n      <CircularProgress color=\"inherit\" size={ size } />\n    </Stack>\n  );\n}","import { AppBar, Stack, Button, Tooltip, IconButton, AppBarTypeMap } from \"@mui/material\";\nimport { DataBlockDisplayMode } from \"src/shared/models/general.model\";\nimport Toolbar from '@mui/material/Toolbar';\nimport { GREY } from \"src/theme/palette\";\n\ninterface ToolbarProps {\n  toolbarProps: any;\n  children: any;\n}\n\nexport default function AppToolbar({ toolbarProps, children }: ToolbarProps) {\n  \n  return (\n    <AppBar elevation={ 0 } { ...toolbarProps }>\n      <Toolbar \n        variant=\"regular\" \n        sx={ {bgcolor: (theme) => theme.palette.mode === 'light' ? GREY[100] : null, \n          color: (theme) => theme.palette.mode === 'light' ? '#000' : null,\n          pr: 0\n        } }>\n        { children }\n      </Toolbar>\n    </AppBar>\n  );\n}","export function sleep(time) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { sleep } from \"../utils/sleep\";\n\nexport const httpGet = async <T>(url: string, slow = 0): Promise<T> => {\n  if (slow) {\n    await sleep(slow);\n  }\n  try {\n    const res: AxiosResponse<T, any> = await axios.get<T>(url, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      responseType: 'json'\n    });\n\n    if (res.status === 200) {\n      return res.data;\n    }\n\n    return Promise.reject(res);\n  } catch (error) {\n    console.error(\"App fetcher GET error:\", error);\n    throw error;\n  }\n};\n\n\nexport const httpGetCancellable = async <T>(url: string, abortController: AbortController, slow = 0): Promise<T> => {\n  if (slow) {\n    await sleep(slow);\n  }\n  try {\n    const res: AxiosResponse<T, any> = await axios.get<T>(url, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      responseType: 'json',\n      signal: abortController.signal\n    });\n    \n    if (res.status === 200) {\n      return res.data;\n    }\n\n    return Promise.reject(res);\n  } catch (error: any) {\n    if (error.code !== \"ERR_CANCELED\") {\n      console.error(\"App fetcher GET error:\", error);\n    }\n    throw error;\n  }\n};","import useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n/**\n * A media query string\n * which matches screen widths less than the screen size given by the breakpoint key (down)\n * @returns \n */\nconst useScreenSize = () => {\n\n  const theme = useTheme();\n\n  const isMobileScreenSize = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const isMediumSize = useMediaQuery(theme.breakpoints.down('md'));\n\n  const isLargeSize = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const isXlSize = useMediaQuery(theme.breakpoints.down('xl'));\n\n  return {\n    isMobile: isMobileScreenSize,\n    isMed: isMediumSize,\n    isLg: isLargeSize,\n    isXl: isXlSize\n  };\n\n};\n\nexport default useScreenSize;","export enum DataBlockDisplayMode {\n  TABLE = \"table\",\n  CARD = \"card\"\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 10.02h5V21h-5zM17 21h3c1.1 0 2-.9 2-2v-9h-5v11zm3-18H5c-1.1 0-2 .9-2 2v3h19V5c0-1.1-.9-2-2-2zM3 19c0 1.1.9 2 2 2h3V10H3v9z\"\n}), 'TableChart');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.67 5v6.5H9.33V5h5.34zm1 6.5H21V5h-5.33v6.5zm-1 7.5v-6.5H9.33V19h5.34zm1-6.5V19H21v-6.5h-5.33zm-7.34 0H3V19h5.33v-6.5zm0-1V5H3v6.5h5.33z\"\n}), 'ViewModule');\n\nexports.default = _default;"],"names":["convertFirebaseDataToList","fireData","result","Object","keys","forEach","key","push","fireId","user","params","useState","url","setUrl","useDeepCompareEffect","restUrl","urlcat","useSWR","httpGet","shouldRetryOnError","revalidateOnFocus","revalidateIfStale","data","isValidating","error","isLoading","personalFilms","personalFilmsLoading","personalFilmsValidating","personalFilmsError","count","direction","padding","xs","md","Skeleton","variant","sx","fontSize","container","spacing","times","index","sm","Stack","display","justifyContent","alignItems","width","height","PersonalFilmCard","title","director","canon","characters","openingCrawl","planets","species","starships","vehicles","Card","flexDirection","elevation","CardMedia","component","alt","image","process","backgroundColor","objectFit","CardContent","lg","xl","marginBottom","Typography","gutterBottom","Link","to","fontFamily","fontWeight","color","DateDisplay","date","format","CardActions","Button","size","PersonalFilms","refetch","isMobile","useScreenSize","useSearchParams","searchParams","setSearchParams","currentDisplayModeUrl","get","filmPageDisplayMode","useFetchPersonalFilms","fetchTime","toolbarProps","position","top","Tooltip","getNextDisplayState","IconButton","onClick","nextDisplayMode","moviePageDisplayMode","DataBlockDisplayMode","TableChart","ViewModule","p","disableEqualOverflow","rowSpacing","map","res","smOffset","current","fromNow","moment","undefined","interval","ProgressCircle","styleProps","AppToolbar","children","bgcolor","theme","palette","mode","GREY","pr","sleep","time","Promise","resolve","reject","setTimeout","slow","axios","headers","responseType","status","console","useTheme","useMediaQuery","breakpoints","down","isMed","isLg","isXl","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}